diff --git a/.gitignore b/.gitignore
old mode 100644
new mode 100755
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
old mode 100644
new mode 100755
index 7ac24c7..8eb805c
--- a/.idea/gradle.xml
+++ b/.idea/gradle.xml
@@ -9,6 +9,7 @@
           <set>
             <option value="$PROJECT_DIR$" />
             <option value="$PROJECT_DIR$/app" />
+            <option value="$PROJECT_DIR$/linkedin-sdk" />
           </set>
         </option>
         <option name="resolveModulePerSourceSet" value="false" />
diff --git a/.idea/misc.xml b/.idea/misc.xml
old mode 100644
new mode 100755
diff --git a/.idea/modules.xml b/.idea/modules.xml
old mode 100644
new mode 100755
index 0452e99..76ebfb4
--- a/.idea/modules.xml
+++ b/.idea/modules.xml
@@ -4,6 +4,7 @@
     <modules>
       <module fileurl="file://$PROJECT_DIR$/Womentor.iml" filepath="$PROJECT_DIR$/Womentor.iml" />
       <module fileurl="file://$PROJECT_DIR$/app/app.iml" filepath="$PROJECT_DIR$/app/app.iml" />
+      <module fileurl="file://$PROJECT_DIR$/linkedin-sdk/linkedin-sdk.iml" filepath="$PROJECT_DIR$/linkedin-sdk/linkedin-sdk.iml" />
     </modules>
   </component>
 </project>
\ No newline at end of file
diff --git a/.idea/runConfigurations.xml b/.idea/runConfigurations.xml
old mode 100644
new mode 100755
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
old mode 100644
new mode 100755
diff --git a/README.md b/README.md
old mode 100644
new mode 100755
diff --git a/app/.gitignore b/app/.gitignore
old mode 100644
new mode 100755
diff --git a/app/build.gradle b/app/build.gradle
old mode 100644
new mode 100755
index 68dbfd3..e074c29
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -33,10 +33,13 @@ dependencies {
     compile 'com.google.firebase:firebase-storage:11.8.0'
     compile 'com.google.firebase:firebase-auth:11.8.0'
     compile 'com.android.support:cardview-v7:26.0.0-alpha1'
-    compile 'me.gujun.android.taggroup:library:1.4@aar'
-    compile 'com.anton46:collection-picker:1.0.2'
-    compile 'com.joooonho:selectableroundedimageview:1.0.1'
-
+    compile project(path: ':linkedin-sdk')
 }
 
+
+
+
+
+
+
 apply plugin: 'com.google.gms.google-services'
\ No newline at end of file
diff --git a/app/google-services.json b/app/google-services.json
old mode 100644
new mode 100755
diff --git a/app/proguard-rules.pro b/app/proguard-rules.pro
old mode 100644
new mode 100755
diff --git a/app/src/androidTest/java/me/ancyphilip/womentor/ExampleInstrumentedTest.java b/app/src/androidTest/java/me/ancyphilip/womentor/ExampleInstrumentedTest.java
old mode 100644
new mode 100755
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
old mode 100644
new mode 100755
index d299f6d..4fdecb7
--- a/app/src/main/AndroidManifest.xml
+++ b/app/src/main/AndroidManifest.xml
@@ -20,7 +20,6 @@
             </intent-filter>
         </activity>
         <activity android:name=".RegistrationActivity" />
-        <activity android:name=".DiscoverActivity" />
         <activity android:name=".LoginActivity" />
         <activity android:name=".SettingsActivity" />
         <activity
diff --git a/app/src/main/ic_woman-web.png b/app/src/main/ic_woman-web.png
old mode 100644
new mode 100755
diff --git a/app/src/main/java/me/ancyphilip/womentor/Cards/arrayAdapter.java b/app/src/main/java/me/ancyphilip/womentor/Cards/arrayAdapter.java
old mode 100644
new mode 100755
index d073d3a..4bb7aa2
--- a/app/src/main/java/me/ancyphilip/womentor/Cards/arrayAdapter.java
+++ b/app/src/main/java/me/ancyphilip/womentor/Cards/arrayAdapter.java
@@ -20,6 +20,7 @@ import me.ancyphilip.womentor.R;
  */
 
 public class arrayAdapter extends ArrayAdapter<cards> {
+    Context context;
 
     public arrayAdapter(Context context, int resourceId, List<cards> items) {
         super(context, resourceId, items);
diff --git a/app/src/main/java/me/ancyphilip/womentor/Cards/cards.java b/app/src/main/java/me/ancyphilip/womentor/Cards/cards.java
old mode 100644
new mode 100755
diff --git a/app/src/main/java/me/ancyphilip/womentor/Chat/ChatActivity.java b/app/src/main/java/me/ancyphilip/womentor/Chat/ChatActivity.java
old mode 100644
new mode 100755
index f88f108..e0098cf
--- a/app/src/main/java/me/ancyphilip/womentor/Chat/ChatActivity.java
+++ b/app/src/main/java/me/ancyphilip/womentor/Chat/ChatActivity.java
@@ -1,26 +1,12 @@
 package me.ancyphilip.womentor.Chat;
 
-import android.provider.ContactsContract;
 import android.support.v7.app.AppCompatActivity;
 import android.os.Bundle;
 import android.support.v7.widget.LinearLayoutManager;
 import android.support.v7.widget.RecyclerView;
-import android.view.View;
-import android.widget.Button;
-import android.widget.EditText;
-
-import com.google.firebase.auth.FirebaseAuth;
-import com.google.firebase.database.ChildEventListener;
-import com.google.firebase.database.DataSnapshot;
-import com.google.firebase.database.DatabaseError;
-import com.google.firebase.database.DatabaseReference;
-import com.google.firebase.database.FirebaseDatabase;
-import com.google.firebase.database.ValueEventListener;
 
 import java.util.ArrayList;
-import java.util.HashMap;
 import java.util.List;
-import java.util.Map;
 
 import me.ancyphilip.womentor.Matches.MatchesAdapter;
 import me.ancyphilip.womentor.Matches.MatchesObject;
@@ -30,133 +16,25 @@ public class ChatActivity extends AppCompatActivity {
     private RecyclerView mRecyclerView;
     private RecyclerView.Adapter mChatAdapter;
     private RecyclerView.LayoutManager mChatLayoutManager;
-    private String currentUserID, matchId;
-    private EditText mSendEditText;
-    private Button msendButton;
 
-    DatabaseReference mDatabaseUser, mDatabaseChat;
-    private String chatId;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_chat);
 
-        matchId = getIntent().getExtras().getString("matchId");
-        currentUserID = FirebaseAuth.getInstance().getCurrentUser().getUid();
-        mDatabaseUser = FirebaseDatabase.getInstance().getReference().child("Users")
-                .child(currentUserID).child("connections").child("matches").child(matchId)
-                .child("ChatId");
-        mDatabaseChat = FirebaseDatabase.getInstance().getReference().child("Chat");
-
-        getChatId();
         mRecyclerView = findViewById(R.id.recyclerView);
         mRecyclerView.setNestedScrollingEnabled(false);
-        mRecyclerView.setHasFixedSize(false);
+        mRecyclerView.setHasFixedSize(true);
 
         mChatLayoutManager = new LinearLayoutManager(ChatActivity.this);
         mRecyclerView.setLayoutManager(mChatLayoutManager);
         mChatAdapter = new ChatAdapter(getDataSetChat(), ChatActivity.this);
         mRecyclerView.setAdapter(mChatAdapter);
 
-        mSendEditText = findViewById(R.id.message);
-        msendButton = findViewById(R.id.send);
-        msendButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                sendMessage();
-            }
-        });
-
-    }
-
-    private void sendMessage() {
-
-        String sendMessageText = mSendEditText.getText().toString();
-        if (!sendMessageText.isEmpty()) {
-            DatabaseReference newMessagedb = mDatabaseChat.push();
-            Map newMessage = new HashMap();
-            newMessage.put("createdByUser", currentUserID);
-            newMessage.put("text", sendMessageText);
-
-            newMessagedb.setValue(newMessage);
-        }
-        mSendEditText.setText(null);
     }
 
-    private void getChatId() {
-        mDatabaseUser.addListenerForSingleValueEvent(new ValueEventListener() {
-            @Override
-            public void onDataChange(DataSnapshot dataSnapshot) {
-                if (dataSnapshot.exists()) {
-                    chatId = dataSnapshot.getValue().toString();
-                    mDatabaseChat = mDatabaseChat.child(chatId);
-                    getChatMessages();
-                }
-            }
-
-            @Override
-            public void onCancelled(DatabaseError databaseError) {
-
-            }
-        });
-    }
-
-    private void getChatMessages() {
-        mDatabaseChat.addChildEventListener(new ChildEventListener() {
-            @Override
-            public void onChildAdded(DataSnapshot dataSnapshot, String s) {
-
-                if (dataSnapshot.exists()) {
-                    String message = null;
-                    String createdByUser = null;
-
-                    if (dataSnapshot.child("text").getValue() != null) {
-                        message = dataSnapshot.child("text").getValue().toString();
-                    }
-
-                    if (dataSnapshot.child("createdByUser").getValue() != null) {
-                        createdByUser = dataSnapshot.child("createdByUser").getValue().toString();
-                    }
-
-                    if (message != null && createdByUser != null) {
-                        Boolean currentUserBoolean = false;
-                        if (createdByUser.equals(currentUserID)) {
-                            currentUserBoolean = true;
-                        }
-                        ChatObject newMessage = new ChatObject(message, currentUserBoolean);
-                        resultsChat.add(newMessage);
-                        mChatAdapter.notifyDataSetChanged();
-                    }
-                }
-            }
-
-            @Override
-            public void onChildChanged(DataSnapshot dataSnapshot, String s) {
-
-            }
-
-            @Override
-            public void onChildRemoved(DataSnapshot dataSnapshot) {
-
-            }
-
-            @Override
-            public void onChildMoved(DataSnapshot dataSnapshot, String s) {
-
-            }
-
-            @Override
-            public void onCancelled(DatabaseError databaseError) {
-
-            }
-        });
-    }
-
-
     private List<ChatObject> resultsChat = new ArrayList<>();
-
-    private List<ChatObject> getDataSetChat() {
-        return resultsChat;
+    private List<ChatObject> getDataSetChat() { return resultsChat;
     }
 }
diff --git a/app/src/main/java/me/ancyphilip/womentor/Chat/ChatAdapter.java b/app/src/main/java/me/ancyphilip/womentor/Chat/ChatAdapter.java
old mode 100644
new mode 100755
index e903918..a37f425
--- a/app/src/main/java/me/ancyphilip/womentor/Chat/ChatAdapter.java
+++ b/app/src/main/java/me/ancyphilip/womentor/Chat/ChatAdapter.java
@@ -1,13 +1,13 @@
 package me.ancyphilip.womentor.Chat;
 
 import android.content.Context;
-import android.graphics.Color;
 import android.support.v7.widget.RecyclerView;
-import android.view.Gravity;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 
+import com.bumptech.glide.Glide;
+
 import java.util.List;
 
 import me.ancyphilip.womentor.R;
@@ -17,17 +17,17 @@ import me.ancyphilip.womentor.R;
  */
 
 public class ChatAdapter extends RecyclerView.Adapter<ChatViewHolder> {
-    private List<ChatObject> chatList;
+    private List<ChatObject> chatObjectList;
     private Context context;
 
-    public ChatAdapter(List<ChatObject> chatList, Context context) {
-        this.chatList = chatList;
+    public ChatAdapter(List<ChatObject> chatObjectList, Context context) {
+        this.chatObjectList = chatObjectList;
         this.context = context;
     }
 
     @Override
     public ChatViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
-        View layoutView = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_chat, null, false);
+        View layoutView = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_matches, null, false);
         RecyclerView.LayoutParams lp = new RecyclerView.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);
         layoutView.setLayoutParams(lp);
         ChatViewHolder rcv = new ChatViewHolder(layoutView);
@@ -36,21 +36,11 @@ public class ChatAdapter extends RecyclerView.Adapter<ChatViewHolder> {
 
     @Override
     public void onBindViewHolder(ChatViewHolder holder, int position) {
-        holder.mMessage.setText(chatList.get(position).getMessage());
-        if (chatList.get(position).getCurrentUser()) {
-            holder.mMessage.setGravity(Gravity.END);
-            holder.mMessage.setTextColor(Color.parseColor("#404040"));
-            holder.mContainer.setBackgroundColor(Color.parseColor("#F4F4F4"));
-        } else {
-            holder.mMessage.setGravity(Gravity.START);
-            holder.mMessage.setTextColor(Color.parseColor("#FFFFFF"));
-            holder.mContainer.setBackgroundColor(Color.parseColor("#2DB4C8"));
-        }
 
     }
 
     @Override
     public int getItemCount() {
-        return this.chatList.size();
+        return this.chatObjectList.size();
     }
 }
diff --git a/app/src/main/java/me/ancyphilip/womentor/Chat/ChatObject.java b/app/src/main/java/me/ancyphilip/womentor/Chat/ChatObject.java
old mode 100644
new mode 100755
index d7c2465..f2c09e8
--- a/app/src/main/java/me/ancyphilip/womentor/Chat/ChatObject.java
+++ b/app/src/main/java/me/ancyphilip/womentor/Chat/ChatObject.java
@@ -6,30 +6,13 @@ package me.ancyphilip.womentor.Chat;
 
 public class ChatObject {
 
+    private String userId;
 
-    private String message;
-    private Boolean currentUser;
 
+    public ChatObject() {
 
-    public ChatObject(String message, Boolean currentUser) {
-        this.message = message;
-        this.currentUser = currentUser;
-    }
-
-
-    public String getMessage() {
-        return message;
-    }
 
-    public void setMessage(String message) {
-        this.message = message;
     }
 
-    public Boolean getCurrentUser() {
-        return currentUser;
-    }
 
-    public void setCurrentUser(Boolean currentUser) {
-        this.currentUser = currentUser;
-    }
 }
diff --git a/app/src/main/java/me/ancyphilip/womentor/Chat/ChatViewHolder.java b/app/src/main/java/me/ancyphilip/womentor/Chat/ChatViewHolder.java
old mode 100644
new mode 100755
index e77a371..7d0b405
--- a/app/src/main/java/me/ancyphilip/womentor/Chat/ChatViewHolder.java
+++ b/app/src/main/java/me/ancyphilip/womentor/Chat/ChatViewHolder.java
@@ -5,7 +5,6 @@ import android.os.Bundle;
 import android.support.v7.widget.RecyclerView;
 import android.view.View;
 import android.widget.ImageView;
-import android.widget.LinearLayout;
 import android.widget.TextView;
 
 import me.ancyphilip.womentor.R;
@@ -15,17 +14,12 @@ import me.ancyphilip.womentor.R;
  */
 
 public class ChatViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {
-    public TextView mMessage;
-    public LinearLayout mContainer;
+
 
     public ChatViewHolder(View itemView) {
         super(itemView);
         itemView.setOnClickListener(this);
 
-        mMessage = itemView.findViewById(R.id.message);
-        mContainer = itemView.findViewById(R.id.container);
-
-
     }
 
     @Override
diff --git a/app/src/main/java/me/ancyphilip/womentor/ChooseLoginOrRegistrationActivity.java b/app/src/main/java/me/ancyphilip/womentor/ChooseLoginOrRegistrationActivity.java
old mode 100644
new mode 100755
diff --git a/app/src/main/java/me/ancyphilip/womentor/DiscoverActivity.java b/app/src/main/java/me/ancyphilip/womentor/DiscoverActivity.java
deleted file mode 100644
index 3089bf0..0000000
--- a/app/src/main/java/me/ancyphilip/womentor/DiscoverActivity.java
+++ /dev/null
@@ -1,246 +0,0 @@
-package me.ancyphilip.womentor;
-
-import android.app.Activity;
-import android.content.Context;
-import android.os.Bundle;
-import android.text.TextUtils;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.AdapterView;
-import android.widget.ArrayAdapter;
-import android.widget.BaseAdapter;
-import android.widget.ListView;
-import android.widget.Spinner;
-import android.widget.TextView;
-import android.widget.Toast;
-
-import com.google.firebase.database.DataSnapshot;
-import com.google.firebase.database.DatabaseError;
-import com.google.firebase.database.DatabaseReference;
-import com.google.firebase.database.FirebaseDatabase;
-import com.google.firebase.database.Query;
-import com.google.firebase.database.ValueEventListener;
-
-import java.util.ArrayList;
-
-import me.ancyphilip.womentor.Models.DomainModel;
-import me.ancyphilip.womentor.Models.UserModel;
-
-public class DiscoverActivity extends Activity {
-
-    private ListView lv;
-    private UserAdapter mUserAdapter;
-    private ArrayList<UserModel> mUserModels = new ArrayList<>();
-    private ArrayList<DomainModel> mDomainModels = new ArrayList<>();
-    private DatabaseReference usersDb;
-    Spinner spin;
-
-    @Override
-    public void onCreate(Bundle saveInstanceState) {
-        super.onCreate(saveInstanceState);
-        setContentView(R.layout.activity_disover);
-
-        lv = (ListView) findViewById(R.id.usersList);
-        spin = (Spinner) findViewById(R.id.domainSpinner);
-
-        fetchDomains();
-
-        fetchUsers(null);
-    }
-
-    private void fetchDomains() {
-
-        DatabaseReference domainsDb = FirebaseDatabase.getInstance().getReference().child("Domains");
-        final Query query = domainsDb.orderByKey();
-        query.addValueEventListener(new ValueEventListener() {
-            @Override
-            public void onDataChange(DataSnapshot dataSnapshot) {
-                for (DataSnapshot postSnapshot : dataSnapshot.getChildren()) {
-                    mDomainModels.add(postSnapshot.getValue(DomainModel.class));
-                }
-                DomainSpinnerAdapter domainSpinnerAdapter = new DomainSpinnerAdapter(getApplicationContext(),
-                                                                                     mDomainModels);
-                spin.setAdapter(domainSpinnerAdapter);
-                spin.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
-                    @Override
-                    public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {
-                        DomainModel domainModel = mDomainModels.get(i);
-                        fetchUsers(domainModel.getId());
-                        Toast.makeText(getApplicationContext(), "clicked " + domainModel.getName(), Toast.LENGTH_SHORT)
-                             .show();
-                    }
-
-                    @Override
-                    public void onNothingSelected(AdapterView<?> adapterView) {
-
-                    }
-                });
-
-            }
-
-            @Override
-            public void onCancelled(DatabaseError databaseError) {
-
-            }
-        });
-    }
-
-    private void fetchUsers(final String domain) {
-
-
-        usersDb = FirebaseDatabase.getInstance().getReference().child("Users");
-        final Query query = usersDb.orderByKey();
-        query.addValueEventListener(new ValueEventListener() {
-            @Override
-            public void onDataChange(DataSnapshot dataSnapshot) {
-                mUserModels.clear();
-                for (final DataSnapshot postSnapshot : dataSnapshot.getChildren()) {
-                    if (TextUtils.isEmpty(domain)) {
-                        mUserModels.add(postSnapshot.getValue(UserModel.class));
-                    } else {
-                        DatabaseReference domains = usersDb.child(postSnapshot.getKey());
-                        domains.child("domains").addValueEventListener(new ValueEventListener() {
-                            @Override
-                            public void onDataChange(DataSnapshot dataSnapshot) {
-                                Iterable<DataSnapshot> snapshots = dataSnapshot.getChildren();
-                                for (DataSnapshot dataSnapshot1: snapshots) {
-                                    if (dataSnapshot1.getKey().equals(domain)) {
-                                        mUserModels.add(postSnapshot.getValue(UserModel.class));
-                                    }
-                                }
-                                mUserAdapter = new UserAdapter(mUserModels, getApplicationContext());
-
-                                lv.setAdapter(mUserAdapter);
-                                mUserAdapter.notifyDataSetChanged();
-
-                            }
-                            @Override
-                            public void onCancelled(DatabaseError databaseError) {
-                            }
-                        });
-                    }
-
-                }
-
-                mUserAdapter = new UserAdapter(mUserModels, getApplicationContext());
-
-                lv.setAdapter(mUserAdapter);
-                mUserAdapter.notifyDataSetChanged();
-                lv.setOnItemClickListener(new AdapterView.OnItemClickListener() {
-                    @Override
-                    public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
-                        UserModel userModel = mUserModels.get(i);
-                        Toast.makeText(getApplicationContext(), "clicked " + userModel.getName(), Toast.LENGTH_SHORT)
-                             .show();
-                    }
-                });
-            }
-
-            @Override
-            public void onCancelled(DatabaseError databaseError) {
-
-            }
-        });
-    }
-
-    private class UserAdapter extends ArrayAdapter<UserModel> implements View.OnClickListener {
-        private ArrayList<UserModel> dataSet;
-        Context mContext;
-
-        // View lookup cache
-        private class ViewHolder {
-            TextView name;
-            TextView email;
-            TextView phone;
-        }
-
-        public UserAdapter(ArrayList<UserModel> data, Context context) {
-            super(context, R.layout.discover_row_item, data);
-            this.dataSet = data;
-            this.mContext = context;
-
-        }
-
-        @Override
-        public void onClick(View v) {
-            int position = (Integer) v.getTag();
-            Object object = getItem(position);
-            UserModel dataModel = (UserModel) object;
-            Toast.makeText(getContext(), dataModel.getName() + " .. is shown in " + position, Toast.LENGTH_SHORT)
-                 .show();
-        }
-
-        private int lastPosition = -1;
-
-        @Override
-        public View getView(int position, View convertView, ViewGroup parent) {
-            // Get the data item for this position
-            UserModel dataModel = getItem(position);
-            // Check if an existing view is being reused, otherwise inflate the view
-            ViewHolder viewHolder; // view lookup cache stored in tag
-
-            final View result;
-
-            if (convertView == null) {
-
-                viewHolder = new ViewHolder();
-                LayoutInflater inflater = LayoutInflater.from(getContext());
-                convertView = inflater.inflate(R.layout.discover_row_item, parent, false);
-                viewHolder.name = (TextView) convertView.findViewById(R.id.name);
-                viewHolder.email = (TextView) convertView.findViewById(R.id.email);
-                viewHolder.phone = (TextView) convertView.findViewById(R.id.phone);
-
-                result = convertView;
-
-                convertView.setTag(viewHolder);
-            } else {
-                viewHolder = (ViewHolder) convertView.getTag();
-                result = convertView;
-            }
-
-            viewHolder.name.setText(dataModel.getName());
-            viewHolder.email.setText(dataModel.getEmail());
-            viewHolder.phone.setText(dataModel.getPhone());
-            // Return the completed view to render on screen
-            return convertView;
-        }
-    }
-
-
-    public class DomainSpinnerAdapter extends BaseAdapter {
-        Context context;
-        ArrayList<DomainModel> domains;
-        LayoutInflater inflater;
-
-        public DomainSpinnerAdapter(Context applicationContext, ArrayList<DomainModel> domainModels) {
-            this.context = applicationContext;
-            this.domains = domainModels;
-            inflater = (LayoutInflater.from(applicationContext));
-        }
-
-        @Override
-        public int getCount() {
-            return domains.size();
-        }
-
-        @Override
-        public Object getItem(int i) {
-            return null;
-        }
-
-        @Override
-        public long getItemId(int i) {
-            return 0;
-        }
-
-        @Override
-        public View getView(int i, View view, ViewGroup viewGroup) {
-            view = inflater.inflate(R.layout.domain_spinner_item, null);
-            TextView names = (TextView) view.findViewById(R.id.domainText);
-            names.setText(domains.get(i).getName());
-            return view;
-        }
-    }
-
-}
diff --git a/app/src/main/java/me/ancyphilip/womentor/LoginActivity.java b/app/src/main/java/me/ancyphilip/womentor/LoginActivity.java
old mode 100644
new mode 100755
index a2bb0cc..7d37558
--- a/app/src/main/java/me/ancyphilip/womentor/LoginActivity.java
+++ b/app/src/main/java/me/ancyphilip/womentor/LoginActivity.java
@@ -55,7 +55,7 @@ public class LoginActivity extends AppCompatActivity {
                     public void onComplete(@NonNull Task<AuthResult> task) {
 
                         if(!task.isSuccessful()) {
-                            Toast.makeText(LoginActivity.this, task.getException().getMessage(),Toast.LENGTH_LONG).show();
+                            Toast.makeText(LoginActivity.this, "login error",Toast.LENGTH_LONG).show();
                         }
 
                     }
diff --git a/app/src/main/java/me/ancyphilip/womentor/MainActivity.java b/app/src/main/java/me/ancyphilip/womentor/MainActivity.java
old mode 100644
new mode 100755
index 6751f5b..92ae54c
--- a/app/src/main/java/me/ancyphilip/womentor/MainActivity.java
+++ b/app/src/main/java/me/ancyphilip/womentor/MainActivity.java
@@ -15,18 +15,15 @@ import com.google.firebase.database.DataSnapshot;
 import com.google.firebase.database.DatabaseError;
 import com.google.firebase.database.DatabaseReference;
 import com.google.firebase.database.FirebaseDatabase;
-import com.google.firebase.database.Query;
 import com.google.firebase.database.ValueEventListener;
 import com.lorentzos.flingswipe.SwipeFlingAdapterView;
 
-import java.io.Serializable;
 import java.util.ArrayList;
 import java.util.List;
 
 import me.ancyphilip.womentor.Cards.arrayAdapter;
 import me.ancyphilip.womentor.Cards.cards;
 import me.ancyphilip.womentor.Matches.MatchesActivity;
-import me.ancyphilip.womentor.Models.DomainModel;
 
 public class MainActivity extends AppCompatActivity {
     private cards cards_data[];
@@ -39,8 +36,6 @@ public class MainActivity extends AppCompatActivity {
     private String currentUId;
     private DatabaseReference usersDb;
 
-    private ArrayList<DomainModel> domainsList = new ArrayList<DomainModel>();
-
     ListView listView;
     List<cards> rowItems;
 
@@ -123,14 +118,8 @@ public class MainActivity extends AppCompatActivity {
             public void onDataChange(DataSnapshot dataSnapshot) {
                 if (dataSnapshot.exists()) {
                     Toast.makeText(MainActivity.this, "new connection", Toast.LENGTH_LONG).show();
-
-                    String key=FirebaseDatabase.getInstance().getReference().child("Chat").push().getKey();
-                    //usersDb.child(dataSnapshot.getKey()).child("connections").child("matches").child(currentUId).setValue(true);
-                    usersDb.child(dataSnapshot.getKey()).child("connections").child("matches").child(currentUId).child("ChatId").setValue(key);
-
-                    //usersDb.child(currentUId).child("connections").child("matches").child(dataSnapshot.getKey()).setValue(true);
-                    usersDb.child(currentUId).child("connections").child("matches").child(dataSnapshot.getKey()).child("ChatId").setValue(key);
-
+                    usersDb.child(dataSnapshot.getKey()).child("connections").child("matches").child(currentUId).setValue(true);
+                    usersDb.child(currentUId).child("connections").child("matches").child(dataSnapshot.getKey()).setValue(true);
                 }
             }
 
@@ -233,32 +222,7 @@ public class MainActivity extends AppCompatActivity {
 
 
     public void goToSettings(View view) {
-        final Intent intent = new Intent(MainActivity.this, SettingsActivity.class);
-        DatabaseReference domainsDb = FirebaseDatabase.getInstance().getReference().child("Domains");
-        final Query query = domainsDb.orderByKey();
-        query.addValueEventListener(new ValueEventListener() {
-            @Override
-            public void onDataChange(DataSnapshot dataSnapshot) {
-                for (DataSnapshot postSnapshot: dataSnapshot.getChildren()) {
-                    domainsList.add(postSnapshot.getValue(DomainModel.class));
-                }
-                Bundle args = new Bundle();
-                args.putSerializable("ARRAYLIST",(Serializable)domainsList);
-                intent.putExtra("BUNDLE",args);
-                startActivity(intent);
-            }
-            @Override
-            public void onCancelled(DatabaseError databaseError) {
-
-            }
-        });
-
-
-    }
-
-
-    public void goToDiscover(View view) {
-        Intent intent = new Intent(MainActivity.this, DiscoverActivity.class);
+        Intent intent = new Intent(MainActivity.this, SettingsActivity.class);
         startActivity(intent);
 
     }
diff --git a/app/src/main/java/me/ancyphilip/womentor/Matches/MatchesActivity.java b/app/src/main/java/me/ancyphilip/womentor/Matches/MatchesActivity.java
old mode 100644
new mode 100755
diff --git a/app/src/main/java/me/ancyphilip/womentor/Matches/MatchesAdapter.java b/app/src/main/java/me/ancyphilip/womentor/Matches/MatchesAdapter.java
old mode 100644
new mode 100755
diff --git a/app/src/main/java/me/ancyphilip/womentor/Matches/MatchesObject.java b/app/src/main/java/me/ancyphilip/womentor/Matches/MatchesObject.java
old mode 100644
new mode 100755
diff --git a/app/src/main/java/me/ancyphilip/womentor/Matches/MatchesViewHolder.java b/app/src/main/java/me/ancyphilip/womentor/Matches/MatchesViewHolder.java
old mode 100644
new mode 100755
diff --git a/app/src/main/java/me/ancyphilip/womentor/Models/DomainModel.java b/app/src/main/java/me/ancyphilip/womentor/Models/DomainModel.java
deleted file mode 100644
index 73b262f..0000000
--- a/app/src/main/java/me/ancyphilip/womentor/Models/DomainModel.java
+++ /dev/null
@@ -1,33 +0,0 @@
-package me.ancyphilip.womentor.Models;
-
-import java.io.Serializable;
-
-public class DomainModel implements Serializable{
-
-    private String id;
-    private String name;
-
-    public DomainModel() {
-    }
-
-    public String getId() {
-        return id;
-    }
-
-    public void setId(String id) {
-        this.id = id;
-    }
-
-    public DomainModel(String id, String name) {
-        this.id = id;
-        this.name = name;
-    }
-
-    public String getName() {
-        return name;
-    }
-
-    public void setName(String name) {
-        this.name = name;
-    }
-}
diff --git a/app/src/main/java/me/ancyphilip/womentor/Models/UserModel.java b/app/src/main/java/me/ancyphilip/womentor/Models/UserModel.java
deleted file mode 100644
index 77e314b..0000000
--- a/app/src/main/java/me/ancyphilip/womentor/Models/UserModel.java
+++ /dev/null
@@ -1,45 +0,0 @@
-package me.ancyphilip.womentor.Models;
-
-public class UserModel {
-
-    public UserModel(String name, String phone, String email) {
-        this.name = name;
-        this.phone = phone;
-        this.email = email;
-    }
-
-    public UserModel() {
-    }
-
-    private String name;
-
-    private String phone;
-
-    private String email;
-
-
-    public String getName() {
-        return name;
-    }
-
-    public void setName(String name) {
-        this.name = name;
-    }
-
-    public String getPhone() {
-        return phone;
-    }
-
-    public void setPhone(String phone) {
-        this.phone = phone;
-    }
-
-    public String getEmail() {
-        return email;
-    }
-
-    public void setEmail(String email) {
-        this.email = email;
-    }
-
-}
diff --git a/app/src/main/java/me/ancyphilip/womentor/RegistrationActivity.java b/app/src/main/java/me/ancyphilip/womentor/RegistrationActivity.java
old mode 100644
new mode 100755
diff --git a/app/src/main/java/me/ancyphilip/womentor/SettingsActivity.java b/app/src/main/java/me/ancyphilip/womentor/SettingsActivity.java
old mode 100644
new mode 100755
index d712143..280d209
--- a/app/src/main/java/me/ancyphilip/womentor/SettingsActivity.java
+++ b/app/src/main/java/me/ancyphilip/womentor/SettingsActivity.java
@@ -2,23 +2,23 @@ package me.ancyphilip.womentor;
 
 import android.app.Activity;
 import android.content.Intent;
+import android.content.pm.PackageInfo;
+import android.content.pm.PackageManager;
+import android.content.pm.Signature;
 import android.graphics.Bitmap;
 import android.net.Uri;
-import android.os.Build;
-import android.os.Bundle;
 import android.provider.MediaStore;
 import android.support.annotation.NonNull;
-import android.support.annotation.RequiresApi;
 import android.support.v7.app.AppCompatActivity;
+import android.os.Bundle;
+import android.util.Base64;
+import android.util.Log;
 import android.view.View;
 import android.widget.Button;
 import android.widget.EditText;
 import android.widget.ImageView;
 import android.widget.Toast;
 
-import com.anton46.collectionitempicker.CollectionPicker;
-import com.anton46.collectionitempicker.Item;
-import com.anton46.collectionitempicker.OnItemClickListener;
 import com.bumptech.glide.Glide;
 import com.google.android.gms.tasks.OnFailureListener;
 import com.google.android.gms.tasks.OnSuccessListener;
@@ -27,52 +27,44 @@ import com.google.firebase.database.DataSnapshot;
 import com.google.firebase.database.DatabaseError;
 import com.google.firebase.database.DatabaseReference;
 import com.google.firebase.database.FirebaseDatabase;
-import com.google.firebase.database.Query;
 import com.google.firebase.database.ValueEventListener;
 import com.google.firebase.storage.FirebaseStorage;
 import com.google.firebase.storage.StorageReference;
 import com.google.firebase.storage.UploadTask;
+import com.linkedin.platform.APIHelper;
+import com.linkedin.platform.LISessionManager;
+import com.linkedin.platform.errors.LIApiError;
+import com.linkedin.platform.errors.LIAuthError;
+import com.linkedin.platform.listeners.ApiListener;
+import com.linkedin.platform.listeners.ApiResponse;
+import com.linkedin.platform.listeners.AuthListener;
+import com.linkedin.platform.utils.Scope;
 
 import java.io.ByteArrayOutputStream;
 import java.io.IOException;
-import java.util.ArrayList;
+import java.security.MessageDigest;
 import java.util.HashMap;
-import java.util.List;
 import java.util.Map;
 
-import me.ancyphilip.womentor.Models.DomainModel;
-import me.gujun.android.taggroup.TagGroup;
-
 public class SettingsActivity extends AppCompatActivity {
 
 
-    private EditText myNameField;
-    private EditText mPhoneField;
-    private Button mBack;
-    private Button mConfirm;
+    private EditText myNameField, mPhoneField;
+    private Button mBack, mConfirm;
     private ImageView mProfileImage;
 
     private FirebaseAuth mAuth;
     private DatabaseReference mUserDatabase;
 
-    private String userId;
-    private String name;
-    private String phone;
-    private String userType;
-    private String profileImgUrl;
+
+    private String userId, name, phone, profileImgUrl, userType;
     private Uri resultUri;
-    private ArrayList<DomainModel> domainsList = new ArrayList<DomainModel>();
-    private HashMap<String, String> domainMap = new HashMap<>();
 
-    @RequiresApi(api = Build.VERSION_CODES.JELLY_BEAN)
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_settings);
 
-        mAuth = FirebaseAuth.getInstance();
-        userId = mAuth.getCurrentUser().getUid();
-
         // TODO: 2/24/18 more fields for profile information
         myNameField = (EditText) findViewById(R.id.name);
         mPhoneField = (EditText) findViewById(R.id.phone);
@@ -80,14 +72,8 @@ public class SettingsActivity extends AppCompatActivity {
         mBack = findViewById(R.id.back);
         mConfirm = findViewById(R.id.confirm);
 
-        Intent intent = getIntent();
-        Bundle args = intent.getBundleExtra("BUNDLE");
-        domainsList = (ArrayList<DomainModel>) args.getSerializable("ARRAYLIST");
-        for (DomainModel domainModel : domainsList) {
-            domainMap.put(domainModel.getId(), domainModel.getName());
-        }
-        updateMentorsList();
-
+        mAuth = FirebaseAuth.getInstance();
+        userId = mAuth.getCurrentUser().getUid();
 
         mUserDatabase = FirebaseDatabase.getInstance().getReference().child("Users").child(userId);
 
@@ -114,6 +100,28 @@ public class SettingsActivity extends AppCompatActivity {
                 finish();
             }
         });
+        Button linkedInButton = (Button) findViewById(R.id.linkedin);
+        linkedInButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                handleLinkedIn();
+                //computePakageHash();
+            }
+        });
+    }
+    private void computePakageHash() {
+        try {
+            PackageInfo info = getPackageManager().getPackageInfo(
+                    "me.ancyphilip.womentor",
+                    PackageManager.GET_SIGNATURES);
+            for (Signature signature : info.signatures) {
+                MessageDigest md = MessageDigest.getInstance("SHA");
+                md.update(signature.toByteArray());
+                Log.d("KeyHash:", Base64.encodeToString(md.digest(), Base64.DEFAULT));
+            }
+        } catch (Exception e) {
+            Log.e("TAG",e.getMessage());
+        }
     }
 
     private void getUserInfo() {
@@ -135,7 +143,7 @@ public class SettingsActivity extends AppCompatActivity {
                     }
                     Glide.clear(mProfileImage);
                     if (map.get("profileImageUrl") != null) {
-                        switch ((String) map.get("profileImageUrl")) {
+                        switch ((String)map.get("profileImageUrl")) {
                             case "default":
                                 Glide.with(getApplication()).load(R.mipmap.ic_launcher).into(mProfileImage);
                                 break;
@@ -167,8 +175,7 @@ public class SettingsActivity extends AppCompatActivity {
         mUserDatabase.updateChildren(userInfo);
 
         if (resultUri != null) {
-            StorageReference filePath =
-                    FirebaseStorage.getInstance().getReference().child("profileImages").child(userId);
+            StorageReference filePath = FirebaseStorage.getInstance().getReference().child("profileImages").child(userId);
             Bitmap bitmap = null;
             try {
                 bitmap = MediaStore.Images.Media.getBitmap(getApplication().getContentResolver(), resultUri);
@@ -209,62 +216,67 @@ public class SettingsActivity extends AppCompatActivity {
     @Override
     protected void onActivityResult(int requestCode, int resultCode, Intent data) {
         super.onActivityResult(requestCode, resultCode, data);
+
         if (requestCode == 1 && resultCode == Activity.RESULT_OK) {
             final Uri imageURI = data.getData();
             resultUri = imageURI;
             mProfileImage.setImageURI(resultUri);
 
         }
-    }
-
-    private void updateMentorsList() {
+        // Add this line to your existing onActivityResult() method
+        LISessionManager.getInstance(getApplicationContext()).onActivityResult(this, requestCode, resultCode, data);
 
-        final ArrayList<String> mentorDomains = new ArrayList<>();
-        final ArrayList<String> menteeDomains = new ArrayList<>();
+    }
 
-        final Query query = FirebaseDatabase.getInstance().getReference().child("Users").child(userId).child("domains");
-        query.addValueEventListener(new ValueEventListener() {
+    private void initializeControls(){
+        Button linkedInButton = (Button) findViewById(R.id.linkedin);
+        linkedInButton.setOnClickListener(new View.OnClickListener() {
             @Override
-            public void onDataChange(DataSnapshot dataSnapshot) {
-                Iterable<DataSnapshot> snapshots = dataSnapshot.getChildren();
-                for (DataSnapshot dataSnapshot1: snapshots) {
-                    if (0L == (long) dataSnapshot1.getValue()) {
-                        menteeDomains.add(domainMap.get(dataSnapshot1.getKey()));
-                    } else {
-                        mentorDomains.add(domainMap.get(dataSnapshot1.getKey()));
-                    }
-                }
-                TagGroup mTagGroupMentor = (TagGroup) findViewById(R.id.tag_group_mentor);
-                if(menteeDomains.size() > 0) {
-
-                    String[] mentorDomainStrings = new String[mentorDomains.size()];
-                    mentorDomainStrings = mentorDomains.toArray(mentorDomainStrings);
-
-                    mTagGroupMentor.setTags(mentorDomainStrings);
-                }
+            public void onClick(View v) {
+                handleLinkedIn();
+            }
+        });
+    }
+    private void handleLinkedIn(){
+        LISessionManager.getInstance(getApplicationContext()).init(this, buildScope(), new AuthListener() {
+            @Override
+            public void onAuthSuccess() {
+                // Authentication was successful.  You can now do
+                // other calls with the SDK.
+                fetchPersonalInfo();
             }
 
             @Override
-            public void onCancelled(DatabaseError databaseError) {
+            public void onAuthError(LIAuthError error) {
+                // Handle authentication errors
+                Toast.makeText(SettingsActivity.this,"errr"+error.toString(),Toast.LENGTH_LONG).show();
 
             }
-        });
-
+        }, true);
+    }
+    // Build the list of member permissions our LinkedIn session requires
+    private static Scope buildScope() {
+        return Scope.build(Scope.R_BASICPROFILE, Scope.W_SHARE, Scope.R_EMAILADDRESS);
+    }
 
+    private void fetchPersonalInfo() {
+        String url = "https://api.linkedin.com/v1/people/~?format=json";
 
+        APIHelper apiHelper = APIHelper.getInstance(getApplicationContext());
+        apiHelper.getRequest(this, url, new ApiListener() {
+            @Override
+            public void onApiSuccess(ApiResponse apiResponse) {
+                // Success!
+                String resp = apiResponse.getResponseDataAsString();
+                Toast.makeText(SettingsActivity.this,resp,Toast.LENGTH_LONG).show();
+            }
 
-        final List<Item> items = new ArrayList<>();
-        for (DomainModel domainModel : domainsList) {
-            items.add(new Item(domainModel.getId(), domainModel.getName()));
-        }
-        CollectionPicker mentor = findViewById(R.id.collection_item_picker_mentor);
-        mentor.setItems(items);
-        mentor.setOnItemClickListener(new OnItemClickListener() {
             @Override
-            public void onClick(Item item, int position) {
-                Toast.makeText(getApplicationContext(), "clicked " + position, Toast.LENGTH_SHORT).show();
+            public void onApiError(LIApiError liApiError) {
+                // Error making GET request!
+                String resp = liApiError.toString();
+                Toast.makeText(SettingsActivity.this,resp,Toast.LENGTH_LONG).show();
             }
         });
     }
-
 }
diff --git a/app/src/main/java/me/ancyphilip/womentor/settings/SettingsActivity.java b/app/src/main/java/me/ancyphilip/womentor/settings/SettingsActivity.java
deleted file mode 100644
index a99e936..0000000
--- a/app/src/main/java/me/ancyphilip/womentor/settings/SettingsActivity.java
+++ /dev/null
@@ -1,5 +0,0 @@
-package me.ancyphilip.womentor.settings;
-
-public class SettingsActivity {
-
-}
diff --git a/app/src/main/java/me/ancyphilip/womentor/settings/SettingsPage.java b/app/src/main/java/me/ancyphilip/womentor/settings/SettingsPage.java
deleted file mode 100644
index 2421225..0000000
--- a/app/src/main/java/me/ancyphilip/womentor/settings/SettingsPage.java
+++ /dev/null
@@ -1,7 +0,0 @@
-package me.ancyphilip.womentor.settings;
-
-public class SettingsPage {
-
-
-
-}
diff --git a/app/src/main/res/drawable-v24/ic_launcher_foreground.xml b/app/src/main/res/drawable-v24/ic_launcher_foreground.xml
old mode 100644
new mode 100755
diff --git a/app/src/main/res/drawable/ic_launcher_background.xml b/app/src/main/res/drawable/ic_launcher_background.xml
old mode 100644
new mode 100755
diff --git a/app/src/main/res/female.png b/app/src/main/res/female.png
old mode 100644
new mode 100755
diff --git a/app/src/main/res/layout/activity_chat.xml b/app/src/main/res/layout/activity_chat.xml
old mode 100644
new mode 100755
index 88d7316..f95e9b4
--- a/app/src/main/res/layout/activity_chat.xml
+++ b/app/src/main/res/layout/activity_chat.xml
@@ -7,8 +7,7 @@
     tools:context="me.ancyphilip.womentor.Chat.ChatActivity">
     <android.support.v4.widget.NestedScrollView
         android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:layout_above="@+id/sendLayout">
+        android:layout_height="match_parent">
 
         <android.support.v7.widget.RecyclerView
             android:layout_width="match_parent"
@@ -19,7 +18,6 @@
     </android.support.v4.widget.NestedScrollView>
 
     <LinearLayout
-        android:id="@+id/sendLayout"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
         android:layout_alignParentBottom="true"
@@ -29,8 +27,7 @@
             android:layout_weight="0.8"
             android:layout_width="0dp"
             android:layout_height="wrap_content"
-            android:hint="message ..."
-            android:id="@+id/message"/>
+            android:hint="message ..."/>
         <Button
             android:layout_weight="0.2"
             android:layout_width="0dp"
diff --git a/app/src/main/res/layout/activity_choose_login_or_registration.xml b/app/src/main/res/layout/activity_choose_login_or_registration.xml
old mode 100644
new mode 100755
diff --git a/app/src/main/res/layout/activity_disover.xml b/app/src/main/res/layout/activity_disover.xml
deleted file mode 100644
index ec64074..0000000
--- a/app/src/main/res/layout/activity_disover.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent">
-    <LinearLayout
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:orientation="vertical">
-        <Spinner
-            android:id="@+id/domainSpinner"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"/>
-
-        <ListView
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:id="@+id/usersList">
-
-        </ListView>
-
-    </LinearLayout>
-
-</android.support.constraint.ConstraintLayout>
\ No newline at end of file
diff --git a/app/src/main/res/layout/activity_login.xml b/app/src/main/res/layout/activity_login.xml
old mode 100644
new mode 100755
diff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml
old mode 100644
new mode 100755
index 0e206c4..71807df
--- a/app/src/main/res/layout/activity_main.xml
+++ b/app/src/main/res/layout/activity_main.xml
@@ -4,51 +4,43 @@
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
-    android:orientation="vertical"
-    tools:context="me.ancyphilip.womentor.MainActivity">
+    tools:context="me.ancyphilip.womentor.MainActivity"
+    android:orientation="vertical">
 
     <LinearLayout
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
         android:orientation="horizontal">
 
+    <Button
+        android:layout_weight="1"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="SignOut"
+        android:onClick="logoutUser"/>
 
-        <Button
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:onClick="logoutUser"
-            android:text="SignOut" />
-
-        <Button
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:onClick="goToDiscover"
-            android:text="Discover" />
-
-        <Button
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:onClick="goToSettings"
-            android:text="Settings"
-            />
+    <Button
+        android:layout_weight="1"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:onClick="goToSettings"
+        android:text="Settings"
+        />
 
         <Button
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:onClick="goToMatches"
-            android:text="Matches"
-            />
+        android:layout_weight="1"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:onClick="goToMatches"
+        android:text="Matches"
+        />
     </LinearLayout>
 
     <com.lorentzos.flingswipe.SwipeFlingAdapterView
         android:id="@+id/frame"
+        android:background="#ffeee9e2"
         android:layout_width="match_parent"
         android:layout_height="match_parent"
-        android:background="#ffeee9e2"
         app:rotation_degrees="15.5"
         tools:context=".MyActivity" />
 
diff --git a/app/src/main/res/layout/activity_matches.xml b/app/src/main/res/layout/activity_matches.xml
old mode 100644
new mode 100755
diff --git a/app/src/main/res/layout/activity_registration.xml b/app/src/main/res/layout/activity_registration.xml
old mode 100644
new mode 100755
diff --git a/app/src/main/res/layout/activity_settings.xml b/app/src/main/res/layout/activity_settings.xml
old mode 100644
new mode 100755
index 7bfa077..ac96d0d
--- a/app/src/main/res/layout/activity_settings.xml
+++ b/app/src/main/res/layout/activity_settings.xml
@@ -32,26 +32,6 @@
         android:inputType="phone"
         android:layout_marginBottom="20sp"/>
 
-    <me.gujun.android.taggroup.TagGroup
-        android:id="@+id/tag_group_mentor"
-        style="@style/TagGroup" />
-
-    <com.anton46.collectionitempicker.CollectionPicker
-        android:id="@+id/collection_item_picker_mentor"
-        android:layout_width="match_parent"
-        android:layout_height="0dp"
-        android:layout_weight="1"
-        app:cp_addIcon="@android:drawable/ic_menu_add"
-        app:cp_cancelIcon="@android:drawable/ic_menu_close_clear_cancel"
-        app:cp_itemBackgroundNormal="@color/blue"
-        app:cp_itemBackgroundPressed="@color/red"
-        app:cp_itemMargin="5dp"
-        app:cp_textPaddingBottom="5dp"
-        app:cp_textPaddingLeft="10dp"
-        app:cp_textPaddingRight="10dp"
-        app:cp_textPaddingTop="5dp"
-        app:cp_simplified="false" />
-
     <Button
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
@@ -63,4 +43,9 @@
         android:layout_height="wrap_content"
         android:text="back"
         android:id="@+id/back"/>
+    <Button
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:text="connect with linkedin"
+        android:id="@+id/linkedin"/>
 </LinearLayout>
diff --git a/app/src/main/res/layout/content_matches.xml b/app/src/main/res/layout/content_matches.xml
old mode 100644
new mode 100755
diff --git a/app/src/main/res/layout/discover_row_item.xml b/app/src/main/res/layout/discover_row_item.xml
deleted file mode 100644
index d220ab1..0000000
--- a/app/src/main/res/layout/discover_row_item.xml
+++ /dev/null
@@ -1,29 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent">
-    <LinearLayout
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:orientation="vertical">
-
-        <TextView
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:id="@+id/name"
-            android:layout_margin="5dp"/>
-
-        <TextView
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:id="@+id/email"
-            android:layout_margin="5dp"/>
-
-        <TextView
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:id="@+id/phone"
-            android:layout_margin="5dp"/>
-
-    </LinearLayout>
-</android.support.constraint.ConstraintLayout>
\ No newline at end of file
diff --git a/app/src/main/res/layout/domain_spinner_item.xml b/app/src/main/res/layout/domain_spinner_item.xml
deleted file mode 100644
index 4f3adb7..0000000
--- a/app/src/main/res/layout/domain_spinner_item.xml
+++ /dev/null
@@ -1,9 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent">
-    <TextView
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:id="@+id/domainText"/>
-</android.support.constraint.ConstraintLayout>
\ No newline at end of file
diff --git a/app/src/main/res/layout/item.xml b/app/src/main/res/layout/item.xml
old mode 100644
new mode 100755
diff --git a/app/src/main/res/layout/item_chat.xml b/app/src/main/res/layout/item_chat.xml
deleted file mode 100644
index c7fc579..0000000
--- a/app/src/main/res/layout/item_chat.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout
-    xmlns:android="http://schemas.android.com/apk/res/android" android:layout_width="match_parent"
-    android:layout_height="match_parent">
-
-    <LinearLayout
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:padding="20sp"
-        android:id="@+id/container">
-        <TextView
-            android:paddingBottom="20sp"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:text="Text"
-            android:id="@+id/message"/>
-
-
-    </LinearLayout>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/app/src/main/res/layout/item_matches.xml b/app/src/main/res/layout/item_matches.xml
old mode 100644
new mode 100755
diff --git a/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml b/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
old mode 100644
new mode 100755
diff --git a/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml b/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
old mode 100644
new mode 100755
diff --git a/app/src/main/res/mipmap-anydpi-v26/ic_woman.xml b/app/src/main/res/mipmap-anydpi-v26/ic_woman.xml
old mode 100644
new mode 100755
diff --git a/app/src/main/res/mipmap-anydpi-v26/ic_woman_round.xml b/app/src/main/res/mipmap-anydpi-v26/ic_woman_round.xml
old mode 100644
new mode 100755
diff --git a/app/src/main/res/mipmap-hdpi/ic_launcher.png b/app/src/main/res/mipmap-hdpi/ic_launcher.png
old mode 100644
new mode 100755
diff --git a/app/src/main/res/mipmap-hdpi/ic_launcher_round.png b/app/src/main/res/mipmap-hdpi/ic_launcher_round.png
old mode 100644
new mode 100755
diff --git a/app/src/main/res/mipmap-hdpi/ic_woman.png b/app/src/main/res/mipmap-hdpi/ic_woman.png
old mode 100644
new mode 100755
diff --git a/app/src/main/res/mipmap-hdpi/ic_woman_foreground.png b/app/src/main/res/mipmap-hdpi/ic_woman_foreground.png
old mode 100644
new mode 100755
diff --git a/app/src/main/res/mipmap-hdpi/ic_woman_round.png b/app/src/main/res/mipmap-hdpi/ic_woman_round.png
old mode 100644
new mode 100755
diff --git a/app/src/main/res/mipmap-mdpi/ic_launcher.png b/app/src/main/res/mipmap-mdpi/ic_launcher.png
old mode 100644
new mode 100755
diff --git a/app/src/main/res/mipmap-mdpi/ic_launcher_round.png b/app/src/main/res/mipmap-mdpi/ic_launcher_round.png
old mode 100644
new mode 100755
diff --git a/app/src/main/res/mipmap-mdpi/ic_woman.png b/app/src/main/res/mipmap-mdpi/ic_woman.png
old mode 100644
new mode 100755
diff --git a/app/src/main/res/mipmap-mdpi/ic_woman_foreground.png b/app/src/main/res/mipmap-mdpi/ic_woman_foreground.png
old mode 100644
new mode 100755
diff --git a/app/src/main/res/mipmap-mdpi/ic_woman_round.png b/app/src/main/res/mipmap-mdpi/ic_woman_round.png
old mode 100644
new mode 100755
diff --git a/app/src/main/res/mipmap-xhdpi/ic_launcher.png b/app/src/main/res/mipmap-xhdpi/ic_launcher.png
old mode 100644
new mode 100755
diff --git a/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png b/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png
old mode 100644
new mode 100755
diff --git a/app/src/main/res/mipmap-xhdpi/ic_woman.png b/app/src/main/res/mipmap-xhdpi/ic_woman.png
old mode 100644
new mode 100755
diff --git a/app/src/main/res/mipmap-xhdpi/ic_woman_foreground.png b/app/src/main/res/mipmap-xhdpi/ic_woman_foreground.png
old mode 100644
new mode 100755
diff --git a/app/src/main/res/mipmap-xhdpi/ic_woman_round.png b/app/src/main/res/mipmap-xhdpi/ic_woman_round.png
old mode 100644
new mode 100755
diff --git a/app/src/main/res/mipmap-xxhdpi/ic_launcher.png b/app/src/main/res/mipmap-xxhdpi/ic_launcher.png
old mode 100644
new mode 100755
diff --git a/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png b/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png
old mode 100644
new mode 100755
diff --git a/app/src/main/res/mipmap-xxhdpi/ic_woman.png b/app/src/main/res/mipmap-xxhdpi/ic_woman.png
old mode 100644
new mode 100755
diff --git a/app/src/main/res/mipmap-xxhdpi/ic_woman_foreground.png b/app/src/main/res/mipmap-xxhdpi/ic_woman_foreground.png
old mode 100644
new mode 100755
diff --git a/app/src/main/res/mipmap-xxhdpi/ic_woman_round.png b/app/src/main/res/mipmap-xxhdpi/ic_woman_round.png
old mode 100644
new mode 100755
diff --git a/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png b/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
old mode 100644
new mode 100755
diff --git a/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png b/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png
old mode 100644
new mode 100755
diff --git a/app/src/main/res/mipmap-xxxhdpi/ic_woman.png b/app/src/main/res/mipmap-xxxhdpi/ic_woman.png
old mode 100644
new mode 100755
diff --git a/app/src/main/res/mipmap-xxxhdpi/ic_woman_foreground.png b/app/src/main/res/mipmap-xxxhdpi/ic_woman_foreground.png
old mode 100644
new mode 100755
diff --git a/app/src/main/res/mipmap-xxxhdpi/ic_woman_round.png b/app/src/main/res/mipmap-xxxhdpi/ic_woman_round.png
old mode 100644
new mode 100755
diff --git a/app/src/main/res/values/colors.xml b/app/src/main/res/values/colors.xml
old mode 100644
new mode 100755
diff --git a/app/src/main/res/values/dimens.xml b/app/src/main/res/values/dimens.xml
old mode 100644
new mode 100755
diff --git a/app/src/main/res/values/ic_launcher_background.xml b/app/src/main/res/values/ic_launcher_background.xml
old mode 100644
new mode 100755
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
old mode 100644
new mode 100755
index d30506e..a7124f6
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -1,4 +1,4 @@
 <resources>
-    <string name="app_name">Womentor</string>
+    <string name="app_name">womentor</string>
     <string name="title_activity_matches">MatchesActivity</string>
 </resources>
diff --git a/app/src/main/res/values/styles.xml b/app/src/main/res/values/styles.xml
old mode 100644
new mode 100755
diff --git a/app/src/test/java/me/ancyphilip/womentor/ExampleUnitTest.java b/app/src/test/java/me/ancyphilip/womentor/ExampleUnitTest.java
old mode 100644
new mode 100755
diff --git a/build.gradle b/build.gradle
old mode 100644
new mode 100755
diff --git a/gradle.properties b/gradle.properties
old mode 100644
new mode 100755
diff --git a/gradle/wrapper/gradle-wrapper.jar b/gradle/wrapper/gradle-wrapper.jar
old mode 100644
new mode 100755
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
old mode 100644
new mode 100755
diff --git a/gradlew.bat b/gradlew.bat
old mode 100644
new mode 100755
diff --git a/linkedin-sdk/build.gradle b/linkedin-sdk/build.gradle
new file mode 100644
index 0000000..f97edf5
--- /dev/null
+++ b/linkedin-sdk/build.gradle
@@ -0,0 +1,52 @@
+allprojects {
+    repositories {
+        mavenCentral()
+    }
+}
+
+buildscript {
+   repositories {
+     mavenCentral()
+   }
+
+}
+
+apply plugin: 'android-library'
+
+android {
+    sourceSets {
+        androidTest {
+          setRoot('src/test')
+        }
+    }
+    compileSdkVersion 17 
+    buildToolsVersion '26.0.2'
+
+    defaultConfig {
+        minSdkVersion 8
+        targetSdkVersion 16 
+        versionCode 1
+        versionName "1.0"
+    }
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+    }
+    lintOptions {
+          abortOnError false
+    }
+}
+
+configurations {
+}
+
+
+dependencies {
+    compile 'com.android.support:support-annotations:20.0.0'
+    compile 'com.android.support:support-v4:21.0.+'
+    compile fileTree(dir: 'libs', include: ['*.jar'])
+    compile files('libs/volley.jar')
+    androidTestCompile('junit:junit:4.12')
+}
diff --git a/linkedin-sdk/build/generated/mockable-android-17.v3.jar b/linkedin-sdk/build/generated/mockable-android-17.v3.jar
new file mode 100644
index 0000000..5543d99
Binary files /dev/null and b/linkedin-sdk/build/generated/mockable-android-17.v3.jar differ
diff --git a/linkedin-sdk/build/generated/source/buildConfig/androidTest/debug/com/linkedin/android/mobilesdk/test/BuildConfig.java b/linkedin-sdk/build/generated/source/buildConfig/androidTest/debug/com/linkedin/android/mobilesdk/test/BuildConfig.java
new file mode 100644
index 0000000..ac8438d
--- /dev/null
+++ b/linkedin-sdk/build/generated/source/buildConfig/androidTest/debug/com/linkedin/android/mobilesdk/test/BuildConfig.java
@@ -0,0 +1,13 @@
+/**
+ * Automatically generated file. DO NOT MODIFY
+ */
+package com.linkedin.android.mobilesdk.test;
+
+public final class BuildConfig {
+  public static final boolean DEBUG = Boolean.parseBoolean("true");
+  public static final String APPLICATION_ID = "com.linkedin.android.mobilesdk.test";
+  public static final String BUILD_TYPE = "debug";
+  public static final String FLAVOR = "";
+  public static final int VERSION_CODE = 1;
+  public static final String VERSION_NAME = "1.0";
+}
diff --git a/linkedin-sdk/build/generated/source/buildConfig/debug/com/linkedin/android/mobilesdk/BuildConfig.java b/linkedin-sdk/build/generated/source/buildConfig/debug/com/linkedin/android/mobilesdk/BuildConfig.java
new file mode 100644
index 0000000..e22210e
--- /dev/null
+++ b/linkedin-sdk/build/generated/source/buildConfig/debug/com/linkedin/android/mobilesdk/BuildConfig.java
@@ -0,0 +1,13 @@
+/**
+ * Automatically generated file. DO NOT MODIFY
+ */
+package com.linkedin.android.mobilesdk;
+
+public final class BuildConfig {
+  public static final boolean DEBUG = Boolean.parseBoolean("true");
+  public static final String APPLICATION_ID = "com.linkedin.android.mobilesdk";
+  public static final String BUILD_TYPE = "debug";
+  public static final String FLAVOR = "";
+  public static final int VERSION_CODE = 1;
+  public static final String VERSION_NAME = "1.0";
+}
diff --git a/linkedin-sdk/build/generated/source/r/androidTest/debug/android/support/v4/R.java b/linkedin-sdk/build/generated/source/r/androidTest/debug/android/support/v4/R.java
new file mode 100644
index 0000000..4ce1954
--- /dev/null
+++ b/linkedin-sdk/build/generated/source/r/androidTest/debug/android/support/v4/R.java
@@ -0,0 +1,10 @@
+/* AUTO-GENERATED FILE.  DO NOT MODIFY.
+ *
+ * This class was automatically generated by the
+ * gradle plugin from the resource data it found. It
+ * should not be modified by hand.
+ */
+package android.support.v4;
+
+public final class R {
+}
diff --git a/linkedin-sdk/build/generated/source/r/androidTest/debug/com/linkedin/android/mobilesdk/R.java b/linkedin-sdk/build/generated/source/r/androidTest/debug/com/linkedin/android/mobilesdk/R.java
new file mode 100644
index 0000000..d0883ad
--- /dev/null
+++ b/linkedin-sdk/build/generated/source/r/androidTest/debug/com/linkedin/android/mobilesdk/R.java
@@ -0,0 +1,19 @@
+/* AUTO-GENERATED FILE.  DO NOT MODIFY.
+ *
+ * This class was automatically generated by the
+ * gradle plugin from the resource data it found. It
+ * should not be modified by hand.
+ */
+package com.linkedin.android.mobilesdk;
+
+public final class R {
+    public static final class drawable {
+        public static final int ic_launcher = 0x7f010000;
+    }
+    public static final class string {
+        public static final int update_linkedin_app_cancel = 0x7f020000;
+        public static final int update_linkedin_app_download = 0x7f020001;
+        public static final int update_linkedin_app_message = 0x7f020002;
+        public static final int update_linkedin_app_title = 0x7f020003;
+    }
+}
diff --git a/linkedin-sdk/build/generated/source/r/androidTest/debug/com/linkedin/android/mobilesdk/test/R.java b/linkedin-sdk/build/generated/source/r/androidTest/debug/com/linkedin/android/mobilesdk/test/R.java
new file mode 100644
index 0000000..72355ed
--- /dev/null
+++ b/linkedin-sdk/build/generated/source/r/androidTest/debug/com/linkedin/android/mobilesdk/test/R.java
@@ -0,0 +1,20 @@
+/* AUTO-GENERATED FILE. DO NOT MODIFY.
+ *
+ * This class was automatically generated by the
+ * aapt tool from the resource data it found. It
+ * should not be modified by hand.
+ */
+
+package com.linkedin.android.mobilesdk.test;
+
+public final class R {
+  public static final class drawable {
+    public static final int ic_launcher=0x7f010000;
+  }
+  public static final class string {
+    public static final int update_linkedin_app_cancel=0x7f020000;
+    public static final int update_linkedin_app_download=0x7f020001;
+    public static final int update_linkedin_app_message=0x7f020002;
+    public static final int update_linkedin_app_title=0x7f020003;
+  }
+}
\ No newline at end of file
diff --git a/linkedin-sdk/build/generated/source/r/debug/android/support/v4/R.java b/linkedin-sdk/build/generated/source/r/debug/android/support/v4/R.java
new file mode 100644
index 0000000..4ce1954
--- /dev/null
+++ b/linkedin-sdk/build/generated/source/r/debug/android/support/v4/R.java
@@ -0,0 +1,10 @@
+/* AUTO-GENERATED FILE.  DO NOT MODIFY.
+ *
+ * This class was automatically generated by the
+ * gradle plugin from the resource data it found. It
+ * should not be modified by hand.
+ */
+package android.support.v4;
+
+public final class R {
+}
diff --git a/linkedin-sdk/build/generated/source/r/debug/com/linkedin/android/mobilesdk/R.java b/linkedin-sdk/build/generated/source/r/debug/com/linkedin/android/mobilesdk/R.java
new file mode 100644
index 0000000..207a84e
--- /dev/null
+++ b/linkedin-sdk/build/generated/source/r/debug/com/linkedin/android/mobilesdk/R.java
@@ -0,0 +1,19 @@
+/* AUTO-GENERATED FILE.  DO NOT MODIFY.
+ *
+ * This class was automatically generated by the
+ * gradle plugin from the resource data it found. It
+ * should not be modified by hand.
+ */
+package com.linkedin.android.mobilesdk;
+
+public final class R {
+    public static final class drawable {
+        public static int ic_launcher = 0x7f090001;
+    }
+    public static final class string {
+        public static int update_linkedin_app_cancel = 0x7f150001;
+        public static int update_linkedin_app_download = 0x7f150002;
+        public static int update_linkedin_app_message = 0x7f150003;
+        public static int update_linkedin_app_title = 0x7f150004;
+    }
+}
diff --git a/linkedin-sdk/build/intermediates/attr/R.txt b/linkedin-sdk/build/intermediates/attr/R.txt
new file mode 100644
index 0000000..002dc4e
--- /dev/null
+++ b/linkedin-sdk/build/intermediates/attr/R.txt
@@ -0,0 +1,969 @@
+int attr absListViewStyle 0x0101006a
+int attr accessibilityEventTypes 0x01010380
+int attr accessibilityFeedbackType 0x01010382
+int attr accessibilityFlags 0x01010384
+int attr accountPreferences 0x0101029f
+int attr accountType 0x0101028f
+int attr action 0x0101002d
+int attr actionBarDivider 0x0101039b
+int attr actionBarItemBackground 0x0101039c
+int attr actionBarSize 0x010102eb
+int attr actionBarSplitStyle 0x01010388
+int attr actionBarStyle 0x010102ce
+int attr actionBarTabBarStyle 0x010102f4
+int attr actionBarTabStyle 0x010102f3
+int attr actionBarTabTextStyle 0x010102f5
+int attr actionBarWidgetTheme 0x01010397
+int attr actionButtonStyle 0x010102d8
+int attr actionDropDownStyle 0x010102d7
+int attr actionLayout 0x010102fb
+int attr actionMenuTextAppearance 0x01010360
+int attr actionMenuTextColor 0x01010361
+int attr actionModeBackground 0x010102db
+int attr actionModeCloseButtonStyle 0x010102f7
+int attr actionModeCloseDrawable 0x010102dc
+int attr actionModeCopyDrawable 0x01010312
+int attr actionModeCutDrawable 0x01010311
+int attr actionModePasteDrawable 0x01010313
+int attr actionModeSelectAllDrawable 0x0101037e
+int attr actionModeSplitBackground 0x0101039d
+int attr actionModeStyle 0x01010394
+int attr actionOverflowButtonStyle 0x010102f6
+int attr actionProviderClass 0x01010389
+int attr actionViewClass 0x010102fc
+int attr activatedBackgroundIndicator 0x010102fd
+int attr activityCloseEnterAnimation 0x010100ba
+int attr activityCloseExitAnimation 0x010100bb
+int attr activityOpenEnterAnimation 0x010100b8
+int attr activityOpenExitAnimation 0x010100b9
+int attr addStatesFromChildren 0x010100f0
+int attr adjustViewBounds 0x0101011e
+int attr alertDialogIcon 0x01010355
+int attr alertDialogStyle 0x0101005d
+int attr alertDialogTheme 0x01010309
+int attr alignmentMode 0x0101037a
+int attr allContactsName 0x010102cc
+int attr allowBackup 0x01010280
+int attr allowClearUserData 0x01010005
+int attr allowParallelSyncs 0x01010332
+int attr allowSingleTap 0x01010259
+int attr allowTaskReparenting 0x01010204
+int attr alpha 0x0101031f
+int attr alphabeticShortcut 0x010101e3
+int attr alwaysDrawnWithCache 0x010100ef
+int attr alwaysRetainTaskState 0x01010203
+int attr angle 0x010101a0
+int attr animateFirstView 0x010102d5
+int attr animateLayoutChanges 0x010102f2
+int attr animateOnClick 0x0101025c
+int attr animation 0x010101cd
+int attr animationCache 0x010100ed
+int attr animationDuration 0x01010112
+int attr animationOrder 0x010101ce
+int attr animationResolution 0x0101031a
+int attr antialias 0x0101011a
+int attr anyDensity 0x0101026c
+int attr apiKey 0x01010211
+int attr author 0x010102b4
+int attr authorities 0x01010018
+int attr autoAdvanceViewId 0x0101030f
+int attr autoCompleteTextViewStyle 0x0101006b
+int attr autoLink 0x010100b0
+int attr autoStart 0x010102b5
+int attr autoText 0x0101016a
+int attr autoUrlDetect 0x0101028c
+int attr background 0x010100d4
+int attr backgroundDimAmount 0x01010032
+int attr backgroundDimEnabled 0x0101021f
+int attr backgroundSplit 0x0101038b
+int attr backgroundStacked 0x0101038a
+int attr backupAgent 0x0101027f
+int attr baseline 0x0101031c
+int attr baselineAlignBottom 0x01010122
+int attr baselineAligned 0x01010126
+int attr baselineAlignedChildIndex 0x01010127
+int attr borderlessButtonStyle 0x0101032b
+int attr bottom 0x010101b0
+int attr bottomBright 0x010100cd
+int attr bottomDark 0x010100c9
+int attr bottomLeftRadius 0x010101ab
+int attr bottomMedium 0x010100ce
+int attr bottomOffset 0x01010257
+int attr bottomRightRadius 0x010101ac
+int attr breadCrumbShortTitle 0x01010304
+int attr breadCrumbTitle 0x01010303
+int attr bufferType 0x0101014e
+int attr button 0x01010107
+int attr buttonBarButtonStyle 0x0101032f
+int attr buttonBarStyle 0x0101032e
+int attr buttonStyle 0x01010048
+int attr buttonStyleInset 0x0101004a
+int attr buttonStyleSmall 0x01010049
+int attr buttonStyleToggle 0x0101004b
+int attr cacheColorHint 0x01010101
+int attr calendarViewShown 0x0101034c
+int attr calendarViewStyle 0x0101035d
+int attr canRetrieveWindowContent 0x01010385
+int attr candidatesTextStyleSpans 0x01010230
+int attr capitalize 0x01010169
+int attr centerBright 0x010100cc
+int attr centerColor 0x0101020b
+int attr centerDark 0x010100c8
+int attr centerMedium 0x010100cf
+int attr centerX 0x010101a2
+int attr centerY 0x010101a3
+int attr checkBoxPreferenceStyle 0x0101008f
+int attr checkMark 0x01010108
+int attr checkable 0x010101e5
+int attr checkableBehavior 0x010101e0
+int attr checkboxStyle 0x0101006c
+int attr checked 0x01010106
+int attr checkedButton 0x01010148
+int attr checkedTextViewStyle 0x010103c8
+int attr childDivider 0x01010111
+int attr childIndicator 0x0101010c
+int attr childIndicatorLeft 0x0101010f
+int attr childIndicatorRight 0x01010110
+int attr choiceMode 0x0101012b
+int attr clearTaskOnLaunch 0x01010015
+int attr clickable 0x010100e5
+int attr clipChildren 0x010100ea
+int attr clipOrientation 0x0101020a
+int attr clipToPadding 0x010100eb
+int attr codes 0x01010242
+int attr collapseColumns 0x0101014b
+int attr color 0x010101a5
+int attr colorActivatedHighlight 0x01010390
+int attr colorBackground 0x01010031
+int attr colorBackgroundCacheHint 0x010102ab
+int attr colorFocusedHighlight 0x0101038f
+int attr colorForeground 0x01010030
+int attr colorForegroundInverse 0x01010206
+int attr colorLongPressedHighlight 0x0101038e
+int attr colorMultiSelectHighlight 0x01010391
+int attr colorPressedHighlight 0x0101038d
+int attr columnCount 0x01010377
+int attr columnDelay 0x010101cf
+int attr columnOrderPreserved 0x01010378
+int attr columnWidth 0x01010117
+int attr compatibleWidthLimitDp 0x01010365
+int attr completionHint 0x01010172
+int attr completionHintView 0x01010173
+int attr completionThreshold 0x01010174
+int attr configChanges 0x0101001f
+int attr configure 0x0101025d
+int attr constantSize 0x01010196
+int attr content 0x0101025b
+int attr contentAuthority 0x01010290
+int attr contentDescription 0x01010273
+int attr cropToPadding 0x01010123
+int attr cursorVisible 0x01010152
+int attr customNavigationLayout 0x010102d2
+int attr customTokens 0x0101033b
+int attr cycles 0x010101d4
+int attr dashGap 0x010101a7
+int attr dashWidth 0x010101a6
+int attr data 0x0101002e
+int attr datePickerStyle 0x0101035c
+int attr dateTextAppearance 0x01010349
+int attr debuggable 0x0101000f
+int attr defaultValue 0x010101ed
+int attr delay 0x010101cc
+int attr dependency 0x010101ec
+int attr descendantFocusability 0x010100f1
+int attr description 0x01010020
+int attr detachWallpaper 0x010102a6
+int attr detailColumn 0x010102a3
+int attr detailSocialSummary 0x010102a4
+int attr detailsElementBackground 0x0101034e
+int attr dial 0x01010102
+int attr dialogIcon 0x010101f4
+int attr dialogLayout 0x010101f7
+int attr dialogMessage 0x010101f3
+int attr dialogPreferenceStyle 0x01010091
+int attr dialogTheme 0x01010308
+int attr dialogTitle 0x010101f2
+int attr digits 0x01010166
+int attr direction 0x010101d1
+int attr directionDescriptions 0x010103a1
+int attr directionPriority 0x010101d2
+int attr disableDependentsState 0x010101f1
+int attr disabledAlpha 0x01010033
+int attr displayOptions 0x010102d0
+int attr dither 0x0101011c
+int attr divider 0x01010129
+int attr dividerHeight 0x0101012a
+int attr dividerHorizontal 0x0101032c
+int attr dividerPadding 0x0101032a
+int attr dividerVertical 0x0101030a
+int attr drawSelectorOnTop 0x010100fc
+int attr drawable 0x01010199
+int attr drawableBottom 0x0101016e
+int attr drawableEnd 0x01010393
+int attr drawableLeft 0x0101016f
+int attr drawablePadding 0x01010171
+int attr drawableRight 0x01010170
+int attr drawableStart 0x01010392
+int attr drawableTop 0x0101016d
+int attr drawingCacheQuality 0x010100e8
+int attr dropDownAnchor 0x01010263
+int attr dropDownHeight 0x01010283
+int attr dropDownHintAppearance 0x01010088
+int attr dropDownHorizontalOffset 0x010102ac
+int attr dropDownItemStyle 0x01010086
+int attr dropDownListViewStyle 0x0101006d
+int attr dropDownSelector 0x01010175
+int attr dropDownSpinnerStyle 0x010102d6
+int attr dropDownVerticalOffset 0x010102ad
+int attr dropDownWidth 0x01010262
+int attr duplicateParentState 0x010100e9
+int attr duration 0x01010198
+int attr editTextBackground 0x01010352
+int attr editTextColor 0x01010351
+int attr editTextPreferenceStyle 0x01010092
+int attr editTextStyle 0x0101006e
+int attr editable 0x0101016b
+int attr editorExtras 0x01010224
+int attr ellipsize 0x010100ab
+int attr ems 0x01010158
+int attr enabled 0x0101000e
+int attr endColor 0x0101019e
+int attr endYear 0x0101017d
+int attr enterFadeDuration 0x0101030c
+int attr entries 0x010100b2
+int attr entryValues 0x010101f8
+int attr eventsInterceptionEnabled 0x0101027d
+int attr excludeFromRecents 0x01010017
+int attr exitFadeDuration 0x0101030d
+int attr expandableListPreferredChildIndicatorLeft 0x01010052
+int attr expandableListPreferredChildIndicatorRight 0x01010053
+int attr expandableListPreferredChildPaddingLeft 0x0101004f
+int attr expandableListPreferredItemIndicatorLeft 0x01010050
+int attr expandableListPreferredItemIndicatorRight 0x01010051
+int attr expandableListPreferredItemPaddingLeft 0x0101004e
+int attr expandableListViewStyle 0x0101006f
+int attr expandableListViewWhiteStyle 0x010102b6
+int attr exported 0x01010010
+int attr extraTension 0x0101026b
+int attr factor 0x010101d3
+int attr fadeDuration 0x01010278
+int attr fadeEnabled 0x0101027e
+int attr fadeOffset 0x01010277
+int attr fadeScrollbars 0x010102aa
+int attr fadingEdge 0x010100df
+int attr fadingEdgeLength 0x010100e0
+int attr fastScrollAlwaysVisible 0x01010335
+int attr fastScrollEnabled 0x01010226
+int attr fastScrollOverlayPosition 0x0101033a
+int attr fastScrollPreviewBackgroundLeft 0x01010337
+int attr fastScrollPreviewBackgroundRight 0x01010338
+int attr fastScrollTextColor 0x01010359
+int attr fastScrollThumbDrawable 0x01010336
+int attr fastScrollTrackDrawable 0x01010339
+int attr fillAfter 0x010101bd
+int attr fillBefore 0x010101bc
+int attr fillEnabled 0x0101024f
+int attr fillViewport 0x0101017a
+int attr filter 0x0101011b
+int attr filterTouchesWhenObscured 0x010102c4
+int attr finishOnCloseSystemDialogs 0x010102a7
+int attr finishOnTaskLaunch 0x01010014
+int attr firstDayOfWeek 0x0101033d
+int attr fitsSystemWindows 0x010100dd
+int attr flipInterval 0x01010179
+int attr focusable 0x010100da
+int attr focusableInTouchMode 0x010100db
+int attr focusedMonthDateColor 0x01010343
+int attr fontFamily 0x010103ac
+int attr footerDividersEnabled 0x0101022f
+int attr foreground 0x01010109
+int attr foregroundGravity 0x01010200
+int attr format 0x01010105
+int attr format12Hour 0x010103ca
+int attr format24Hour 0x010103cb
+int attr fragment 0x010102e3
+int attr fragmentCloseEnterAnimation 0x010102e7
+int attr fragmentCloseExitAnimation 0x010102e8
+int attr fragmentFadeEnterAnimation 0x010102e9
+int attr fragmentFadeExitAnimation 0x010102ea
+int attr fragmentOpenEnterAnimation 0x010102e5
+int attr fragmentOpenExitAnimation 0x010102e6
+int attr freezesText 0x0101016c
+int attr fromAlpha 0x010101ca
+int attr fromDegrees 0x010101b3
+int attr fromXDelta 0x010101c6
+int attr fromXScale 0x010101c2
+int attr fromYDelta 0x010101c8
+int attr fromYScale 0x010101c4
+int attr fullBright 0x010100ca
+int attr fullDark 0x010100c6
+int attr functionalTest 0x01010023
+int attr galleryItemBackground 0x0101004c
+int attr galleryStyle 0x01010070
+int attr gestureColor 0x01010275
+int attr gestureStrokeAngleThreshold 0x0101027c
+int attr gestureStrokeLengthThreshold 0x0101027a
+int attr gestureStrokeSquarenessThreshold 0x0101027b
+int attr gestureStrokeType 0x01010279
+int attr gestureStrokeWidth 0x01010274
+int attr glEsVersion 0x01010281
+int attr gradientRadius 0x010101a4
+int attr grantUriPermissions 0x0101001b
+int attr gravity 0x010100af
+int attr gridViewStyle 0x01010071
+int attr groupIndicator 0x0101010b
+int attr hand_hour 0x01010103
+int attr hand_minute 0x01010104
+int attr handle 0x0101025a
+int attr handleProfiling 0x01010022
+int attr hapticFeedbackEnabled 0x0101025e
+int attr hardwareAccelerated 0x010102d3
+int attr hasCode 0x0101000c
+int attr headerBackground 0x0101012f
+int attr headerDividersEnabled 0x0101022e
+int attr height 0x01010155
+int attr hint 0x01010150
+int attr homeAsUpIndicator 0x0101030b
+int attr homeLayout 0x0101031d
+int attr horizontalDivider 0x0101012d
+int attr horizontalGap 0x0101023f
+int attr horizontalScrollViewStyle 0x01010353
+int attr horizontalSpacing 0x01010114
+int attr host 0x01010028
+int attr icon 0x01010002
+int attr iconPreview 0x01010249
+int attr iconifiedByDefault 0x010102fa
+int attr id 0x010100d0
+int attr ignoreGravity 0x010101ff
+int attr imageButtonStyle 0x01010072
+int attr imageWellStyle 0x01010073
+int attr imeActionId 0x01010266
+int attr imeActionLabel 0x01010265
+int attr imeExtractEnterAnimation 0x01010268
+int attr imeExtractExitAnimation 0x01010269
+int attr imeFullscreenBackground 0x0101022c
+int attr imeOptions 0x01010264
+int attr imeSubtypeExtraValue 0x010102ee
+int attr imeSubtypeLocale 0x010102ec
+int attr imeSubtypeMode 0x010102ed
+int attr immersive 0x010102c0
+int attr importantForAccessibility 0x010103aa
+int attr inAnimation 0x01010177
+int attr includeFontPadding 0x0101015f
+int attr includeInGlobalSearch 0x0101026e
+int attr indeterminate 0x01010139
+int attr indeterminateBehavior 0x0101013e
+int attr indeterminateDrawable 0x0101013b
+int attr indeterminateDuration 0x0101013d
+int attr indeterminateOnly 0x0101013a
+int attr indeterminateProgressStyle 0x01010318
+int attr indicatorLeft 0x0101010d
+int attr indicatorRight 0x0101010e
+int attr inflatedId 0x010100f3
+int attr initOrder 0x0101001a
+int attr initialKeyguardLayout 0x010103c2
+int attr initialLayout 0x01010251
+int attr innerRadius 0x0101025f
+int attr innerRadiusRatio 0x0101019b
+int attr inputMethod 0x01010168
+int attr inputType 0x01010220
+int attr insetBottom 0x010101ba
+int attr insetLeft 0x010101b7
+int attr insetRight 0x010101b8
+int attr insetTop 0x010101b9
+int attr installLocation 0x010102b7
+int attr interpolator 0x01010141
+int attr isAlwaysSyncable 0x01010333
+int attr isAuxiliary 0x0101037f
+int attr isDefault 0x01010221
+int attr isIndicator 0x01010147
+int attr isModifier 0x01010246
+int attr isRepeatable 0x01010248
+int attr isScrollContainer 0x0101024e
+int attr isSticky 0x01010247
+int attr isolatedProcess 0x010103a9
+int attr itemBackground 0x01010130
+int attr itemIconDisabledAlpha 0x01010131
+int attr itemPadding 0x0101032d
+int attr itemTextAppearance 0x0101012c
+int attr keepScreenOn 0x01010216
+int attr key 0x010101e8
+int attr keyBackground 0x01010233
+int attr keyEdgeFlags 0x01010245
+int attr keyHeight 0x0101023e
+int attr keyIcon 0x0101024c
+int attr keyLabel 0x0101024b
+int attr keyOutputText 0x0101024a
+int attr keyPreviewHeight 0x01010239
+int attr keyPreviewLayout 0x01010237
+int attr keyPreviewOffset 0x01010238
+int attr keyTextColor 0x01010236
+int attr keyTextSize 0x01010234
+int attr keyWidth 0x0101023d
+int attr keyboardLayout 0x010103ab
+int attr keyboardMode 0x0101024d
+int attr keycode 0x010100c5
+int attr killAfterRestore 0x0101029c
+int attr label 0x01010001
+int attr labelFor 0x010103c6
+int attr labelTextSize 0x01010235
+int attr largeHeap 0x0101035a
+int attr largeScreens 0x01010286
+int attr largestWidthLimitDp 0x01010366
+int attr launchMode 0x0101001d
+int attr layerType 0x01010354
+int attr layout 0x010100f2
+int attr layoutAnimation 0x010100ec
+int attr layoutDirection 0x010103b2
+int attr layout_above 0x01010184
+int attr layout_alignBaseline 0x01010186
+int attr layout_alignBottom 0x0101018a
+int attr layout_alignEnd 0x010103ba
+int attr layout_alignLeft 0x01010187
+int attr layout_alignParentBottom 0x0101018e
+int attr layout_alignParentEnd 0x010103bc
+int attr layout_alignParentLeft 0x0101018b
+int attr layout_alignParentRight 0x0101018d
+int attr layout_alignParentStart 0x010103bb
+int attr layout_alignParentTop 0x0101018c
+int attr layout_alignRight 0x01010189
+int attr layout_alignStart 0x010103b9
+int attr layout_alignTop 0x01010188
+int attr layout_alignWithParentIfMissing 0x01010192
+int attr layout_below 0x01010185
+int attr layout_centerHorizontal 0x01010190
+int attr layout_centerInParent 0x0101018f
+int attr layout_centerVertical 0x01010191
+int attr layout_column 0x0101014c
+int attr layout_columnSpan 0x0101037d
+int attr layout_gravity 0x010100b3
+int attr layout_height 0x010100f5
+int attr layout_margin 0x010100f6
+int attr layout_marginBottom 0x010100fa
+int attr layout_marginEnd 0x010103b6
+int attr layout_marginLeft 0x010100f7
+int attr layout_marginRight 0x010100f9
+int attr layout_marginStart 0x010103b5
+int attr layout_marginTop 0x010100f8
+int attr layout_row 0x0101037b
+int attr layout_rowSpan 0x0101037c
+int attr layout_scale 0x01010193
+int attr layout_span 0x0101014d
+int attr layout_toEndOf 0x010103b8
+int attr layout_toLeftOf 0x01010182
+int attr layout_toRightOf 0x01010183
+int attr layout_toStartOf 0x010103b7
+int attr layout_weight 0x01010181
+int attr layout_width 0x010100f4
+int attr layout_x 0x0101017f
+int attr layout_y 0x01010180
+int attr left 0x010101ad
+int attr lineSpacingExtra 0x01010217
+int attr lineSpacingMultiplier 0x01010218
+int attr lines 0x01010154
+int attr linksClickable 0x010100b1
+int attr listChoiceBackgroundIndicator 0x010102f0
+int attr listChoiceIndicatorMultiple 0x0101021a
+int attr listChoiceIndicatorSingle 0x01010219
+int attr listDivider 0x01010214
+int attr listDividerAlertDialog 0x01010305
+int attr listPopupWindowStyle 0x010102ff
+int attr listPreferredItemHeight 0x0101004d
+int attr listPreferredItemHeightLarge 0x01010386
+int attr listPreferredItemHeightSmall 0x01010387
+int attr listPreferredItemPaddingEnd 0x010103be
+int attr listPreferredItemPaddingLeft 0x010103a3
+int attr listPreferredItemPaddingRight 0x010103a4
+int attr listPreferredItemPaddingStart 0x010103bd
+int attr listSelector 0x010100fb
+int attr listSeparatorTextViewStyle 0x01010208
+int attr listViewStyle 0x01010074
+int attr listViewWhiteStyle 0x01010075
+int attr logo 0x010102be
+int attr longClickable 0x010100e6
+int attr loopViews 0x01010307
+int attr manageSpaceActivity 0x01010004
+int attr mapViewStyle 0x0101008a
+int attr marqueeRepeatLimit 0x0101021d
+int attr max 0x01010136
+int attr maxDate 0x01010340
+int attr maxEms 0x01010157
+int attr maxHeight 0x01010120
+int attr maxItemsPerRow 0x01010134
+int attr maxLength 0x01010160
+int attr maxLevel 0x010101b2
+int attr maxLines 0x01010153
+int attr maxRows 0x01010133
+int attr maxSdkVersion 0x01010271
+int attr maxWidth 0x0101011f
+int attr measureAllChildren 0x0101010a
+int attr measureWithLargestChild 0x010102d4
+int attr mediaRouteButtonStyle 0x010103ad
+int attr mediaRouteTypes 0x010103ae
+int attr menuCategory 0x010101de
+int attr mimeType 0x01010026
+int attr minDate 0x0101033f
+int attr minEms 0x0101015a
+int attr minHeight 0x01010140
+int attr minLevel 0x010101b1
+int attr minLines 0x01010156
+int attr minResizeHeight 0x01010396
+int attr minResizeWidth 0x01010395
+int attr minSdkVersion 0x0101020c
+int attr minWidth 0x0101013f
+int attr mode 0x0101017e
+int attr moreIcon 0x01010135
+int attr multiprocess 0x01010013
+int attr name 0x01010003
+int attr navigationMode 0x010102cf
+int attr negativeButtonText 0x010101f6
+int attr nextFocusDown 0x010100e4
+int attr nextFocusForward 0x0101033c
+int attr nextFocusLeft 0x010100e1
+int attr nextFocusRight 0x010100e2
+int attr nextFocusUp 0x010100e3
+int attr noHistory 0x0101022d
+int attr normalScreens 0x01010285
+int attr notificationTimeout 0x01010383
+int attr numColumns 0x01010118
+int attr numStars 0x01010144
+int attr numeric 0x01010165
+int attr numericShortcut 0x010101e4
+int attr onClick 0x0101026f
+int attr oneshot 0x01010197
+int attr opacity 0x0101031e
+int attr order 0x010101ea
+int attr orderInCategory 0x010101df
+int attr ordering 0x010102e2
+int attr orderingFromXml 0x010101e7
+int attr orientation 0x010100c4
+int attr outAnimation 0x01010178
+int attr overScrollFooter 0x010102c3
+int attr overScrollHeader 0x010102c2
+int attr overScrollMode 0x010102c1
+int attr overridesImplicitlyEnabledSubtype 0x010103a2
+int attr packageNames 0x01010381
+int attr padding 0x010100d5
+int attr paddingBottom 0x010100d9
+int attr paddingEnd 0x010103b4
+int attr paddingLeft 0x010100d6
+int attr paddingRight 0x010100d8
+int attr paddingStart 0x010103b3
+int attr paddingTop 0x010100d7
+int attr panelBackground 0x0101005e
+int attr panelColorBackground 0x01010061
+int attr panelColorForeground 0x01010060
+int attr panelFullBackground 0x0101005f
+int attr panelTextAppearance 0x01010062
+int attr parentActivityName 0x010103a7
+int attr password 0x0101015c
+int attr path 0x0101002a
+int attr pathPattern 0x0101002c
+int attr pathPrefix 0x0101002b
+int attr permission 0x01010006
+int attr permissionFlags 0x010103c7
+int attr permissionGroup 0x0101000a
+int attr permissionGroupFlags 0x010103c5
+int attr persistent 0x0101000d
+int attr persistentDrawingCache 0x010100ee
+int attr phoneNumber 0x01010167
+int attr pivotX 0x010101b5
+int attr pivotY 0x010101b6
+int attr popupAnimationStyle 0x010102c9
+int attr popupBackground 0x01010176
+int attr popupCharacters 0x01010244
+int attr popupKeyboard 0x01010243
+int attr popupLayout 0x0101023b
+int attr popupMenuStyle 0x01010300
+int attr popupWindowStyle 0x01010076
+int attr port 0x01010029
+int attr positiveButtonText 0x010101f5
+int attr preferenceCategoryStyle 0x0101008c
+int attr preferenceInformationStyle 0x0101008d
+int attr preferenceLayoutChild 0x01010094
+int attr preferenceScreenStyle 0x0101008b
+int attr preferenceStyle 0x0101008e
+int attr presentationTheme 0x010103c0
+int attr previewImage 0x010102da
+int attr priority 0x0101001c
+int attr privateImeOptions 0x01010223
+int attr process 0x01010011
+int attr progress 0x01010137
+int attr progressBarPadding 0x01010319
+int attr progressBarStyle 0x01010077
+int attr progressBarStyleHorizontal 0x01010078
+int attr progressBarStyleInverse 0x01010287
+int attr progressBarStyleLarge 0x0101007a
+int attr progressBarStyleLargeInverse 0x01010289
+int attr progressBarStyleSmall 0x01010079
+int attr progressBarStyleSmallInverse 0x01010288
+int attr progressBarStyleSmallTitle 0x0101020f
+int attr progressDrawable 0x0101013c
+int attr prompt 0x0101017b
+int attr propertyName 0x010102e1
+int attr protectionLevel 0x01010009
+int attr publicKey 0x010103a6
+int attr queryActionMsg 0x010101db
+int attr queryAfterZeroResults 0x01010282
+int attr queryHint 0x01010358
+int attr quickContactBadgeStyleSmallWindowLarge 0x010102b3
+int attr quickContactBadgeStyleSmallWindowMedium 0x010102b2
+int attr quickContactBadgeStyleSmallWindowSmall 0x010102b1
+int attr quickContactBadgeStyleWindowLarge 0x010102b0
+int attr quickContactBadgeStyleWindowMedium 0x010102af
+int attr quickContactBadgeStyleWindowSmall 0x010102ae
+int attr radioButtonStyle 0x0101007e
+int attr radius 0x010101a8
+int attr rating 0x01010145
+int attr ratingBarStyle 0x0101007c
+int attr ratingBarStyleIndicator 0x01010210
+int attr ratingBarStyleSmall 0x0101007d
+int attr readPermission 0x01010007
+int attr repeatCount 0x010101bf
+int attr repeatMode 0x010101c0
+int attr reqFiveWayNav 0x01010232
+int attr reqHardKeyboard 0x01010229
+int attr reqKeyboardType 0x01010228
+int attr reqNavigation 0x0101022a
+int attr reqTouchScreen 0x01010227
+int attr required 0x0101028e
+int attr requiresFadingEdge 0x010103a5
+int attr requiresSmallestWidthDp 0x01010364
+int attr resizeMode 0x01010363
+int attr resizeable 0x0101028d
+int attr resource 0x01010025
+int attr restoreAnyVersion 0x010102ba
+int attr restoreNeedsApplication 0x0101029d
+int attr right 0x010101af
+int attr ringtonePreferenceStyle 0x01010093
+int attr ringtoneType 0x010101f9
+int attr rotation 0x01010326
+int attr rotationX 0x01010327
+int attr rotationY 0x01010328
+int attr rowCount 0x01010375
+int attr rowDelay 0x010101d0
+int attr rowEdgeFlags 0x01010241
+int attr rowHeight 0x01010132
+int attr rowOrderPreserved 0x01010376
+int attr saveEnabled 0x010100e7
+int attr scaleGravity 0x010101fe
+int attr scaleHeight 0x010101fd
+int attr scaleType 0x0101011d
+int attr scaleWidth 0x010101fc
+int attr scaleX 0x01010324
+int attr scaleY 0x01010325
+int attr scheme 0x01010027
+int attr screenDensity 0x010102cb
+int attr screenOrientation 0x0101001e
+int attr screenSize 0x010102ca
+int attr scrollHorizontally 0x0101015b
+int attr scrollViewStyle 0x01010080
+int attr scrollX 0x010100d2
+int attr scrollY 0x010100d3
+int attr scrollbarAlwaysDrawHorizontalTrack 0x01010068
+int attr scrollbarAlwaysDrawVerticalTrack 0x01010069
+int attr scrollbarDefaultDelayBeforeFade 0x010102a9
+int attr scrollbarFadeDuration 0x010102a8
+int attr scrollbarSize 0x01010063
+int attr scrollbarStyle 0x0101007f
+int attr scrollbarThumbHorizontal 0x01010064
+int attr scrollbarThumbVertical 0x01010065
+int attr scrollbarTrackHorizontal 0x01010066
+int attr scrollbarTrackVertical 0x01010067
+int attr scrollbars 0x010100de
+int attr scrollingCache 0x010100fe
+int attr searchButtonText 0x01010205
+int attr searchMode 0x010101d5
+int attr searchSettingsDescription 0x0101028a
+int attr searchSuggestAuthority 0x010101d6
+int attr searchSuggestIntentAction 0x010101d9
+int attr searchSuggestIntentData 0x010101da
+int attr searchSuggestPath 0x010101d7
+int attr searchSuggestSelection 0x010101d8
+int attr searchSuggestThreshold 0x0101026d
+int attr secondaryProgress 0x01010138
+int attr seekBarStyle 0x0101007b
+int attr segmentedButtonStyle 0x01010330
+int attr selectAllOnFocus 0x0101015e
+int attr selectable 0x010101e6
+int attr selectableItemBackground 0x0101030e
+int attr selectedDateVerticalBar 0x01010347
+int attr selectedWeekBackgroundColor 0x01010342
+int attr settingsActivity 0x01010225
+int attr shadowColor 0x01010161
+int attr shadowDx 0x01010162
+int attr shadowDy 0x01010163
+int attr shadowRadius 0x01010164
+int attr shape 0x0101019a
+int attr shareInterpolator 0x010101bb
+int attr sharedUserId 0x0101000b
+int attr sharedUserLabel 0x01010261
+int attr shouldDisableView 0x010101ee
+int attr showAsAction 0x010102d9
+int attr showDefault 0x010101fa
+int attr showDividers 0x01010329
+int attr showOnLockScreen 0x010103c9
+int attr showSilent 0x010101fb
+int attr showWeekNumber 0x0101033e
+int attr shownWeekCount 0x01010341
+int attr shrinkColumns 0x0101014a
+int attr singleLine 0x0101015d
+int attr singleUser 0x010103bf
+int attr smallIcon 0x0101029e
+int attr smallScreens 0x01010284
+int attr smoothScrollbar 0x01010231
+int attr soundEffectsEnabled 0x01010215
+int attr spacing 0x01010113
+int attr spinnerDropDownItemStyle 0x01010087
+int attr spinnerItemStyle 0x01010089
+int attr spinnerMode 0x010102f1
+int attr spinnerStyle 0x01010081
+int attr spinnersShown 0x0101034b
+int attr splitMotionEvents 0x010102ef
+int attr src 0x01010119
+int attr stackFromBottom 0x010100fd
+int attr starStyle 0x01010082
+int attr startColor 0x0101019d
+int attr startOffset 0x010101be
+int attr startYear 0x0101017c
+int attr stateNotNeeded 0x01010016
+int attr state_above_anchor 0x010100aa
+int attr state_accelerated 0x0101031b
+int attr state_activated 0x010102fe
+int attr state_active 0x010100a2
+int attr state_checkable 0x0101009f
+int attr state_checked 0x010100a0
+int attr state_drag_can_accept 0x01010368
+int attr state_drag_hovered 0x01010369
+int attr state_empty 0x010100a9
+int attr state_enabled 0x0101009e
+int attr state_expanded 0x010100a8
+int attr state_first 0x010100a4
+int attr state_focused 0x0101009c
+int attr state_hovered 0x01010367
+int attr state_last 0x010100a6
+int attr state_long_pressable 0x0101023c
+int attr state_middle 0x010100a5
+int attr state_multiline 0x0101034d
+int attr state_pressed 0x010100a7
+int attr state_selected 0x010100a1
+int attr state_single 0x010100a3
+int attr state_window_focused 0x0101009d
+int attr staticWallpaperPreview 0x01010331
+int attr stepSize 0x01010146
+int attr stopWithTask 0x0101036a
+int attr streamType 0x01010209
+int attr stretchColumns 0x01010149
+int attr stretchMode 0x01010116
+int attr subtitle 0x010102d1
+int attr subtitleTextStyle 0x010102f9
+int attr subtypeExtraValue 0x0101039a
+int attr subtypeId 0x010103c1
+int attr subtypeLocale 0x01010399
+int attr suggestActionMsg 0x010101dc
+int attr suggestActionMsgColumn 0x010101dd
+int attr summary 0x010101e9
+int attr summaryColumn 0x010102a2
+int attr summaryOff 0x010101f0
+int attr summaryOn 0x010101ef
+int attr supportsRtl 0x010103af
+int attr supportsUploading 0x0101029b
+int attr switchMinWidth 0x01010370
+int attr switchPadding 0x01010371
+int attr switchPreferenceStyle 0x0101036d
+int attr switchTextAppearance 0x0101036e
+int attr switchTextOff 0x0101036c
+int attr switchTextOn 0x0101036b
+int attr syncable 0x01010019
+int attr tabStripEnabled 0x010102bd
+int attr tabStripLeft 0x010102bb
+int attr tabStripRight 0x010102bc
+int attr tabWidgetStyle 0x01010083
+int attr tag 0x010100d1
+int attr targetActivity 0x01010202
+int attr targetClass 0x0101002f
+int attr targetDescriptions 0x010103a0
+int attr targetPackage 0x01010021
+int attr targetSdkVersion 0x01010270
+int attr taskAffinity 0x01010012
+int attr taskCloseEnterAnimation 0x010100be
+int attr taskCloseExitAnimation 0x010100bf
+int attr taskOpenEnterAnimation 0x010100bc
+int attr taskOpenExitAnimation 0x010100bd
+int attr taskToBackEnterAnimation 0x010100c2
+int attr taskToBackExitAnimation 0x010100c3
+int attr taskToFrontEnterAnimation 0x010100c0
+int attr taskToFrontExitAnimation 0x010100c1
+int attr tension 0x0101026a
+int attr testOnly 0x01010272
+int attr text 0x0101014f
+int attr textAlignment 0x010103b1
+int attr textAllCaps 0x0101038c
+int attr textAppearance 0x01010034
+int attr textAppearanceButton 0x01010207
+int attr textAppearanceInverse 0x01010035
+int attr textAppearanceLarge 0x01010040
+int attr textAppearanceLargeInverse 0x01010043
+int attr textAppearanceLargePopupMenu 0x01010301
+int attr textAppearanceListItem 0x0101039e
+int attr textAppearanceListItemSmall 0x0101039f
+int attr textAppearanceMedium 0x01010041
+int attr textAppearanceMediumInverse 0x01010044
+int attr textAppearanceSearchResultSubtitle 0x010102a0
+int attr textAppearanceSearchResultTitle 0x010102a1
+int attr textAppearanceSmall 0x01010042
+int attr textAppearanceSmallInverse 0x01010045
+int attr textAppearanceSmallPopupMenu 0x01010302
+int attr textCheckMark 0x01010046
+int attr textCheckMarkInverse 0x01010047
+int attr textColor 0x01010098
+int attr textColorAlertDialogListItem 0x01010306
+int attr textColorHighlight 0x01010099
+int attr textColorHighlightInverse 0x0101034f
+int attr textColorHint 0x0101009a
+int attr textColorHintInverse 0x0101003f
+int attr textColorLink 0x0101009b
+int attr textColorLinkInverse 0x01010350
+int attr textColorPrimary 0x01010036
+int attr textColorPrimaryDisableOnly 0x01010037
+int attr textColorPrimaryInverse 0x01010039
+int attr textColorPrimaryInverseDisableOnly 0x0101028b
+int attr textColorPrimaryInverseNoDisable 0x0101003d
+int attr textColorPrimaryNoDisable 0x0101003b
+int attr textColorSecondary 0x01010038
+int attr textColorSecondaryInverse 0x0101003a
+int attr textColorSecondaryInverseNoDisable 0x0101003e
+int attr textColorSecondaryNoDisable 0x0101003c
+int attr textColorTertiary 0x01010212
+int attr textColorTertiaryInverse 0x01010213
+int attr textCursorDrawable 0x01010362
+int attr textDirection 0x010103b0
+int attr textEditNoPasteWindowLayout 0x01010315
+int attr textEditPasteWindowLayout 0x01010314
+int attr textEditSideNoPasteWindowLayout 0x0101035f
+int attr textEditSidePasteWindowLayout 0x0101035e
+int attr textEditSuggestionItemLayout 0x01010374
+int attr textFilterEnabled 0x010100ff
+int attr textIsSelectable 0x01010316
+int attr textOff 0x01010125
+int attr textOn 0x01010124
+int attr textScaleX 0x01010151
+int attr textSelectHandle 0x010102c7
+int attr textSelectHandleLeft 0x010102c5
+int attr textSelectHandleRight 0x010102c6
+int attr textSelectHandleWindowStyle 0x010102c8
+int attr textSize 0x01010095
+int attr textStyle 0x01010097
+int attr textSuggestionsWindowStyle 0x01010373
+int attr textViewStyle 0x01010084
+int attr theme 0x01010000
+int attr thickness 0x01010260
+int attr thicknessRatio 0x0101019c
+int attr thumb 0x01010142
+int attr thumbOffset 0x01010143
+int attr thumbTextPadding 0x01010372
+int attr thumbnail 0x010102a5
+int attr tileMode 0x01010201
+int attr timeZone 0x010103cc
+int attr tint 0x01010121
+int attr title 0x010101e1
+int attr titleCondensed 0x010101e2
+int attr titleTextStyle 0x010102f8
+int attr toAlpha 0x010101cb
+int attr toDegrees 0x010101b4
+int attr toXDelta 0x010101c7
+int attr toXScale 0x010101c3
+int attr toYDelta 0x010101c9
+int attr toYScale 0x010101c5
+int attr top 0x010101ae
+int attr topBright 0x010100cb
+int attr topDark 0x010100c7
+int attr topLeftRadius 0x010101a9
+int attr topOffset 0x01010258
+int attr topRightRadius 0x010101aa
+int attr track 0x0101036f
+int attr transcriptMode 0x01010100
+int attr transformPivotX 0x01010320
+int attr transformPivotY 0x01010321
+int attr translationX 0x01010322
+int attr translationY 0x01010323
+int attr type 0x010101a1
+int attr typeface 0x01010096
+int attr uiOptions 0x01010398
+int attr uncertainGestureColor 0x01010276
+int attr unfocusedMonthDateColor 0x01010344
+int attr unselectedAlpha 0x0101020e
+int attr updatePeriodMillis 0x01010250
+int attr useDefaultMargins 0x01010379
+int attr useIntrinsicSizeAsMinimum 0x01010310
+int attr useLevel 0x0101019f
+int attr userVisible 0x01010291
+int attr value 0x01010024
+int attr valueFrom 0x010102de
+int attr valueTo 0x010102df
+int attr valueType 0x010102e0
+int attr variablePadding 0x01010195
+int attr versionCode 0x0101021b
+int attr versionName 0x0101021c
+int attr verticalCorrection 0x0101023a
+int attr verticalDivider 0x0101012e
+int attr verticalGap 0x01010240
+int attr verticalScrollbarPosition 0x01010334
+int attr verticalSpacing 0x01010115
+int attr visibility 0x010100dc
+int attr visible 0x01010194
+int attr vmSafeMode 0x010102b8
+int attr voiceLanguage 0x01010255
+int attr voiceLanguageModel 0x01010253
+int attr voiceMaxResults 0x01010256
+int attr voicePromptText 0x01010254
+int attr voiceSearchMode 0x01010252
+int attr wallpaperCloseEnterAnimation 0x01010295
+int attr wallpaperCloseExitAnimation 0x01010296
+int attr wallpaperIntraCloseEnterAnimation 0x01010299
+int attr wallpaperIntraCloseExitAnimation 0x0101029a
+int attr wallpaperIntraOpenEnterAnimation 0x01010297
+int attr wallpaperIntraOpenExitAnimation 0x01010298
+int attr wallpaperOpenEnterAnimation 0x01010293
+int attr wallpaperOpenExitAnimation 0x01010294
+int attr webTextViewStyle 0x010102b9
+int attr webViewStyle 0x01010085
+int attr weekDayTextAppearance 0x01010348
+int attr weekNumberColor 0x01010345
+int attr weekSeparatorLineColor 0x01010346
+int attr weightSum 0x01010128
+int attr widgetCategory 0x010103c4
+int attr widgetLayout 0x010101eb
+int attr width 0x01010159
+int attr windowActionBar 0x010102cd
+int attr windowActionBarOverlay 0x010102e4
+int attr windowActionModeOverlay 0x010102dd
+int attr windowAnimationStyle 0x010100ae
+int attr windowBackground 0x01010054
+int attr windowCloseOnTouchOutside 0x0101035b
+int attr windowContentOverlay 0x01010059
+int attr windowDisablePreview 0x01010222
+int attr windowEnableSplitTouch 0x01010317
+int attr windowEnterAnimation 0x010100b4
+int attr windowExitAnimation 0x010100b5
+int attr windowFrame 0x01010055
+int attr windowFullscreen 0x0101020d
+int attr windowHideAnimation 0x010100b7
+int attr windowIsFloating 0x01010057
+int attr windowIsTranslucent 0x01010058
+int attr windowMinWidthMajor 0x01010356
+int attr windowMinWidthMinor 0x01010357
+int attr windowNoDisplay 0x0101021e
+int attr windowNoTitle 0x01010056
+int attr windowShowAnimation 0x010100b6
+int attr windowShowWallpaper 0x01010292
+int attr windowSoftInputMode 0x0101022b
+int attr windowTitleBackgroundStyle 0x0101005c
+int attr windowTitleSize 0x0101005a
+int attr windowTitleStyle 0x0101005b
+int attr writePermission 0x01010008
+int attr x 0x010100ac
+int attr xlargeScreens 0x010102bf
+int attr y 0x010100ad
+int attr yesNoPreferenceStyle 0x01010090
+int attr zAdjustment 0x010101c1
diff --git a/linkedin-sdk/build/intermediates/blame/res/androidTest/debug/multi-v2/debug.json b/linkedin-sdk/build/intermediates/blame/res/androidTest/debug/multi-v2/debug.json
new file mode 100644
index 0000000..a96e7a1
--- /dev/null
+++ b/linkedin-sdk/build/intermediates/blame/res/androidTest/debug/multi-v2/debug.json
@@ -0,0 +1,19 @@
+{
+    "logs": [
+        {
+            "outputFile": "/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/build/intermediates/res/merged/androidTest/debug/values_values.arsc.flat",
+            "map": [
+                {
+                    "source": "/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/build/intermediates/bundles/debug/res/values/values.xml",
+                    "from": {
+                        "startLines": "2,3,4,5",
+                        "startColumns": "4,4,4,4",
+                        "startOffsets": "55,117,183,322",
+                        "endColumns": "61,65,138,73",
+                        "endOffsets": "112,178,317,391"
+                    }
+                }
+            ]
+        }
+    ]
+}
\ No newline at end of file
diff --git a/linkedin-sdk/build/intermediates/blame/res/androidTest/debug/multi-v2/values.json b/linkedin-sdk/build/intermediates/blame/res/androidTest/debug/multi-v2/values.json
new file mode 100644
index 0000000..5c8278d
--- /dev/null
+++ b/linkedin-sdk/build/intermediates/blame/res/androidTest/debug/multi-v2/values.json
@@ -0,0 +1,19 @@
+{
+    "logs": [
+        {
+            "outputFile": "/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/build/intermediates/incremental/mergeDebugAndroidTestResources/merged.dir/values/values.xml",
+            "map": [
+                {
+                    "source": "/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/build/intermediates/bundles/debug/res/values/values.xml",
+                    "from": {
+                        "startLines": "2,3,4,5",
+                        "startColumns": "4,4,4,4",
+                        "startOffsets": "55,117,183,322",
+                        "endColumns": "61,65,138,73",
+                        "endOffsets": "112,178,317,391"
+                    }
+                }
+            ]
+        }
+    ]
+}
\ No newline at end of file
diff --git a/linkedin-sdk/build/intermediates/blame/res/androidTest/debug/single/debug.json b/linkedin-sdk/build/intermediates/blame/res/androidTest/debug/single/debug.json
new file mode 100644
index 0000000..119efe9
--- /dev/null
+++ b/linkedin-sdk/build/intermediates/blame/res/androidTest/debug/single/debug.json
@@ -0,0 +1,18 @@
+[
+    {
+        "merged": "/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/build/intermediates/res/merged/androidTest/debug/drawable-mdpi-v4_ic_launcher.png.flat",
+        "source": "/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/build/intermediates/bundles/debug/res/drawable-mdpi-v4/ic_launcher.png"
+    },
+    {
+        "merged": "/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/build/intermediates/res/merged/androidTest/debug/drawable-xxhdpi-v4_ic_launcher.png.flat",
+        "source": "/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/build/intermediates/bundles/debug/res/drawable-xxhdpi-v4/ic_launcher.png"
+    },
+    {
+        "merged": "/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/build/intermediates/res/merged/androidTest/debug/drawable-hdpi-v4_ic_launcher.png.flat",
+        "source": "/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/build/intermediates/bundles/debug/res/drawable-hdpi-v4/ic_launcher.png"
+    },
+    {
+        "merged": "/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/build/intermediates/res/merged/androidTest/debug/drawable-xhdpi-v4_ic_launcher.png.flat",
+        "source": "/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/build/intermediates/bundles/debug/res/drawable-xhdpi-v4/ic_launcher.png"
+    }
+]
\ No newline at end of file
diff --git a/linkedin-sdk/build/intermediates/bundles/debug/R.txt b/linkedin-sdk/build/intermediates/bundles/debug/R.txt
new file mode 100644
index 0000000..92c0475
--- /dev/null
+++ b/linkedin-sdk/build/intermediates/bundles/debug/R.txt
@@ -0,0 +1,5 @@
+int drawable ic_launcher 0x7f090001
+int string update_linkedin_app_cancel 0x7f150001
+int string update_linkedin_app_download 0x7f150002
+int string update_linkedin_app_message 0x7f150003
+int string update_linkedin_app_title 0x7f150004
diff --git a/linkedin-sdk/build/intermediates/bundles/debug/res/drawable-hdpi-v4/ic_launcher.png b/linkedin-sdk/build/intermediates/bundles/debug/res/drawable-hdpi-v4/ic_launcher.png
new file mode 100644
index 0000000..96a442e
Binary files /dev/null and b/linkedin-sdk/build/intermediates/bundles/debug/res/drawable-hdpi-v4/ic_launcher.png differ
diff --git a/linkedin-sdk/build/intermediates/bundles/debug/res/drawable-mdpi-v4/ic_launcher.png b/linkedin-sdk/build/intermediates/bundles/debug/res/drawable-mdpi-v4/ic_launcher.png
new file mode 100644
index 0000000..359047d
Binary files /dev/null and b/linkedin-sdk/build/intermediates/bundles/debug/res/drawable-mdpi-v4/ic_launcher.png differ
diff --git a/linkedin-sdk/build/intermediates/bundles/debug/res/drawable-xhdpi-v4/ic_launcher.png b/linkedin-sdk/build/intermediates/bundles/debug/res/drawable-xhdpi-v4/ic_launcher.png
new file mode 100644
index 0000000..71c6d76
Binary files /dev/null and b/linkedin-sdk/build/intermediates/bundles/debug/res/drawable-xhdpi-v4/ic_launcher.png differ
diff --git a/linkedin-sdk/build/intermediates/bundles/debug/res/drawable-xxhdpi-v4/ic_launcher.png b/linkedin-sdk/build/intermediates/bundles/debug/res/drawable-xxhdpi-v4/ic_launcher.png
new file mode 100644
index 0000000..4df1894
Binary files /dev/null and b/linkedin-sdk/build/intermediates/bundles/debug/res/drawable-xxhdpi-v4/ic_launcher.png differ
diff --git a/linkedin-sdk/build/intermediates/bundles/debug/res/values/values.xml b/linkedin-sdk/build/intermediates/bundles/debug/res/values/values.xml
new file mode 100644
index 0000000..e722757
--- /dev/null
+++ b/linkedin-sdk/build/intermediates/bundles/debug/res/values/values.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="update_linkedin_app_cancel">Cancel</string>
+    <string name="update_linkedin_app_download">Download</string>
+    <string name="update_linkedin_app_message">To connect with LinkedIn you need to update LinkedIn app. Would you like to do it?</string>
+    <string name="update_linkedin_app_title">Update LinkedIn app</string>
+</resources>
\ No newline at end of file
diff --git a/linkedin-sdk/build/intermediates/classes/debug/android/support/v4/R.class b/linkedin-sdk/build/intermediates/classes/debug/android/support/v4/R.class
new file mode 100644
index 0000000..72b44b2
Binary files /dev/null and b/linkedin-sdk/build/intermediates/classes/debug/android/support/v4/R.class differ
diff --git a/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/android/mobilesdk/BuildConfig.class b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/android/mobilesdk/BuildConfig.class
new file mode 100644
index 0000000..de04e36
Binary files /dev/null and b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/android/mobilesdk/BuildConfig.class differ
diff --git a/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/android/mobilesdk/R$drawable.class b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/android/mobilesdk/R$drawable.class
new file mode 100644
index 0000000..db54186
Binary files /dev/null and b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/android/mobilesdk/R$drawable.class differ
diff --git a/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/android/mobilesdk/R$string.class b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/android/mobilesdk/R$string.class
new file mode 100644
index 0000000..50f8131
Binary files /dev/null and b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/android/mobilesdk/R$string.class differ
diff --git a/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/android/mobilesdk/R.class b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/android/mobilesdk/R.class
new file mode 100644
index 0000000..003b075
Binary files /dev/null and b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/android/mobilesdk/R.class differ
diff --git a/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/APIHelper$1.class b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/APIHelper$1.class
new file mode 100644
index 0000000..f9ee4b8
Binary files /dev/null and b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/APIHelper$1.class differ
diff --git a/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/APIHelper$2.class b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/APIHelper$2.class
new file mode 100644
index 0000000..bedea1b
Binary files /dev/null and b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/APIHelper$2.class differ
diff --git a/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/APIHelper$3.class b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/APIHelper$3.class
new file mode 100644
index 0000000..faa180c
Binary files /dev/null and b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/APIHelper$3.class differ
diff --git a/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/APIHelper.class b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/APIHelper.class
new file mode 100644
index 0000000..0e49183
Binary files /dev/null and b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/APIHelper.class differ
diff --git a/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/AccessToken.class b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/AccessToken.class
new file mode 100644
index 0000000..49485a0
Binary files /dev/null and b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/AccessToken.class differ
diff --git a/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/DeepLinkHelper.class b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/DeepLinkHelper.class
new file mode 100644
index 0000000..e674668
Binary files /dev/null and b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/DeepLinkHelper.class differ
diff --git a/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/LISession.class b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/LISession.class
new file mode 100644
index 0000000..b057371
Binary files /dev/null and b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/LISession.class differ
diff --git a/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/LISessionManager$LISessionImpl.class b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/LISessionManager$LISessionImpl.class
new file mode 100644
index 0000000..e5d6ca1
Binary files /dev/null and b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/LISessionManager$LISessionImpl.class differ
diff --git a/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/LISessionManager.class b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/LISessionManager.class
new file mode 100644
index 0000000..bd83ebe
Binary files /dev/null and b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/LISessionManager.class differ
diff --git a/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/errors/ApiErrorResponse.class b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/errors/ApiErrorResponse.class
new file mode 100644
index 0000000..501ab50
Binary files /dev/null and b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/errors/ApiErrorResponse.class differ
diff --git a/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/errors/LIApiError$ErrorType.class b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/errors/LIApiError$ErrorType.class
new file mode 100644
index 0000000..a838a56
Binary files /dev/null and b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/errors/LIApiError$ErrorType.class differ
diff --git a/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/errors/LIApiError.class b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/errors/LIApiError.class
new file mode 100644
index 0000000..dc964dc
Binary files /dev/null and b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/errors/LIApiError.class differ
diff --git a/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/errors/LIAppErrorCode.class b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/errors/LIAppErrorCode.class
new file mode 100644
index 0000000..3845ef0
Binary files /dev/null and b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/errors/LIAppErrorCode.class differ
diff --git a/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/errors/LIAuthError.class b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/errors/LIAuthError.class
new file mode 100644
index 0000000..78cda40
Binary files /dev/null and b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/errors/LIAuthError.class differ
diff --git a/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/errors/LIDeepLinkError.class b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/errors/LIDeepLinkError.class
new file mode 100644
index 0000000..78af743
Binary files /dev/null and b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/errors/LIDeepLinkError.class differ
diff --git a/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/internals/AppStore$1.class b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/internals/AppStore$1.class
new file mode 100644
index 0000000..75a228c
Binary files /dev/null and b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/internals/AppStore$1.class differ
diff --git a/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/internals/AppStore$2.class b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/internals/AppStore$2.class
new file mode 100644
index 0000000..dda31c2
Binary files /dev/null and b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/internals/AppStore$2.class differ
diff --git a/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/internals/AppStore$SupportedAppStore.class b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/internals/AppStore$SupportedAppStore.class
new file mode 100644
index 0000000..aa17f53
Binary files /dev/null and b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/internals/AppStore$SupportedAppStore.class differ
diff --git a/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/internals/AppStore.class b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/internals/AppStore.class
new file mode 100644
index 0000000..ce71793
Binary files /dev/null and b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/internals/AppStore.class differ
diff --git a/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/internals/BuildConfig.class b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/internals/BuildConfig.class
new file mode 100644
index 0000000..1d55993
Binary files /dev/null and b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/internals/BuildConfig.class differ
diff --git a/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/internals/LIAppVersion.class b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/internals/LIAppVersion.class
new file mode 100644
index 0000000..75a082a
Binary files /dev/null and b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/internals/LIAppVersion.class differ
diff --git a/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/internals/QueueManager.class b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/internals/QueueManager.class
new file mode 100644
index 0000000..1600bd8
Binary files /dev/null and b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/internals/QueueManager.class differ
diff --git a/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/listeners/ApiListener.class b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/listeners/ApiListener.class
new file mode 100644
index 0000000..b898847
Binary files /dev/null and b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/listeners/ApiListener.class differ
diff --git a/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/listeners/ApiResponse.class b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/listeners/ApiResponse.class
new file mode 100644
index 0000000..cd1d69e
Binary files /dev/null and b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/listeners/ApiResponse.class differ
diff --git a/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/listeners/AuthListener.class b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/listeners/AuthListener.class
new file mode 100644
index 0000000..fe83913
Binary files /dev/null and b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/listeners/AuthListener.class differ
diff --git a/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/listeners/DeepLinkListener.class b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/listeners/DeepLinkListener.class
new file mode 100644
index 0000000..985b1e5
Binary files /dev/null and b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/listeners/DeepLinkListener.class differ
diff --git a/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/utils/Scope$LIPermission.class b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/utils/Scope$LIPermission.class
new file mode 100644
index 0000000..cb666db
Binary files /dev/null and b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/utils/Scope$LIPermission.class differ
diff --git a/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/utils/Scope.class b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/utils/Scope.class
new file mode 100644
index 0000000..8c245fa
Binary files /dev/null and b/linkedin-sdk/build/intermediates/classes/debug/com/linkedin/platform/utils/Scope.class differ
diff --git a/linkedin-sdk/build/intermediates/incremental/compileDebugAidl/dependency.store b/linkedin-sdk/build/intermediates/incremental/compileDebugAidl/dependency.store
new file mode 100644
index 0000000..8b8400d
Binary files /dev/null and b/linkedin-sdk/build/intermediates/incremental/compileDebugAidl/dependency.store differ
diff --git a/linkedin-sdk/build/intermediates/incremental/compileDebugAndroidTestAidl/dependency.store b/linkedin-sdk/build/intermediates/incremental/compileDebugAndroidTestAidl/dependency.store
new file mode 100644
index 0000000..8b8400d
Binary files /dev/null and b/linkedin-sdk/build/intermediates/incremental/compileDebugAndroidTestAidl/dependency.store differ
diff --git a/linkedin-sdk/build/intermediates/incremental/debug-mergeJniLibs/merge-state b/linkedin-sdk/build/intermediates/incremental/debug-mergeJniLibs/merge-state
new file mode 100644
index 0000000..3dcaf7b
Binary files /dev/null and b/linkedin-sdk/build/intermediates/incremental/debug-mergeJniLibs/merge-state differ
diff --git a/linkedin-sdk/build/intermediates/incremental/mergeDebugAndroidTestResources/compile-file-map.properties b/linkedin-sdk/build/intermediates/incremental/mergeDebugAndroidTestResources/compile-file-map.properties
new file mode 100644
index 0000000..7342dc9
--- /dev/null
+++ b/linkedin-sdk/build/intermediates/incremental/mergeDebugAndroidTestResources/compile-file-map.properties
@@ -0,0 +1,5 @@
+#Thu Mar 01 01:30:35 IST 2018
+/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/build/intermediates/bundles/debug/res/drawable-mdpi-v4/ic_launcher.png=/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/build/intermediates/res/merged/androidTest/debug/drawable-mdpi-v4_ic_launcher.png.flat
+/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/build/intermediates/bundles/debug/res/drawable-xhdpi-v4/ic_launcher.png=/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/build/intermediates/res/merged/androidTest/debug/drawable-xhdpi-v4_ic_launcher.png.flat
+/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/build/intermediates/bundles/debug/res/drawable-hdpi-v4/ic_launcher.png=/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/build/intermediates/res/merged/androidTest/debug/drawable-hdpi-v4_ic_launcher.png.flat
+/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/build/intermediates/bundles/debug/res/drawable-xxhdpi-v4/ic_launcher.png=/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/build/intermediates/res/merged/androidTest/debug/drawable-xxhdpi-v4_ic_launcher.png.flat
diff --git a/linkedin-sdk/build/intermediates/incremental/mergeDebugAndroidTestResources/merged.dir/values/values.xml b/linkedin-sdk/build/intermediates/incremental/mergeDebugAndroidTestResources/merged.dir/values/values.xml
new file mode 100644
index 0000000..e722757
--- /dev/null
+++ b/linkedin-sdk/build/intermediates/incremental/mergeDebugAndroidTestResources/merged.dir/values/values.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="update_linkedin_app_cancel">Cancel</string>
+    <string name="update_linkedin_app_download">Download</string>
+    <string name="update_linkedin_app_message">To connect with LinkedIn you need to update LinkedIn app. Would you like to do it?</string>
+    <string name="update_linkedin_app_title">Update LinkedIn app</string>
+</resources>
\ No newline at end of file
diff --git a/linkedin-sdk/build/intermediates/incremental/mergeDebugAndroidTestResources/merger.xml b/linkedin-sdk/build/intermediates/incremental/mergeDebugAndroidTestResources/merger.xml
new file mode 100644
index 0000000..e949b5f
--- /dev/null
+++ b/linkedin-sdk/build/intermediates/incremental/mergeDebugAndroidTestResources/merger.xml
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet config="__tested_artifact__::linkedin-sdk$Generated" generated="true"><source path="/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/build/intermediates/bundles/debug/res"/></dataSet><dataSet config="__tested_artifact__::linkedin-sdk" from-dependency="true" generated-set="__tested_artifact__::linkedin-sdk$Generated"><source path="/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/build/intermediates/bundles/debug/res"><file name="ic_launcher" path="/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/build/intermediates/bundles/debug/res/drawable-hdpi-v4/ic_launcher.png" qualifiers="hdpi-v4" type="drawable"/><file name="ic_launcher" path="/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/build/intermediates/bundles/debug/res/drawable-mdpi-v4/ic_launcher.png" qualifiers="mdpi-v4" type="drawable"/><file name="ic_launcher" path="/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/build/intermediates/bundles/debug/res/drawable-xhdpi-v4/ic_launcher.png" qualifiers="xhdpi-v4" type="drawable"/><file name="ic_launcher" path="/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/build/intermediates/bundles/debug/res/drawable-xxhdpi-v4/ic_launcher.png" qualifiers="xxhdpi-v4" type="drawable"/><file path="/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/build/intermediates/bundles/debug/res/values/values.xml" qualifiers=""><string name="update_linkedin_app_cancel">Cancel</string><string name="update_linkedin_app_download">Download</string><string name="update_linkedin_app_message">To connect with LinkedIn you need to update LinkedIn app. Would you like to do it?</string><string name="update_linkedin_app_title">Update LinkedIn app</string></file></source></dataSet><dataSet config="main$Generated" generated="true"><source path="/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/test/res"/><source path="/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/build/generated/res/rs/androidTest/debug"/><source path="/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/build/generated/res/resValues/androidTest/debug"/></dataSet><dataSet config="main" generated-set="main$Generated"><source path="/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/test/res"/><source path="/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/build/generated/res/rs/androidTest/debug"/><source path="/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/build/generated/res/resValues/androidTest/debug"/></dataSet><dataSet config="debug$Generated" generated="true"><source path="/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/androidTestDebug/res"/></dataSet><dataSet config="debug" generated-set="debug$Generated"><source path="/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/androidTestDebug/res"/></dataSet><mergedItems/></merger>
\ No newline at end of file
diff --git a/linkedin-sdk/build/intermediates/incremental/mergeDebugAssets/merger.xml b/linkedin-sdk/build/intermediates/incremental/mergeDebugAssets/merger.xml
new file mode 100644
index 0000000..d6a3356
--- /dev/null
+++ b/linkedin-sdk/build/intermediates/incremental/mergeDebugAssets/merger.xml
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet config="main"><source path="/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/assets"/><source path="/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/build/generated/assets/shaders/debug"/></dataSet><dataSet config="debug"><source path="/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/debug/assets"/></dataSet></merger>
\ No newline at end of file
diff --git a/linkedin-sdk/build/intermediates/incremental/mergeDebugJniLibFolders/merger.xml b/linkedin-sdk/build/intermediates/incremental/mergeDebugJniLibFolders/merger.xml
new file mode 100644
index 0000000..15ed03a
--- /dev/null
+++ b/linkedin-sdk/build/intermediates/incremental/mergeDebugJniLibFolders/merger.xml
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet config="main"><source path="/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/jniLibs"/></dataSet><dataSet config="debug"><source path="/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/debug/jniLibs"/></dataSet></merger>
\ No newline at end of file
diff --git a/linkedin-sdk/build/intermediates/incremental/mergeDebugShaders/merger.xml b/linkedin-sdk/build/intermediates/incremental/mergeDebugShaders/merger.xml
new file mode 100644
index 0000000..1c73af9
--- /dev/null
+++ b/linkedin-sdk/build/intermediates/incremental/mergeDebugShaders/merger.xml
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet config="main"><source path="/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/shaders"/></dataSet><dataSet config="debug"><source path="/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/debug/shaders"/></dataSet></merger>
\ No newline at end of file
diff --git a/linkedin-sdk/build/intermediates/incremental/packageDebugResources/compile-file-map.properties b/linkedin-sdk/build/intermediates/incremental/packageDebugResources/compile-file-map.properties
new file mode 100644
index 0000000..888d726
--- /dev/null
+++ b/linkedin-sdk/build/intermediates/incremental/packageDebugResources/compile-file-map.properties
@@ -0,0 +1,5 @@
+#Thu Mar 01 01:30:35 IST 2018
+/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/res/drawable-xhdpi/ic_launcher.png=/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/build/intermediates/bundles/debug/res/drawable-xhdpi-v4/ic_launcher.png
+/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/res/drawable-xxhdpi/ic_launcher.png=/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/build/intermediates/bundles/debug/res/drawable-xxhdpi-v4/ic_launcher.png
+/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/res/drawable-hdpi/ic_launcher.png=/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/build/intermediates/bundles/debug/res/drawable-hdpi-v4/ic_launcher.png
+/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/res/drawable-mdpi/ic_launcher.png=/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/build/intermediates/bundles/debug/res/drawable-mdpi-v4/ic_launcher.png
diff --git a/linkedin-sdk/build/intermediates/incremental/packageDebugResources/merged.dir/values/values.xml b/linkedin-sdk/build/intermediates/incremental/packageDebugResources/merged.dir/values/values.xml
new file mode 100644
index 0000000..e722757
--- /dev/null
+++ b/linkedin-sdk/build/intermediates/incremental/packageDebugResources/merged.dir/values/values.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="update_linkedin_app_cancel">Cancel</string>
+    <string name="update_linkedin_app_download">Download</string>
+    <string name="update_linkedin_app_message">To connect with LinkedIn you need to update LinkedIn app. Would you like to do it?</string>
+    <string name="update_linkedin_app_title">Update LinkedIn app</string>
+</resources>
\ No newline at end of file
diff --git a/linkedin-sdk/build/intermediates/incremental/packageDebugResources/merger.xml b/linkedin-sdk/build/intermediates/incremental/packageDebugResources/merger.xml
new file mode 100644
index 0000000..759c5bc
--- /dev/null
+++ b/linkedin-sdk/build/intermediates/incremental/packageDebugResources/merger.xml
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet config="main$Generated" generated="true"><source path="/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/res"/><source path="/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/build/generated/res/rs/debug"/><source path="/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/build/generated/res/resValues/debug"/></dataSet><dataSet config="main" generated-set="main$Generated"><source path="/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/res"><file name="ic_launcher" path="/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/res/drawable-hdpi/ic_launcher.png" qualifiers="hdpi-v4" type="drawable"/><file name="ic_launcher" path="/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/res/drawable-mdpi/ic_launcher.png" qualifiers="mdpi-v4" type="drawable"/><file name="ic_launcher" path="/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/res/drawable-xhdpi/ic_launcher.png" qualifiers="xhdpi-v4" type="drawable"/><file name="ic_launcher" path="/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/res/drawable-xxhdpi/ic_launcher.png" qualifiers="xxhdpi-v4" type="drawable"/><file path="/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/res/values/strings.xml" qualifiers=""><string name="update_linkedin_app_title">Update LinkedIn app</string><string name="update_linkedin_app_message">To connect with LinkedIn you need to update LinkedIn app. Would you like to do it?</string><string name="update_linkedin_app_download">Download</string><string name="update_linkedin_app_cancel">Cancel</string></file></source><source path="/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/build/generated/res/rs/debug"/><source path="/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/build/generated/res/resValues/debug"/></dataSet><dataSet config="debug$Generated" generated="true"><source path="/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/debug/res"/></dataSet><dataSet config="debug" generated-set="debug$Generated"><source path="/Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/debug/res"/></dataSet><mergedItems/></merger>
\ No newline at end of file
diff --git a/linkedin-sdk/build/intermediates/intermediate-jars/debug/classes.jar b/linkedin-sdk/build/intermediates/intermediate-jars/debug/classes.jar
new file mode 100644
index 0000000..7645dfe
Binary files /dev/null and b/linkedin-sdk/build/intermediates/intermediate-jars/debug/classes.jar differ
diff --git a/linkedin-sdk/build/intermediates/intermediate-jars/debug/res.jar b/linkedin-sdk/build/intermediates/intermediate-jars/debug/res.jar
new file mode 100644
index 0000000..15cb0ec
Binary files /dev/null and b/linkedin-sdk/build/intermediates/intermediate-jars/debug/res.jar differ
diff --git a/linkedin-sdk/build/intermediates/javaPrecompile/debug/annotationProcessors.json b/linkedin-sdk/build/intermediates/javaPrecompile/debug/annotationProcessors.json
new file mode 100644
index 0000000..0637a08
--- /dev/null
+++ b/linkedin-sdk/build/intermediates/javaPrecompile/debug/annotationProcessors.json
@@ -0,0 +1 @@
+[]
\ No newline at end of file
diff --git a/linkedin-sdk/build/intermediates/manifest/androidTest/debug/AndroidManifest.xml b/linkedin-sdk/build/intermediates/manifest/androidTest/debug/AndroidManifest.xml
new file mode 100644
index 0000000..084e955
--- /dev/null
+++ b/linkedin-sdk/build/intermediates/manifest/androidTest/debug/AndroidManifest.xml
@@ -0,0 +1,24 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.linkedin.android.mobilesdk.test"
+    android:versionCode="1"
+    android:versionName="1.0" >
+
+    <uses-sdk
+        android:minSdkVersion="8"
+        android:targetSdkVersion="16" />
+
+    <uses-permission android:name="android.permission.INTERNET" />
+
+    <instrumentation
+        android:name="android.test.InstrumentationTestRunner"
+        android:functionalTest="false"
+        android:handleProfiling="false"
+        android:label="Tests for com.linkedin.android.mobilesdk.test"
+        android:targetPackage="com.linkedin.android.mobilesdk.test" />
+
+    <application android:debuggable="true" >
+        <uses-library android:name="android.test.runner" />
+    </application>
+
+</manifest>
\ No newline at end of file
diff --git a/linkedin-sdk/build/intermediates/manifest/androidTest/debug/output.json b/linkedin-sdk/build/intermediates/manifest/androidTest/debug/output.json
new file mode 100644
index 0000000..1050736
--- /dev/null
+++ b/linkedin-sdk/build/intermediates/manifest/androidTest/debug/output.json
@@ -0,0 +1 @@
+[{"outputType":{"type":"MERGED_MANIFESTS"},"apkInfo":{"type":"MAIN","splits":[],"versionCode":1},"path":"AndroidManifest.xml","properties":{}}]
\ No newline at end of file
diff --git a/linkedin-sdk/build/intermediates/manifests/aapt/debug/AndroidManifest.xml b/linkedin-sdk/build/intermediates/manifests/aapt/debug/AndroidManifest.xml
new file mode 100644
index 0000000..0ea583e
--- /dev/null
+++ b/linkedin-sdk/build/intermediates/manifests/aapt/debug/AndroidManifest.xml
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.linkedin.android.mobilesdk"
+    android:versionCode="1"
+    android:versionName="1.0" >
+
+    <uses-sdk
+        android:minSdkVersion="8"
+        android:targetSdkVersion="16" />
+
+    <uses-permission android:name="android.permission.INTERNET" />
+
+    <application />
+
+</manifest>
\ No newline at end of file
diff --git a/linkedin-sdk/build/intermediates/manifests/aapt/debug/output.json b/linkedin-sdk/build/intermediates/manifests/aapt/debug/output.json
new file mode 100644
index 0000000..cbd601a
--- /dev/null
+++ b/linkedin-sdk/build/intermediates/manifests/aapt/debug/output.json
@@ -0,0 +1 @@
+[{"outputType":{"type":"AAPT_FRIENDLY_MERGED_MANIFESTS"},"apkInfo":{"type":"MAIN","splits":[],"versionCode":1},"path":"AndroidManifest.xml","properties":{"packageId":"com.linkedin.android.mobilesdk","split":""}}]
\ No newline at end of file
diff --git a/linkedin-sdk/build/intermediates/manifests/full/debug/AndroidManifest.xml b/linkedin-sdk/build/intermediates/manifests/full/debug/AndroidManifest.xml
new file mode 100644
index 0000000..0ea583e
--- /dev/null
+++ b/linkedin-sdk/build/intermediates/manifests/full/debug/AndroidManifest.xml
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.linkedin.android.mobilesdk"
+    android:versionCode="1"
+    android:versionName="1.0" >
+
+    <uses-sdk
+        android:minSdkVersion="8"
+        android:targetSdkVersion="16" />
+
+    <uses-permission android:name="android.permission.INTERNET" />
+
+    <application />
+
+</manifest>
\ No newline at end of file
diff --git a/linkedin-sdk/build/intermediates/manifests/full/debug/output.json b/linkedin-sdk/build/intermediates/manifests/full/debug/output.json
new file mode 100644
index 0000000..3031e30
--- /dev/null
+++ b/linkedin-sdk/build/intermediates/manifests/full/debug/output.json
@@ -0,0 +1 @@
+[{"outputType":{"type":"MERGED_MANIFESTS"},"apkInfo":{"type":"MAIN","splits":[],"versionCode":1},"path":"AndroidManifest.xml","properties":{"packageId":"com.linkedin.android.mobilesdk","split":""}}]
\ No newline at end of file
diff --git a/linkedin-sdk/build/intermediates/res/androidTest/debug/output.json b/linkedin-sdk/build/intermediates/res/androidTest/debug/output.json
new file mode 100644
index 0000000..3a06bbd
--- /dev/null
+++ b/linkedin-sdk/build/intermediates/res/androidTest/debug/output.json
@@ -0,0 +1 @@
+[{"outputType":{"type":"PROCESSED_RES"},"apkInfo":{"type":"MAIN","splits":[],"versionCode":1},"path":"resources-debugAndroidTest.ap_","properties":{}}]
\ No newline at end of file
diff --git a/linkedin-sdk/build/intermediates/res/androidTest/debug/resources-debugAndroidTest.ap_ b/linkedin-sdk/build/intermediates/res/androidTest/debug/resources-debugAndroidTest.ap_
new file mode 100644
index 0000000..7e3e632
Binary files /dev/null and b/linkedin-sdk/build/intermediates/res/androidTest/debug/resources-debugAndroidTest.ap_ differ
diff --git a/linkedin-sdk/build/intermediates/res/debug/output.json b/linkedin-sdk/build/intermediates/res/debug/output.json
new file mode 100644
index 0000000..3d08cc8
--- /dev/null
+++ b/linkedin-sdk/build/intermediates/res/debug/output.json
@@ -0,0 +1 @@
+[{"outputType":{"type":"PROCESSED_RES"},"apkInfo":{"type":"MAIN","splits":[],"versionCode":1},"path":"resources-debug.ap_","properties":{"packageId":"com.linkedin.android.mobilesdk","split":""}}]
\ No newline at end of file
diff --git a/linkedin-sdk/build/intermediates/res/merged/androidTest/debug/drawable-hdpi-v4_ic_launcher.png.flat b/linkedin-sdk/build/intermediates/res/merged/androidTest/debug/drawable-hdpi-v4_ic_launcher.png.flat
new file mode 100644
index 0000000..4ad35ee
Binary files /dev/null and b/linkedin-sdk/build/intermediates/res/merged/androidTest/debug/drawable-hdpi-v4_ic_launcher.png.flat differ
diff --git a/linkedin-sdk/build/intermediates/res/merged/androidTest/debug/drawable-mdpi-v4_ic_launcher.png.flat b/linkedin-sdk/build/intermediates/res/merged/androidTest/debug/drawable-mdpi-v4_ic_launcher.png.flat
new file mode 100644
index 0000000..b912c5c
Binary files /dev/null and b/linkedin-sdk/build/intermediates/res/merged/androidTest/debug/drawable-mdpi-v4_ic_launcher.png.flat differ
diff --git a/linkedin-sdk/build/intermediates/res/merged/androidTest/debug/drawable-xhdpi-v4_ic_launcher.png.flat b/linkedin-sdk/build/intermediates/res/merged/androidTest/debug/drawable-xhdpi-v4_ic_launcher.png.flat
new file mode 100644
index 0000000..93d8a65
Binary files /dev/null and b/linkedin-sdk/build/intermediates/res/merged/androidTest/debug/drawable-xhdpi-v4_ic_launcher.png.flat differ
diff --git a/linkedin-sdk/build/intermediates/res/merged/androidTest/debug/drawable-xxhdpi-v4_ic_launcher.png.flat b/linkedin-sdk/build/intermediates/res/merged/androidTest/debug/drawable-xxhdpi-v4_ic_launcher.png.flat
new file mode 100644
index 0000000..2142def
Binary files /dev/null and b/linkedin-sdk/build/intermediates/res/merged/androidTest/debug/drawable-xxhdpi-v4_ic_launcher.png.flat differ
diff --git a/linkedin-sdk/build/intermediates/res/merged/androidTest/debug/values_values.arsc.flat b/linkedin-sdk/build/intermediates/res/merged/androidTest/debug/values_values.arsc.flat
new file mode 100644
index 0000000..2c683a1
Binary files /dev/null and b/linkedin-sdk/build/intermediates/res/merged/androidTest/debug/values_values.arsc.flat differ
diff --git a/linkedin-sdk/build/intermediates/res/symbol-table-with-package/androidTest/debug/package-aware-r.txt b/linkedin-sdk/build/intermediates/res/symbol-table-with-package/androidTest/debug/package-aware-r.txt
new file mode 100644
index 0000000..c3f02c0
--- /dev/null
+++ b/linkedin-sdk/build/intermediates/res/symbol-table-with-package/androidTest/debug/package-aware-r.txt
@@ -0,0 +1,6 @@
+com.linkedin.android.mobilesdk.test
+int drawable ic_launcher 0x7f010000
+int string update_linkedin_app_cancel 0x7f020000
+int string update_linkedin_app_download 0x7f020001
+int string update_linkedin_app_message 0x7f020002
+int string update_linkedin_app_title 0x7f020003
diff --git a/linkedin-sdk/build/intermediates/res/symbol-table-with-package/debug/package-aware-r.txt b/linkedin-sdk/build/intermediates/res/symbol-table-with-package/debug/package-aware-r.txt
new file mode 100644
index 0000000..9ce51e2
--- /dev/null
+++ b/linkedin-sdk/build/intermediates/res/symbol-table-with-package/debug/package-aware-r.txt
@@ -0,0 +1,6 @@
+com.linkedin.android.mobilesdk
+int drawable ic_launcher 0x7f090001
+int string update_linkedin_app_cancel 0x7f150001
+int string update_linkedin_app_download 0x7f150002
+int string update_linkedin_app_message 0x7f150003
+int string update_linkedin_app_title 0x7f150004
diff --git a/linkedin-sdk/build/intermediates/symbols/androidTest/debug/R.txt b/linkedin-sdk/build/intermediates/symbols/androidTest/debug/R.txt
new file mode 100644
index 0000000..1a3ec19
--- /dev/null
+++ b/linkedin-sdk/build/intermediates/symbols/androidTest/debug/R.txt
@@ -0,0 +1,5 @@
+int drawable ic_launcher 0x7f010000
+int string update_linkedin_app_cancel 0x7f020000
+int string update_linkedin_app_download 0x7f020001
+int string update_linkedin_app_message 0x7f020002
+int string update_linkedin_app_title 0x7f020003
diff --git a/linkedin-sdk/build/intermediates/transforms/mergeJniLibs/debug/__content__.json b/linkedin-sdk/build/intermediates/transforms/mergeJniLibs/debug/__content__.json
new file mode 100644
index 0000000..49b1382
--- /dev/null
+++ b/linkedin-sdk/build/intermediates/transforms/mergeJniLibs/debug/__content__.json
@@ -0,0 +1 @@
+[{"name":"resources","index":0,"scopes":["PROJECT"],"types":["NATIVE_LIBS"],"format":"DIRECTORY","present":false}]
\ No newline at end of file
diff --git a/linkedin-sdk/build/outputs/logs/manifest-merger-debug-report.txt b/linkedin-sdk/build/outputs/logs/manifest-merger-debug-report.txt
new file mode 100644
index 0000000..e7115fd
--- /dev/null
+++ b/linkedin-sdk/build/outputs/logs/manifest-merger-debug-report.txt
@@ -0,0 +1,43 @@
+-- Merging decision tree log ---
+manifest
+ADDED from /Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/AndroidManifest.xml:2:1-7:12
+INJECTED from /Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/AndroidManifest.xml:2:1-7:12
+INJECTED from /Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/AndroidManifest.xml:2:1-7:12
+INJECTED from /Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/AndroidManifest.xml:2:1-7:12
+INJECTED from /Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/AndroidManifest.xml:2:1-7:12
+INJECTED from /Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/AndroidManifest.xml:2:1-7:12
+INJECTED from /Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/AndroidManifest.xml:2:1-7:12
+	package
+		ADDED from /Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/AndroidManifest.xml:3:5-45
+		INJECTED from /Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/AndroidManifest.xml
+		INJECTED from /Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/AndroidManifest.xml
+	android:versionName
+		INJECTED from /Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/AndroidManifest.xml
+		ADDED from /Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/AndroidManifest.xml:2:1-7:12
+		INJECTED from /Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/AndroidManifest.xml
+	android:versionCode
+		INJECTED from /Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/AndroidManifest.xml
+		ADDED from /Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/AndroidManifest.xml:2:1-7:12
+		INJECTED from /Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/AndroidManifest.xml
+	xmlns:android
+		ADDED from /Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/AndroidManifest.xml:2:11-69
+application
+ADDED from /Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/AndroidManifest.xml:5:5-20
+uses-permission#android.permission.INTERNET
+ADDED from /Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/AndroidManifest.xml:6:5-66
+	android:name
+		ADDED from /Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/AndroidManifest.xml:6:22-64
+uses-sdk
+INJECTED from /Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/AndroidManifest.xml reason: use-sdk injection requested
+INJECTED from /Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/AndroidManifest.xml
+INJECTED from /Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/AndroidManifest.xml
+INJECTED from /Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/AndroidManifest.xml
+INJECTED from /Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/AndroidManifest.xml
+	android:targetSdkVersion
+		INJECTED from /Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/AndroidManifest.xml
+		ADDED from /Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/AndroidManifest.xml
+		INJECTED from /Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/AndroidManifest.xml
+	android:minSdkVersion
+		INJECTED from /Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/AndroidManifest.xml
+		ADDED from /Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/AndroidManifest.xml
+		INJECTED from /Users/echinnasamy/Desktop/ann/Womentor/linkedin-sdk/src/main/AndroidManifest.xml
diff --git a/linkedin-sdk/libs/volley.jar b/linkedin-sdk/libs/volley.jar
new file mode 100644
index 0000000..21f6333
Binary files /dev/null and b/linkedin-sdk/libs/volley.jar differ
diff --git a/linkedin-sdk/src/main/AndroidManifest.xml b/linkedin-sdk/src/main/AndroidManifest.xml
new file mode 100644
index 0000000..e5aa1af
--- /dev/null
+++ b/linkedin-sdk/src/main/AndroidManifest.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.linkedin.android.mobilesdk" >
+
+    <application />
+    <uses-permission android:name="android.permission.INTERNET"/>
+</manifest>
diff --git a/linkedin-sdk/src/main/java/com/linkedin/platform/APIHelper.java b/linkedin-sdk/src/main/java/com/linkedin/platform/APIHelper.java
new file mode 100644
index 0000000..fad957c
--- /dev/null
+++ b/linkedin-sdk/src/main/java/com/linkedin/platform/APIHelper.java
@@ -0,0 +1,240 @@
+/*
+    Copyright 2014 LinkedIn Corp.
+
+    Licensed under the Apache License, Version 2.0 (the "License");
+    you may not use this file except in compliance with the License.
+    You may obtain a copy of the License at
+
+        http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+*/
+
+package com.linkedin.platform;
+
+import android.content.Context;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+import android.text.TextUtils;
+
+import com.android.volley.AuthFailureError;
+import com.android.volley.NetworkResponse;
+import com.android.volley.ParseError;
+import com.android.volley.Request;
+import com.android.volley.Response;
+import com.android.volley.VolleyError;
+import com.android.volley.toolbox.HttpHeaderParser;
+import com.android.volley.toolbox.JsonObjectRequest;
+import com.linkedin.platform.errors.LIApiError;
+import com.linkedin.platform.internals.BuildConfig;
+import com.linkedin.platform.internals.QueueManager;
+import com.linkedin.platform.listeners.ApiListener;
+import com.linkedin.platform.listeners.ApiResponse;
+
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.io.UnsupportedEncodingException;
+import java.util.HashMap;
+import java.util.Map;
+
+/**
+ * Helper class to make authenticated REST api calls to retrieve LinkedIn data.
+ * The LISession must be properly initialized before using this class.
+ * @see <a href="https://developer.linkedin.com/rest">https://developer.linkedin.com/rest</a>
+ * for information on type of calls available and the information returned.
+ * Data is returned in json format.
+ */
+public class APIHelper {
+
+    private static final String TAG = APIHelper.class.getName();
+    private static final String LOCATION_HEADER = "Location";
+    private static final String HTTP_STATUS_CODE = "StatusCode";
+    private static final String DATA = "responseData";
+    private static final String HEADER_CONTENT_TYPE = "Content-Type";
+    private static final String HEADER_AUTHORIZATION = "Authorization";
+    private static final String HEADER_SRC = "x-li-src";
+    private static final String HEADER_LI_FORMAT = "x-li-format";
+    private static final String HEADER_LI_VER = "x-li-msdk-ver";
+    private static final String CONTENT_VALUE = "application/json";
+    private static final String HEADER_SRC_VALUE = "msdk";
+    private static final String HEADER_LI_FORMAT_VALUE = "json";
+    private static final String HEADER_LI_PLFM = "x-li-plfm";
+    private static final String HEADER_LI_PLFM_ANDROID = "ANDROID_SDK";
+
+    private static APIHelper apiHelper;
+
+    public static APIHelper getInstance(@NonNull Context ctx) {
+        if (apiHelper == null) {
+            apiHelper = new APIHelper();
+            QueueManager.initQueueManager(ctx);
+        }
+        return apiHelper;
+    }
+
+    private Map<String, String> getLiHeaders(String accessToken) {
+        HashMap<String, String> headers = new HashMap<String, String>();
+        headers.put(HEADER_CONTENT_TYPE, CONTENT_VALUE);
+        headers.put(HEADER_AUTHORIZATION, "Bearer " + accessToken);
+        headers.put(HEADER_SRC, HEADER_SRC_VALUE);
+        headers.put(HEADER_LI_FORMAT, HEADER_LI_FORMAT_VALUE);
+        headers.put(HEADER_LI_VER, BuildConfig.MSDK_VERSION);
+        headers.put(HEADER_LI_PLFM, HEADER_LI_PLFM_ANDROID);
+
+        return headers;
+    }
+
+    private JsonObjectRequest buildRequest(final String accessToken, int method, String url,
+                                           JSONObject body, @Nullable final ApiListener apiListener) {
+        return new JsonObjectRequest(method,
+                url, body,
+                new Response.Listener<JSONObject>() {
+                    @Override
+                    public void onResponse(JSONObject response) {
+                        if (apiListener != null) {
+                            apiListener.onApiSuccess(ApiResponse.buildApiResponse(response));
+                        }
+                    }
+                },
+                new Response.ErrorListener() {
+                    @Override
+                    public void onErrorResponse(VolleyError error) {
+                        if (apiListener != null) {
+                            LIApiError liLIApiError = LIApiError.buildLiApiError(error);
+                            apiListener.onApiError(liLIApiError);
+                        }
+                    }
+                }
+        ) {
+            @Override
+            protected Response<JSONObject> parseNetworkResponse(NetworkResponse response) {
+                try {
+                    JSONObject responseData = new JSONObject();
+                    responseData.put(HTTP_STATUS_CODE, response.statusCode);
+                    String location = response.headers.get(LOCATION_HEADER);
+                    if (!TextUtils.isEmpty(location)) {
+                        responseData.put(LOCATION_HEADER, location);
+                    }
+                    if (response.data != null && response.data.length != 0) {
+                        String responseDataAsString = new String(response.data, HttpHeaderParser.parseCharset(response.headers));
+                        responseData.put(DATA, responseDataAsString);
+
+                    }
+                    return Response.success(responseData, HttpHeaderParser.parseCacheHeaders(response));
+                } catch (UnsupportedEncodingException e) {
+                    return Response.error(new ParseError(e));
+                } catch (JSONException je) {
+                    return Response.error(new ParseError(je));
+                }
+            }
+
+            @Override
+            public Map<String, String> getHeaders() throws AuthFailureError {
+                return getLiHeaders(accessToken);
+            }
+        };
+    }
+
+    private void request(@NonNull Context context, int method, @NonNull String url, @Nullable JSONObject body, @Nullable ApiListener apiListener) {
+        LISession session = LISessionManager.getInstance(context.getApplicationContext()).getSession();
+        if (!session.isValid()) {
+            if (apiListener != null) {
+                apiListener.onApiError(new LIApiError(LIApiError.ErrorType.accessTokenIsNotSet, "access toke is not set", null));
+            }
+            return;
+        }
+        JsonObjectRequest jsonObjectRequest = buildRequest(session.getAccessToken().getValue(), method, url, body, apiListener);
+        jsonObjectRequest.setTag(context == null ? TAG : context);
+        QueueManager.getInstance(context).getRequestQueue().add(jsonObjectRequest);
+    }
+
+    /**
+     * Helper method to make authenticated HTTP requests to LinkedIn REST api using GET Method
+     *
+     * @param context
+     * @param url         rest api endpoint to call. example: "https://api.linkedin.com/v1/people/~:(first-name,last-name,public-profile-url)"
+     * @param apiListener
+     */
+    public void getRequest(@NonNull Context context, String url, ApiListener apiListener) {
+        request(context, Request.Method.GET, url, null, apiListener);
+    }
+
+    /**
+     * Helper method to make authenticated HTTP requests to LinkedIn REST api using POST Method
+     *  @param context
+     * @param url
+     * @param body
+     * @param apiListener
+     */
+    public void postRequest(@NonNull Context context, String url, JSONObject body, ApiListener apiListener) {
+        request(context, Request.Method.POST, url, body, apiListener);
+    }
+
+    /**
+     * Helper method to make authenticated HTTP requests to LinkedIn REST api using POST Method
+     *  @param context
+     * @param url
+     * @param body
+     * @param apiListener
+     */
+    public void postRequest(Context context, String url, String body, ApiListener apiListener) {
+        try {
+            JSONObject bodyObject = body != null ? new JSONObject(body) : null;
+            postRequest(context, url, bodyObject, apiListener);
+        } catch (JSONException e) {
+            apiListener.onApiError(new LIApiError("Unable to convert body to json object " + e.toString(), e));
+        }
+    }
+
+    /**
+     * Helper method to make authenticated HTTP requests to LinkedIn REST api using PUT Method
+     *  @param context
+     * @param url
+     * @param body
+     * @param apiListener
+     */
+    public void putRequest(Context context, String url, JSONObject body, ApiListener apiListener) {
+        request(context, Request.Method.PUT, url, body, apiListener);
+    }
+
+    /**
+     * Helper method to make authenticated HTTP requests to LinkedIn REST api using PUT method with
+     * string body
+     * @param context
+     * @param url
+     * @param body
+     * @param apiListener
+     */
+    public void putRequest(@NonNull Context context, String url, String body, ApiListener apiListener) {
+        try {
+            JSONObject bodyObject = body != null ? new JSONObject(body) : null;
+            putRequest(context, url, bodyObject, apiListener);
+        } catch (JSONException e) {
+            apiListener.onApiError(new LIApiError("Unable to convert body to json object " + e.toString(), e));
+        }
+    }
+
+    /**
+     * Helper method to make authenticated HTTP requests to LinkedIn REST api using DELETE Method
+     *
+     * @param context
+     * @param url
+     * @param apiListener
+     */
+    public void deleteRequest(@NonNull Context context, String url, ApiListener apiListener) {
+        request(context, Request.Method.DELETE, url, null, apiListener);
+    }
+
+    /**
+     * cancel any unsent api calls
+     * @param context
+     */
+    public void cancelCalls(@NonNull Context context) {
+        QueueManager.getInstance(context).getRequestQueue().cancelAll(context);
+    }
+
+}
diff --git a/linkedin-sdk/src/main/java/com/linkedin/platform/AccessToken.java b/linkedin-sdk/src/main/java/com/linkedin/platform/AccessToken.java
new file mode 100644
index 0000000..7112211
--- /dev/null
+++ b/linkedin-sdk/src/main/java/com/linkedin/platform/AccessToken.java
@@ -0,0 +1,104 @@
+/*
+    Copyright 2014 LinkedIn Corp.
+
+    Licensed under the Apache License, Version 2.0 (the "License");
+    you may not use this file except in compliance with the License.
+    You may obtain a copy of the License at
+
+        http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+*/
+
+package com.linkedin.platform;
+
+import android.util.Log;
+
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.io.Serializable;
+
+public class AccessToken implements Serializable {
+
+    private static final String ACCESS_TOKEN_VALUE = "accessTokenValue";
+    private static final String EXPIRES_ON = "expiresOn";
+    private static final String TAG = AccessToken.class.getSimpleName();
+
+    private final String accessTokenValue;
+    private final long expiresOn;
+
+    /**
+     * build an accessToken from a previously retrieved value
+     * @param accessToken obtained by calling {@link AccessToken#toString()}
+     * @return
+     */
+    public synchronized static AccessToken buildAccessToken(String accessToken) {
+        if (accessToken == null || "".equals(accessToken)) {
+            return null;
+        }
+        try {
+            JSONObject jsonObject = new JSONObject(accessToken);
+            return new AccessToken(jsonObject);
+        } catch (JSONException e) {
+            Log.d(TAG, e.getMessage());
+            return null;
+        }
+    }
+
+    public synchronized static AccessToken buildAccessToken(JSONObject accessToken) {
+        if (accessToken == null) {
+            return null;
+        }
+        try {
+            return new AccessToken(accessToken);
+        } catch (JSONException e) {
+            Log.d(TAG, e.getMessage());
+            return null;
+        }
+    }
+
+    private AccessToken(JSONObject accessTokenJson) throws JSONException {
+        accessTokenValue = accessTokenJson.getString(ACCESS_TOKEN_VALUE);
+        expiresOn = accessTokenJson.getLong(EXPIRES_ON);
+    }
+
+    public AccessToken(String accessTokenValue, long expiresOn) {
+        this.accessTokenValue = accessTokenValue;
+        this.expiresOn = expiresOn;
+    }
+
+    public String getValue() {
+        return accessTokenValue;
+    }
+
+    /**
+     * @return the time when this AccessToken expires
+     */
+    public long getExpiresOn() {
+        return expiresOn;
+    }
+
+    /**
+     * @return true if access token is expired; false otherwise
+     */
+    public boolean isExpired() {
+        return  System.currentTimeMillis() > getExpiresOn();
+    }
+
+    @Override
+    public String toString() {
+        try {
+            JSONObject json = new JSONObject();
+            json.put(ACCESS_TOKEN_VALUE, accessTokenValue);
+            json.put(EXPIRES_ON, expiresOn);
+            return json.toString();
+        } catch (JSONException e) {
+        }
+        return null;
+    }
+}
diff --git a/linkedin-sdk/src/main/java/com/linkedin/platform/DeepLinkHelper.java b/linkedin-sdk/src/main/java/com/linkedin/platform/DeepLinkHelper.java
new file mode 100644
index 0000000..d47a126
--- /dev/null
+++ b/linkedin-sdk/src/main/java/com/linkedin/platform/DeepLinkHelper.java
@@ -0,0 +1,113 @@
+package com.linkedin.platform;
+
+import android.app.Activity;
+import android.content.ActivityNotFoundException;
+import android.content.Intent;
+import android.net.Uri;
+import android.support.annotation.NonNull;
+import android.util.Log;
+
+import com.linkedin.platform.errors.LIAppErrorCode;
+import com.linkedin.platform.errors.LIDeepLinkError;
+import com.linkedin.platform.internals.AppStore;
+import com.linkedin.platform.internals.LIAppVersion;
+import com.linkedin.platform.listeners.DeepLinkListener;
+
+/**
+ * DeepLinkHelper enables linking to pages within the LinkedIn application
+ */
+public class DeepLinkHelper {
+
+    public static final int LI_SDK_CROSSLINK_REQUEST_CODE = 13287;
+    private static final String TAG = DeepLinkHelper.class.getName();
+    private static final String CURRENTLY_LOGGED_IN_MEMBER = "you";
+    private static final String DEEPLINK_ERROR_CODE_EXTRA_NAME = "com.linkedin.thirdparty.deeplink.EXTRA_ERROR_CODE";
+    private static final String DEEPLINK_ERROR_MESSAGE_EXTRA_NAME = "com.linkedin.thirdparty.deeplink.EXTRA_ERROR_MESSAGE";
+    private static DeepLinkHelper deepLinkHelper;
+    private DeepLinkListener deepLinkListener;
+
+    public static DeepLinkHelper getInstance() {
+        if (deepLinkHelper == null) {
+            deepLinkHelper = new DeepLinkHelper();
+        }
+        return deepLinkHelper;
+    }
+
+    /**
+     * opens up a view which shows the profile of the user that is currently logged in to the
+     * LinkedIn app.
+     * @param activity
+     * @param callback
+     */
+    public void openCurrentProfile(@NonNull Activity activity, DeepLinkListener callback) {
+        openOtherProfile(activity, CURRENTLY_LOGGED_IN_MEMBER, callback);
+    }
+
+    /**
+     * opens a view which shows the profile of the given member
+     * @param activity
+     * @param memberId obtained through an api call
+     * @param callback
+     */
+    public void openOtherProfile(@NonNull Activity activity, String memberId, DeepLinkListener callback) {
+        this.deepLinkListener = callback;
+
+        LISession session = LISessionManager.getInstance(activity.getApplicationContext()).getSession();
+        if (!session.isValid()) {
+            callback.onDeepLinkError(new LIDeepLinkError(LIAppErrorCode.NOT_AUTHENTICATED, "there is no access token"));
+            return;
+        }
+        try {
+            if (!LIAppVersion.isLIAppCurrent(activity)) {
+                AppStore.goAppStore(activity, true);
+                return;
+            }
+            deepLinkToProfile(activity, memberId, session.getAccessToken());
+        } catch (ActivityNotFoundException e) {
+            callback.onDeepLinkError(new LIDeepLinkError(LIAppErrorCode.LINKEDIN_APP_NOT_FOUND,
+                    "LinkedIn app needs to be either installed or` updated"));
+            deepLinkListener = null;
+        }
+    }
+
+    private void deepLinkToProfile(@NonNull Activity activity, String memberId, @NonNull AccessToken accessToken) {
+        Intent i = new Intent("android.intent.action.VIEW");
+        Uri.Builder uriBuilder = new Uri.Builder();
+        uriBuilder.scheme("linkedin");
+        if (CURRENTLY_LOGGED_IN_MEMBER.equals(memberId)) {
+            uriBuilder.authority(CURRENTLY_LOGGED_IN_MEMBER);
+        } else {
+            uriBuilder.authority("profile").appendPath(memberId);
+        }
+        uriBuilder.appendQueryParameter("accessToken", accessToken.getValue());
+        uriBuilder.appendQueryParameter("src", "sdk");
+        i.setData(uriBuilder.build());
+        activity.startActivityForResult(i, LI_SDK_CROSSLINK_REQUEST_CODE);
+    }
+
+    /**
+     * call this method in your activity's onActivityResult method.
+     * Handles any response code from LinkedIn and calls the DeepLinkListener callback
+     * @param activity
+     * @param requestCode
+     * @param resultCode
+     * @param data
+     */
+    public void onActivityResult(Activity activity, int requestCode, int resultCode, Intent data) {
+        if (requestCode == LI_SDK_CROSSLINK_REQUEST_CODE && deepLinkListener != null) {
+            if (resultCode == Activity.RESULT_OK) {
+                deepLinkListener.onDeepLinkSuccess();
+            } else if (resultCode == Activity.RESULT_CANCELED) {
+                if (data == null || data.getExtras() == null) {
+                    deepLinkListener.onDeepLinkError(new LIDeepLinkError(LIAppErrorCode.USER_CANCELLED,""));
+                }
+                else {
+                    String errorMessage = data.getExtras().getString(DEEPLINK_ERROR_MESSAGE_EXTRA_NAME);
+                    String errorCode = data.getExtras().getString(DEEPLINK_ERROR_CODE_EXTRA_NAME);
+                    deepLinkListener.onDeepLinkError(new LIDeepLinkError(errorCode, errorMessage));
+                }
+            }
+        }
+    }
+
+}
diff --git a/linkedin-sdk/src/main/java/com/linkedin/platform/LISession.java b/linkedin-sdk/src/main/java/com/linkedin/platform/LISession.java
new file mode 100644
index 0000000..bb81659
--- /dev/null
+++ b/linkedin-sdk/src/main/java/com/linkedin/platform/LISession.java
@@ -0,0 +1,16 @@
+package com.linkedin.platform;
+
+public interface LISession {
+
+    /**
+     * @return an AccessToken representing the user's authorization of the application
+     */
+    public AccessToken getAccessToken();
+
+    /**
+     * @return true if the AccessToken is valid
+     * false is returned if the user has not granted the application access or if the
+     * access token has expired
+     */
+    public boolean isValid();
+}
diff --git a/linkedin-sdk/src/main/java/com/linkedin/platform/LISessionManager.java b/linkedin-sdk/src/main/java/com/linkedin/platform/LISessionManager.java
new file mode 100644
index 0000000..5d7b7d2
--- /dev/null
+++ b/linkedin-sdk/src/main/java/com/linkedin/platform/LISessionManager.java
@@ -0,0 +1,256 @@
+package com.linkedin.platform;
+
+import android.app.Activity;
+import android.app.AlertDialog;
+import android.content.ActivityNotFoundException;
+import android.content.Context;
+import android.content.DialogInterface;
+import android.content.Intent;
+import android.content.SharedPreferences;
+import android.net.Uri;
+import android.os.Build;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+import android.text.TextUtils;
+import android.util.Log;
+
+import com.linkedin.android.mobilesdk.R;
+import com.linkedin.platform.errors.LIAppErrorCode;
+import com.linkedin.platform.errors.LIAuthError;
+import com.linkedin.platform.internals.AppStore;
+import com.linkedin.platform.internals.LIAppVersion;
+import com.linkedin.platform.listeners.AuthListener;
+import com.linkedin.platform.utils.Scope;
+
+import java.util.List;
+
+/**
+ *
+ * LISessionManager manages the authorizations needed for an application
+ * to access LinkedIn data and to view LinkedIn profiles.
+ *
+ * A typical usage flow is:
+ *
+ * LISessionManager.init(activity, Scope.build(LIPermission.R_BASICPROFILE), callback, true);
+ *
+ * When callback.onAuthSuccess() is called, calls to {@link com.linkedin.platform.APIHelper}
+ * to retrieve LinkedIn data or calls to {@link com.linkedin.platform.DeepLinkHelper} can be
+ * made to view LinkedIn profiles.
+ * {@link com.linkedin.platform.LISession#isValid()} should be used to validate the session before
+ * making api calls or deeplink calls
+ *
+ */
+public class LISessionManager {
+
+
+    private static final String TAG = LISessionManager.class.getSimpleName();
+    private static final int LI_SDK_AUTH_REQUEST_CODE = 3672;
+    private static final String AUTH_TOKEN = "token";
+    private static final String AUTH_STATE = "state";
+    private static final String LI_APP_PACKAGE_NAME = "com.linkedin.android";
+    private static final String LI_APP_AUTH_CLASS_NAME = "com.linkedin.android.liauthlib.thirdparty.LiThirdPartyAuthorizeActivity";
+    private static final String SCOPE_DATA = "com.linkedin.thirdpartysdk.SCOPE_DATA";
+    private static final String LI_APP_ACTION_AUTHORIZE_APP = "com.linkedin.android.auth.AUTHORIZE_APP";
+    private static final String LI_APP_CATEGORY = "com.linkedin.android.auth.thirdparty.authorize";
+    private static final String LI_ERROR_INFO = "com.linkedin.thirdparty.authorize.RESULT_ACTION_ERROR_INFO";
+    private static final String LI_ERROR_DESCRIPTION = "com.linkedin.thirdparty.authorize.RESULT_ACTION_ERROR_DESCRIPTION";
+
+    private static LISessionManager sessionManager;
+
+    private Context ctx;
+    private LISessionImpl session;
+    private AuthListener authListener;
+
+    public static LISessionManager getInstance(@NonNull Context context) {
+        if (sessionManager == null) {
+            sessionManager = new LISessionManager();
+        }
+        if (context != null && sessionManager.ctx == null) {
+            sessionManager.ctx = context.getApplicationContext();
+        }
+        return sessionManager;
+    }
+
+    private LISessionManager() {
+        this.session = new LISessionImpl();
+    }
+
+    /**
+     * Initializes LISession using previously obtained AccessToken
+     * The passed in access token should be one that was obtained from the LinkedIn Mobile SDK.
+     *
+     * @param accessToken access token
+     */
+    public void init(AccessToken accessToken) {
+        session.setAccessToken(accessToken);
+    }
+
+    /**
+     * Brings the user to an authorization screen which allows the user to authorize
+     * the application to access their LinkedIn data.  When the user authorizes the application
+     * {@link com.linkedin.platform.listeners.AuthListener#onAuthSuccess()} is called.
+     * If the user has previously authorized the application, onAuthSuccess will be called without
+     * the authorization screen being shown.
+     *
+     * If there is no user logged into the LinkedIn application, the user will be prompted to login
+     * to LinkedIn, after which the authorization screen will be shown.
+     *
+     * Either this method or {@link com.linkedin.platform.LISessionManager#init(AccessToken)} must be
+     * called before the application can make API calls or DeepLink calls.
+     *
+     * @param activity               activity to return to after initialization
+     * @param scope                  The type of LinkedIn data that for which access is requested.
+     *                               see {@link com.linkedin.platform.utils.Scope}
+     * @param callback               listener to execute on completion
+     * @param showGoToAppStoreDialog determines behaviour when the LinkedIn app is not installed
+     *                               if true, a dialog is shown which prompts the user to install
+     *                               the LinkedIn app via the app store.  If false, the user is
+     *                               taken directly to the app store.
+     *
+     */
+    public void init(Activity activity,
+                     Scope scope, AuthListener callback, boolean showGoToAppStoreDialog) {
+        //check if LI
+        if (!LIAppVersion.isLIAppCurrent(ctx)) {
+            AppStore.goAppStore(activity, showGoToAppStoreDialog);
+            return;
+        }
+        authListener = callback;
+        Intent i = new Intent();
+        i.setClassName(LI_APP_PACKAGE_NAME, LI_APP_AUTH_CLASS_NAME);
+        i.putExtra(SCOPE_DATA, scope.createScope());
+        i.setAction(LI_APP_ACTION_AUTHORIZE_APP);
+        i.addCategory(LI_APP_CATEGORY);
+        try {
+            activity.startActivityForResult(i, LI_SDK_AUTH_REQUEST_CODE);
+        } catch (ActivityNotFoundException e) {
+            Log.d(TAG, e.getMessage());
+        }
+    }
+
+    /**
+     * This method must be called in the calling Activity's onActivityResult in order to
+     * process the response to
+     * {@link com.linkedin.platform.LISessionManager#init(android.app.Activity, com.linkedin.platform.utils.Scope, com.linkedin.platform.listeners.AuthListener, boolean)}
+     * @param activity
+     * @param requestCode
+     * @param resultCode
+     * @param data
+     */
+    public void onActivityResult(Activity activity, int requestCode, int resultCode, Intent data) {
+        // set access token
+        if (authListener != null && requestCode == LI_SDK_AUTH_REQUEST_CODE) {
+            // got result
+            if (resultCode == Activity.RESULT_OK) {
+                String token = data.getStringExtra(AUTH_TOKEN);
+                long expiresOn = data.getLongExtra("expiresOn", 0L);
+                AccessToken accessToken = new AccessToken(token, expiresOn);
+                init(accessToken);
+                // call the callback with the
+                authListener.onAuthSuccess();
+            } else if (resultCode == Activity.RESULT_CANCELED) {
+                authListener.onAuthError(new LIAuthError(LIAppErrorCode.USER_CANCELLED, "user canceled"));
+            } else {
+                String errorInfo = data.getStringExtra(LI_ERROR_INFO);
+                String errorDesc = data.getStringExtra(LI_ERROR_DESCRIPTION);
+                authListener.onAuthError(new LIAuthError(errorInfo, errorDesc));
+            }
+            authListener = null;
+        }
+    }
+
+    /**
+     * @return the LISession
+     */
+    public LISession getSession() {
+        return session;
+    }
+
+    /**
+     * Clears the session.  Calls to retrieve LinkedIn data or to view profiles will no longer
+     * work.
+     */
+    public void clearSession() {
+        session.setAccessToken(null);
+    }
+
+
+    /**
+     * Builds scope based on List of permissions.
+     *
+     * @param perms
+     * @return
+     */
+    private static String createScope(List<String> perms) {
+        if (perms == null || perms.isEmpty()) {
+            return "";
+        }
+        return TextUtils.join(" ", perms);
+    }
+
+
+    /**
+     * private implementation of LISession
+     * takes are of saving and restoring session to/from shared preferences
+     */
+    private static class LISessionImpl implements LISession {
+
+        private static final String LI_SDK_SHARED_PREF_STORE = "li_shared_pref_store";
+        private static final String SHARED_PREFERENCES_ACCESS_TOKEN = "li_sdk_access_token";
+        private AccessToken accessToken = null;
+
+        public LISessionImpl() {
+        }
+
+        @Override
+        public AccessToken getAccessToken() {
+            if (accessToken == null) {
+                recover();
+            }
+            return accessToken;
+        }
+
+        void setAccessToken(@Nullable AccessToken accessToken) {
+            this.accessToken = accessToken;
+            save();
+        }
+
+        /**
+         * @return true if a valid accessToken is present.  Note that if the member revokes
+         * access to this application, this will still return true
+         */
+        @Override
+        public boolean isValid() {
+            AccessToken at = getAccessToken();
+            return at != null && !at.isExpired();
+        }
+
+        /**
+         * clears session. (Kills it)
+         */
+        public void clear() {
+            setAccessToken(null);
+        }
+
+        /**
+         * Storage
+         */
+        private SharedPreferences getSharedPref() {
+            return LISessionManager.sessionManager.ctx.getSharedPreferences(LI_SDK_SHARED_PREF_STORE, Context.MODE_PRIVATE);
+        }
+
+        private void save() {
+            SharedPreferences.Editor edit = getSharedPref().edit();
+            edit.putString(SHARED_PREFERENCES_ACCESS_TOKEN, accessToken == null ? null : accessToken.toString());
+            edit.commit();
+        }
+
+        private void recover() {
+            SharedPreferences sharedPref = getSharedPref();
+            String accessTokenStr = sharedPref.getString(SHARED_PREFERENCES_ACCESS_TOKEN, null);
+            accessToken = accessTokenStr == null ? null : AccessToken.buildAccessToken(accessTokenStr);
+        }
+    }
+
+
+}
diff --git a/linkedin-sdk/src/main/java/com/linkedin/platform/errors/ApiErrorResponse.java b/linkedin-sdk/src/main/java/com/linkedin/platform/errors/ApiErrorResponse.java
new file mode 100644
index 0000000..e980e5d
--- /dev/null
+++ b/linkedin-sdk/src/main/java/com/linkedin/platform/errors/ApiErrorResponse.java
@@ -0,0 +1,86 @@
+/*
+    Copyright 2014 LinkedIn Corp.
+
+    Licensed under the Apache License, Version 2.0 (the "License");
+    you may not use this file except in compliance with the License.
+    You may obtain a copy of the License at
+
+        http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+*/
+
+package com.linkedin.platform.errors;
+
+import org.json.JSONException;
+import org.json.JSONObject;
+
+public class ApiErrorResponse {
+
+    private static final String TAG = ApiErrorResponse.class.getName();
+    public static final String ERROR_CODE = "errorCode";
+    public static final String MESSAGE = "message";
+    public static final String REQUEST_ID = "requestId";
+    public static final String STATUS = "status";
+    public static final String TIMESTAMP = "timestamp";
+    private JSONObject jsonApiErrorResponse;
+
+    final public int errorCode;
+    final public String message;
+    final public String requestId;
+    final public int status;
+    final public long timestamp;
+
+    private ApiErrorResponse(JSONObject jsonApiErrorResponse, int errorCode, String message, String requestId, int status, long timestamp) {
+        this.jsonApiErrorResponse = jsonApiErrorResponse;
+        this.errorCode = errorCode;
+        this.message = message;
+        this.requestId = requestId;
+        this.status = status;
+        this.timestamp = timestamp;
+    }
+
+    public static ApiErrorResponse build(byte[] apiErrorResponseData) throws JSONException {
+        return build(new JSONObject(new String(apiErrorResponseData)));
+
+    }
+
+    public static ApiErrorResponse build(JSONObject jsonErr) throws JSONException {
+        return new ApiErrorResponse(jsonErr, jsonErr.optInt(ERROR_CODE, -1), jsonErr.optString(MESSAGE),
+                jsonErr.optString(REQUEST_ID), jsonErr.optInt(STATUS, -1), jsonErr.optLong(TIMESTAMP, 0));
+    }
+
+    public int getErrorCode() {
+        return jsonApiErrorResponse.optInt(ERROR_CODE, -1);
+    }
+
+    public String getMessage() {
+        return jsonApiErrorResponse.optString(MESSAGE);
+    }
+
+    public String getRequestId() {
+        return jsonApiErrorResponse.optString(REQUEST_ID);
+    }
+
+    public int getStatus() {
+        return jsonApiErrorResponse.optInt(STATUS, -1);
+    }
+
+    public long getTimestamp() {
+        return jsonApiErrorResponse.optLong(TIMESTAMP, 0);
+    }
+
+    @Override
+    public String toString()    {
+        try {
+            return jsonApiErrorResponse.toString(2);
+        } catch (JSONException e) {
+        }
+        return null;
+    }
+}
+
diff --git a/linkedin-sdk/src/main/java/com/linkedin/platform/errors/LIApiError.java b/linkedin-sdk/src/main/java/com/linkedin/platform/errors/LIApiError.java
new file mode 100644
index 0000000..aa25d11
--- /dev/null
+++ b/linkedin-sdk/src/main/java/com/linkedin/platform/errors/LIApiError.java
@@ -0,0 +1,80 @@
+/*
+    Copyright 2014 LinkedIn Corp.
+
+    Licensed under the Apache License, Version 2.0 (the "License");
+    you may not use this file except in compliance with the License.
+    You may obtain a copy of the License at
+
+        http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+*/
+
+package com.linkedin.platform.errors;
+
+import com.android.volley.VolleyError;
+
+import org.json.JSONException;
+
+public class LIApiError extends Exception {
+
+    public static enum ErrorType {
+        accessTokenIsNotSet,
+        apiErrorResponse,
+        other;
+    }
+
+    private VolleyError volleyError;
+    private int httpStatusCode = -1;
+    private ApiErrorResponse apiErrorResponse;
+    private ErrorType errorType;
+
+    public static LIApiError buildLiApiError(VolleyError volleyError) {
+        return new LIApiError(volleyError);
+    }
+
+    public LIApiError(String detailMessage, Throwable throwable) {
+        this(ErrorType.other, detailMessage, throwable);
+    }
+
+    public LIApiError(ErrorType errorType, String detailMessage, Throwable throwable) {
+        super(detailMessage, throwable);
+        this.errorType = errorType;
+    }
+
+    public LIApiError(VolleyError volleyError) {
+        super(volleyError.getMessage(), volleyError.fillInStackTrace());
+        this.volleyError = volleyError;
+        if (volleyError.networkResponse != null) {
+            httpStatusCode = volleyError.networkResponse.statusCode;
+            try {
+                apiErrorResponse = ApiErrorResponse.build(volleyError.networkResponse.data);
+                errorType = ErrorType.apiErrorResponse;
+            } catch (JSONException e) {
+                errorType = ErrorType.other;
+            }
+        }
+    }
+
+    public ApiErrorResponse getApiErrorResponse() {
+        return apiErrorResponse;
+    }
+
+    public ErrorType getErrorType() {
+        return errorType;
+    }
+
+    public int getHttpStatusCode() {
+        return httpStatusCode;
+    }
+
+    @Override
+    public String toString() {
+        return apiErrorResponse == null ? "exceptionMsg: " + super.getMessage() : apiErrorResponse.toString();
+    }
+
+}
diff --git a/linkedin-sdk/src/main/java/com/linkedin/platform/errors/LIAppErrorCode.java b/linkedin-sdk/src/main/java/com/linkedin/platform/errors/LIAppErrorCode.java
new file mode 100644
index 0000000..98449f8
--- /dev/null
+++ b/linkedin-sdk/src/main/java/com/linkedin/platform/errors/LIAppErrorCode.java
@@ -0,0 +1,41 @@
+package com.linkedin.platform.errors;
+
+import java.util.HashMap;
+import java.util.Map;
+
+public enum LIAppErrorCode {
+    NONE("none"),
+    INVALID_REQUEST("Invalid request"),
+    NETWORK_UNAVAILABLE("Unavailable network connection"),
+    USER_CANCELLED("User canceled action"),
+    UNKNOWN_ERROR("Unknown or not defined error"),
+    SERVER_ERROR("Server side error"),
+    LINKEDIN_APP_NOT_FOUND("LinkedIn application not found"),
+    NOT_AUTHENTICATED("User is not authenticated in LinkedIn app"),
+    ;
+
+    private static Map<String, LIAppErrorCode> liAuthErrorCodeHashMap = buildMap();
+
+    private static Map<String, LIAppErrorCode> buildMap() {
+        HashMap<String, LIAppErrorCode> map = new HashMap<String, LIAppErrorCode>();
+        for (LIAppErrorCode code : LIAppErrorCode.values()) {
+            map.put(code.name(), code);
+        }
+        return map;
+    }
+
+    private String description;
+
+    LIAppErrorCode(String name) {
+        this.description = name;
+    }
+
+    public String getDescription() {
+        return description;
+    }
+
+    public static LIAppErrorCode findErrorCode(String errorCode) {
+        LIAppErrorCode liAuthErrorCode = liAuthErrorCodeHashMap.get(errorCode);
+        return liAuthErrorCode == null ? UNKNOWN_ERROR : liAuthErrorCode;
+    }
+}
diff --git a/linkedin-sdk/src/main/java/com/linkedin/platform/errors/LIAuthError.java b/linkedin-sdk/src/main/java/com/linkedin/platform/errors/LIAuthError.java
new file mode 100644
index 0000000..4478356
--- /dev/null
+++ b/linkedin-sdk/src/main/java/com/linkedin/platform/errors/LIAuthError.java
@@ -0,0 +1,40 @@
+package com.linkedin.platform.errors;
+
+import android.util.Log;
+
+import org.json.JSONException;
+import org.json.JSONObject;
+
+public class LIAuthError {
+
+    private static final String TAG = LIAuthError.class.getName();
+
+    private LIAppErrorCode errorCode;
+    private String errorMsg;
+
+    public LIAuthError(String errorInfo, String errorMsg) {
+        LIAppErrorCode liAuthErrorCode = LIAppErrorCode.findErrorCode(errorInfo);
+        errorCode = liAuthErrorCode;
+        this.errorMsg = errorMsg;
+    }
+
+    public LIAuthError(LIAppErrorCode errorCode, String errorMsg) {
+        this.errorCode = errorCode;
+        this.errorMsg = errorMsg;
+    }
+
+    @Override
+    public String toString() {
+        try {
+            JSONObject jsonObject = new JSONObject();
+            jsonObject.put("errorCode", errorCode.name());
+            jsonObject.put("errorMessage", errorMsg);
+            return jsonObject.toString(2);
+        } catch (JSONException e) {
+            Log.d(TAG, e.getMessage());
+        }
+        return null;
+    }
+
+
+}
diff --git a/linkedin-sdk/src/main/java/com/linkedin/platform/errors/LIDeepLinkError.java b/linkedin-sdk/src/main/java/com/linkedin/platform/errors/LIDeepLinkError.java
new file mode 100644
index 0000000..423a6cd
--- /dev/null
+++ b/linkedin-sdk/src/main/java/com/linkedin/platform/errors/LIDeepLinkError.java
@@ -0,0 +1,56 @@
+/*
+    Copyright 2014 LinkedIn Corp.
+
+    Licensed under the Apache License, Version 2.0 (the "License");
+    you may not use this file except in compliance with the License.
+    You may obtain a copy of the License at
+
+        http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+*/
+
+package com.linkedin.platform.errors;
+
+import android.support.annotation.NonNull;
+import android.util.Log;
+
+import org.json.JSONException;
+import org.json.JSONObject;
+
+public class LIDeepLinkError {
+
+    private static final String TAG = LIDeepLinkError.class.getName();
+
+    private LIAppErrorCode errorCode;
+    private String errorMsg;
+
+    public LIDeepLinkError(@NonNull String errorInfo, String errorMsg) {
+        LIAppErrorCode liAppErrorCode = LIAppErrorCode.findErrorCode(errorInfo);
+        this.errorCode = liAppErrorCode;
+        this.errorMsg = errorMsg;
+    }
+
+    public LIDeepLinkError(LIAppErrorCode errorCode, String errorMsg) {
+        this.errorCode = errorCode;
+        this.errorMsg = errorMsg;
+    }
+
+    @Override
+    public String toString() {
+        try {
+            JSONObject jsonObject = new JSONObject();
+            jsonObject.put("errorCode", errorCode.name());
+            jsonObject.put("errorMessage", errorMsg);
+            return jsonObject.toString(2);
+        } catch (JSONException e) {
+            Log.d(TAG, e.getMessage());
+        }
+        return null;
+    }
+
+}
\ No newline at end of file
diff --git a/linkedin-sdk/src/main/java/com/linkedin/platform/internals/AppStore.java b/linkedin-sdk/src/main/java/com/linkedin/platform/internals/AppStore.java
new file mode 100644
index 0000000..0b6976b
--- /dev/null
+++ b/linkedin-sdk/src/main/java/com/linkedin/platform/internals/AppStore.java
@@ -0,0 +1,82 @@
+package com.linkedin.platform.internals;
+
+import android.app.Activity;
+import android.app.AlertDialog;
+import android.content.DialogInterface;
+import android.content.Intent;
+import android.net.Uri;
+import android.os.Build;
+
+import com.linkedin.android.mobilesdk.R;
+
+public class AppStore {
+
+    public static void goAppStore(final Activity activity, boolean showDialog) {
+        if (!showDialog) {
+            goToAppStore(activity);
+            return;
+        }
+        AlertDialog.Builder builder = new AlertDialog.Builder(activity);
+        builder.setMessage(R.string.update_linkedin_app_message)
+                .setTitle(R.string.update_linkedin_app_title);
+        builder.setPositiveButton(R.string.update_linkedin_app_download, new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialogInterface, int i) {
+                goToAppStore(activity);
+                dialogInterface.dismiss();
+            }
+        });
+        builder.setNegativeButton(R.string.update_linkedin_app_cancel, new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialogInterface, int i) {
+                dialogInterface.dismiss();
+            }
+        });
+        builder.create().show();
+    }
+
+    private static void goToAppStore(final Activity activity) {
+        SupportedAppStore appStore = SupportedAppStore.fromDeviceManufacturer();
+        String appStoreUri = appStore.getAppStoreUri();
+        Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(appStoreUri));
+        try {
+            activity.startActivity(intent);
+        } catch (android.content.ActivityNotFoundException e) {
+            //should not happen
+        }
+    }
+
+    private static enum SupportedAppStore {
+        amazonAppstore("amazon", "amzn://apps/android?p=com.linkedin.android"),
+        googlePlay("google", "market://details?id=com.linkedin.android"),
+        samsungApps("samsung", "samsungapps://ProductDetail/com.linkedin.android")
+        ;
+
+        private final String deviceManufacturer;
+        private final String appStoreUri;
+
+        private SupportedAppStore(String deviceManufacturer, String appStoreUri) {
+            this.deviceManufacturer = deviceManufacturer;
+            this.appStoreUri = appStoreUri;
+        }
+
+        public String getDeviceManufacturer() {
+            return deviceManufacturer;
+        }
+
+        public String getAppStoreUri() {
+            return appStoreUri;
+        }
+
+        public static SupportedAppStore fromDeviceManufacturer() {
+            for (SupportedAppStore appStore : values()) {
+                if(appStore.getDeviceManufacturer().equalsIgnoreCase(Build.MANUFACTURER)) {
+                    return appStore;
+                }
+            }
+            //return google play by default
+            return googlePlay;
+        }
+    };
+
+}
diff --git a/linkedin-sdk/src/main/java/com/linkedin/platform/internals/BuildConfig.java b/linkedin-sdk/src/main/java/com/linkedin/platform/internals/BuildConfig.java
new file mode 100644
index 0000000..7f33f8d
--- /dev/null
+++ b/linkedin-sdk/src/main/java/com/linkedin/platform/internals/BuildConfig.java
@@ -0,0 +1,21 @@
+/*
+    Copyright 2014 LinkedIn Corp.
+
+    Licensed under the Apache License, Version 2.0 (the "License");
+    you may not use this file except in compliance with the License.
+    You may obtain a copy of the License at
+
+        http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+*/
+package com.linkedin.platform.internals;
+
+public class BuildConfig {
+    public static final String MSDK_VERSION = "1.1.4";
+    public static final int LI_APP_SUPPORTED_VER_CODE = 123;
+}
diff --git a/linkedin-sdk/src/main/java/com/linkedin/platform/internals/LIAppVersion.java b/linkedin-sdk/src/main/java/com/linkedin/platform/internals/LIAppVersion.java
new file mode 100644
index 0000000..bc28ac4
--- /dev/null
+++ b/linkedin-sdk/src/main/java/com/linkedin/platform/internals/LIAppVersion.java
@@ -0,0 +1,27 @@
+package com.linkedin.platform.internals;
+
+import android.content.Context;
+import android.content.pm.PackageInfo;
+import android.content.pm.PackageManager;
+import android.support.annotation.NonNull;
+
+public class LIAppVersion {
+
+    public static final String LI_APP_PACKAGE_NAME = "com.linkedin.android";
+
+    public static boolean isLIAppCurrent(@NonNull Context ctx) {
+
+        return isLIAppCurrent(ctx, LI_APP_PACKAGE_NAME);
+    }
+
+    private static boolean isLIAppCurrent(@NonNull Context   ctx, @NonNull String packageName) {
+        PackageManager packageManager = ctx.getPackageManager();
+        try {
+            PackageInfo packageInfo = packageManager.getPackageInfo(packageName, PackageManager.GET_ACTIVITIES);
+            return packageInfo.versionCode >= BuildConfig.LI_APP_SUPPORTED_VER_CODE;
+        } catch (PackageManager.NameNotFoundException e) {
+        }
+        return false;
+    }
+
+}
diff --git a/linkedin-sdk/src/main/java/com/linkedin/platform/internals/QueueManager.java b/linkedin-sdk/src/main/java/com/linkedin/platform/internals/QueueManager.java
new file mode 100644
index 0000000..9dfc307
--- /dev/null
+++ b/linkedin-sdk/src/main/java/com/linkedin/platform/internals/QueueManager.java
@@ -0,0 +1,54 @@
+/*
+    Copyright 2014 LinkedIn Corp.
+
+    Licensed under the Apache License, Version 2.0 (the "License");
+    you may not use this file except in compliance with the License.
+    You may obtain a copy of the License at
+
+        http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+*/
+
+package com.linkedin.platform.internals;
+
+import android.content.Context;
+import android.support.annotation.NonNull;
+
+import com.android.volley.RequestQueue;
+import com.android.volley.toolbox.Volley;
+
+public class QueueManager {
+
+    private static final String TAG = QueueManager.class.getName();
+    private static QueueManager queueManager;
+    private Context ctx;
+    private RequestQueue requestQueue;
+
+    private QueueManager(Context context) {
+        ctx = context.getApplicationContext();
+        requestQueue = Volley.newRequestQueue(ctx);
+    }
+
+    public static void initQueueManager(@NonNull Context ctx) {
+        getInstance(ctx);
+    }
+
+    public static synchronized QueueManager getInstance(Context context) {
+        if (queueManager == null) {
+            queueManager = new QueueManager(context);
+        }
+        return queueManager;
+    }
+
+    public RequestQueue getRequestQueue() {
+        return requestQueue;
+    }
+
+
+
+}
diff --git a/linkedin-sdk/src/main/java/com/linkedin/platform/listeners/ApiListener.java b/linkedin-sdk/src/main/java/com/linkedin/platform/listeners/ApiListener.java
new file mode 100644
index 0000000..16912f8
--- /dev/null
+++ b/linkedin-sdk/src/main/java/com/linkedin/platform/listeners/ApiListener.java
@@ -0,0 +1,27 @@
+/*
+    Copyright 2014 LinkedIn Corp.
+
+    Licensed under the Apache License, Version 2.0 (the "License");
+    you may not use this file except in compliance with the License.
+    You may obtain a copy of the License at
+
+        http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+*/
+
+package com.linkedin.platform.listeners;
+
+import com.linkedin.platform.errors.LIApiError;
+
+public interface ApiListener {
+
+    void onApiSuccess(ApiResponse apiResponse);
+
+    void onApiError(LIApiError LIApiError);
+}
+
diff --git a/linkedin-sdk/src/main/java/com/linkedin/platform/listeners/ApiResponse.java b/linkedin-sdk/src/main/java/com/linkedin/platform/listeners/ApiResponse.java
new file mode 100644
index 0000000..2211b6d
--- /dev/null
+++ b/linkedin-sdk/src/main/java/com/linkedin/platform/listeners/ApiResponse.java
@@ -0,0 +1,88 @@
+/*
+    Copyright 2014 LinkedIn Corp.
+
+    Licensed under the Apache License, Version 2.0 (the "License");
+    you may not use this file except in compliance with the License.
+    You may obtain a copy of the License at
+
+        http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+*/
+
+package com.linkedin.platform.listeners;
+
+import android.util.Log;
+
+import org.json.JSONException;
+import org.json.JSONObject;
+
+public class ApiResponse {
+    private static final String TAG = ApiResponse.class.getSimpleName();
+    private static final String LOCATION = "Location";
+    private static final String STATUS_CODE = "StatusCode";
+    private static final String DATA = "responseData";
+
+    private final int statusCode;
+    private final String responseData;
+    private final String locationHeader;
+
+    public static synchronized ApiResponse buildApiResponse(JSONObject apiResponseAsJson) {
+        try {
+            int statusCode = apiResponseAsJson.optInt(STATUS_CODE);
+            String locationHeader = apiResponseAsJson.optString(LOCATION);
+            String responseData = apiResponseAsJson.getString(DATA);
+            return new ApiResponse(statusCode, responseData, locationHeader);
+        } catch (JSONException e) {
+            Log.d(TAG, e.getMessage());
+        }
+        return null;
+    }
+
+    public ApiResponse(int statusCode, String responseData, String locationHeader) {
+        this.statusCode = statusCode;
+        this.responseData = responseData;
+        this.locationHeader = locationHeader;
+    }
+
+    public int getStatusCode() {
+        return statusCode;
+    }
+
+    public String getResponseDataAsString() {
+        return responseData;
+    }
+
+    public JSONObject getResponseDataAsJson() {
+        if (responseData == null || "".equals(responseData)) {
+            return null;
+        }
+        try {
+            return new JSONObject(responseData);
+        } catch (JSONException e) {
+            Log.d(TAG, e.getMessage(), e);
+        }
+        return null;
+    }
+
+    public String getLocationHeader() {
+        return locationHeader;
+    }
+
+    @Override
+    public String toString() {
+        JSONObject apiResponseAsJson = new JSONObject();
+        try {
+            apiResponseAsJson.put(STATUS_CODE, statusCode);
+            apiResponseAsJson.put(DATA, responseData);
+            apiResponseAsJson.put(LOCATION, locationHeader);
+        } catch (JSONException e) {
+            Log.d(TAG, e.getMessage());
+        }
+        return apiResponseAsJson.toString();
+    }
+}
diff --git a/linkedin-sdk/src/main/java/com/linkedin/platform/listeners/AuthListener.java b/linkedin-sdk/src/main/java/com/linkedin/platform/listeners/AuthListener.java
new file mode 100644
index 0000000..fcf8001
--- /dev/null
+++ b/linkedin-sdk/src/main/java/com/linkedin/platform/listeners/AuthListener.java
@@ -0,0 +1,38 @@
+/*
+    Copyright 2014 LinkedIn Corp.
+
+    Licensed under the Apache License, Version 2.0 (the "License");
+    you may not use this file except in compliance with the License.
+    You may obtain a copy of the License at
+
+        http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+*/
+
+package com.linkedin.platform.listeners;
+
+import com.linkedin.platform.errors.LIAuthError;
+import com.linkedin.platform.errors.LIDeepLinkError;
+
+public interface AuthListener {
+
+    /**
+     * called when the application has been granted authorization to access the LinkedIn member's data
+     * see {@link com.linkedin.platform.APIHelper} and {@link com.linkedin.platform.DeepLinkHelper} for
+     * how to access LinkedIn data and interact with the LinkedIn application
+     */
+    void onAuthSuccess();
+
+    /**
+     * called when the application has not been granted authorization to access the LinkedIn member's
+     * data
+     * @param error information on why the authorization did not occur
+     */
+    void onAuthError(LIAuthError error);
+}
+
diff --git a/linkedin-sdk/src/main/java/com/linkedin/platform/listeners/DeepLinkListener.java b/linkedin-sdk/src/main/java/com/linkedin/platform/listeners/DeepLinkListener.java
new file mode 100644
index 0000000..0e81f6d
--- /dev/null
+++ b/linkedin-sdk/src/main/java/com/linkedin/platform/listeners/DeepLinkListener.java
@@ -0,0 +1,27 @@
+/*
+    Copyright 2014 LinkedIn Corp.
+
+    Licensed under the Apache License, Version 2.0 (the "License");
+    you may not use this file except in compliance with the License.
+    You may obtain a copy of the License at
+
+        http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+*/
+
+package com.linkedin.platform.listeners;
+
+import com.linkedin.platform.errors.LIDeepLinkError;
+
+public interface DeepLinkListener {
+
+    void onDeepLinkSuccess();
+
+    void onDeepLinkError(LIDeepLinkError error);
+}
+
diff --git a/linkedin-sdk/src/main/java/com/linkedin/platform/utils/Scope.java b/linkedin-sdk/src/main/java/com/linkedin/platform/utils/Scope.java
new file mode 100644
index 0000000..cf20e42
--- /dev/null
+++ b/linkedin-sdk/src/main/java/com/linkedin/platform/utils/Scope.java
@@ -0,0 +1,104 @@
+package com.linkedin.platform.utils;
+
+import java.util.Collection;
+import java.util.HashSet;
+import java.util.Set;
+
+/**
+ * Represents the types of data for which access is being requested.
+ */
+public class Scope {
+
+    /**
+     * Your Profile Overview 	Name, photo, headline, and current positions
+     */
+    public static final LIPermission R_BASICPROFILE = new LIPermission("r_basicprofile", "Name, photo, headline and current position");
+
+    /**
+     * Your Full Profile 	Full profile including experience, education, skills, and recommendations
+     */
+    public static final LIPermission R_FULLPROFILE = new LIPermission("r_fullprofile", "Full profile including experience, education, skills and recommendations");
+
+    /**
+     * Your Email Address 	The primary email address you use for your LinkedIn account
+     */
+    public static final LIPermission R_EMAILADDRESS = new LIPermission("r_emailaddress", "Your email address");
+
+    /**
+     * Your Contact Info 	Address, phone number, and bound accounts
+     */
+    public static final LIPermission R_CONTACTINFO = new LIPermission("r_contactinfo", "Your contact info");
+
+    /**
+     * Company Page & Analytics 	Edit company pages for which I am an Admin and post status updates on behalf of those companies
+     */
+    public static final LIPermission RW_COMPANY_ADMIN = new LIPermission("rw_company_admin", "Manage your company page and post updates");
+
+    /**
+     * Share, comment & like    Post updates, make comments and like posts
+     */
+    public static final LIPermission W_SHARE = new LIPermission("w_share", "Post updates, make comments and like posts as you");
+
+
+    private Set<LIPermission> permissions = new HashSet<LIPermission>();
+
+    /**
+     * build a Scope with the list of desired permissions
+     * @param permissions
+     * @return
+     */
+    public static synchronized Scope build(LIPermission... permissions) {
+        return new Scope(permissions);
+    }
+
+    private Scope(LIPermission... permissions) {
+        if (permissions == null) {
+            return;
+        }
+        for (LIPermission perm : permissions) {
+            this.permissions.add(perm);
+        }
+    }
+
+    public String createScope() {
+        return join(" ", permissions);
+    }
+
+    private static String join(CharSequence delimiter, Collection<LIPermission> tokens) {
+        StringBuilder sb = new StringBuilder();
+        boolean firstTime = true;
+        for (LIPermission token: tokens) {
+            if (firstTime) {
+                firstTime = false;
+            } else {
+                sb.append(delimiter);
+            }
+            sb.append(token.name);
+        }
+        return sb.toString();
+    }
+
+    @Override
+    public String toString() {
+        return createScope();
+    }
+
+    public static class LIPermission {
+        private final String name;
+        private final String description;
+
+        public LIPermission(String name, String description) {
+            this.name = name;
+            this.description = description;
+        }
+
+        public String getName() {
+            return name;
+        }
+
+        public String getDescription() {
+            return description;
+        }
+    }
+
+}
diff --git a/linkedin-sdk/src/main/res/drawable-hdpi/ic_launcher.png b/linkedin-sdk/src/main/res/drawable-hdpi/ic_launcher.png
new file mode 100644
index 0000000..96a442e
Binary files /dev/null and b/linkedin-sdk/src/main/res/drawable-hdpi/ic_launcher.png differ
diff --git a/linkedin-sdk/src/main/res/drawable-mdpi/ic_launcher.png b/linkedin-sdk/src/main/res/drawable-mdpi/ic_launcher.png
new file mode 100644
index 0000000..359047d
Binary files /dev/null and b/linkedin-sdk/src/main/res/drawable-mdpi/ic_launcher.png differ
diff --git a/linkedin-sdk/src/main/res/drawable-xhdpi/ic_launcher.png b/linkedin-sdk/src/main/res/drawable-xhdpi/ic_launcher.png
new file mode 100644
index 0000000..71c6d76
Binary files /dev/null and b/linkedin-sdk/src/main/res/drawable-xhdpi/ic_launcher.png differ
diff --git a/linkedin-sdk/src/main/res/drawable-xxhdpi/ic_launcher.png b/linkedin-sdk/src/main/res/drawable-xxhdpi/ic_launcher.png
new file mode 100644
index 0000000..4df1894
Binary files /dev/null and b/linkedin-sdk/src/main/res/drawable-xxhdpi/ic_launcher.png differ
diff --git a/linkedin-sdk/src/main/res/values/strings.xml b/linkedin-sdk/src/main/res/values/strings.xml
new file mode 100644
index 0000000..80d9323
--- /dev/null
+++ b/linkedin-sdk/src/main/res/values/strings.xml
@@ -0,0 +1,6 @@
+<resources>
+    <string name="update_linkedin_app_title">Update LinkedIn app</string>
+    <string name="update_linkedin_app_message">To connect with LinkedIn you need to update LinkedIn app. Would you like to do it?</string>
+    <string name="update_linkedin_app_download">Download</string>
+    <string name="update_linkedin_app_cancel">Cancel</string>
+</resources>
\ No newline at end of file
diff --git a/linkedin-sdk/src/test/AndroidManifest.xml b/linkedin-sdk/src/test/AndroidManifest.xml
new file mode 100644
index 0000000..532e1e0
--- /dev/null
+++ b/linkedin-sdk/src/test/AndroidManifest.xml
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.linkedin.mobilesdk.test"
+    android:versionCode="1"
+    android:versionName="1.0" >
+
+    <application />
+    <uses-permission android:name="android.permission.INTERNET"/>
+
+</manifest>
diff --git a/settings.gradle b/settings.gradle
old mode 100644
new mode 100755
index e7b4def..552ccfe
--- a/settings.gradle
+++ b/settings.gradle
@@ -1 +1 @@
-include ':app'
+include ':app', ':linkedin-sdk'
